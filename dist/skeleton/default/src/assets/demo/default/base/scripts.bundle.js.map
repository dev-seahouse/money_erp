{"version":3,"names":[],"mappings":"","sources":["scripts.bundle.js"],"sourcesContent":["/**\r\n * @class mUtil  Metronic base utilize class that privides helper functions\r\n */\r\n//== Polyfill\r\n// matches polyfill\r\nthis.Element && function(ElementPrototype) {\r\n    ElementPrototype.matches = ElementPrototype.matches ||\r\n        ElementPrototype.matchesSelector ||\r\n        ElementPrototype.webkitMatchesSelector ||\r\n        ElementPrototype.msMatchesSelector ||\r\n        function(selector) {\r\n            var node = this,\r\n                nodes = (node.parentNode || node.document).querySelectorAll(selector),\r\n                i = -1;\r\n            while (nodes[++i] && nodes[i] != node);\r\n            return !!nodes[i];\r\n        }\r\n}(Element.prototype);\r\n\r\n// closest polyfill\r\nthis.Element && function(ElementPrototype) {\r\n    ElementPrototype.closest = ElementPrototype.closest ||\r\n        function(selector) {\r\n            var el = this;\r\n            while (el.matches && !el.matches(selector)) el = el.parentNode;\r\n            return el.matches ? el : null;\r\n        }\r\n}(Element.prototype);\r\n\r\n\r\n// matches polyfill\r\nthis.Element && function(ElementPrototype) {\r\n    ElementPrototype.matches = ElementPrototype.matches ||\r\n        ElementPrototype.matchesSelector ||\r\n        ElementPrototype.webkitMatchesSelector ||\r\n        ElementPrototype.msMatchesSelector ||\r\n        function(selector) {\r\n            var node = this,\r\n                nodes = (node.parentNode || node.document).querySelectorAll(selector),\r\n                i = -1;\r\n            while (nodes[++i] && nodes[i] != node);\r\n            return !!nodes[i];\r\n        }\r\n}(Element.prototype);\r\n\r\n//\r\n// requestAnimationFrame polyfill by Erik MÃ¶ller.\r\n//  With fixes from Paul Irish and Tino Zijdel\r\n//\r\n//  http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n//  http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n//\r\n//  MIT license\r\n//\r\n(function() {\r\n    var lastTime = 0;\r\n    var vendors = ['webkit', 'moz'];\r\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame =\r\n            window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n\r\n    if (!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function(callback) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = window.setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n\r\n    if (!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\n// Source: https://github.com/jserz/js_piece/blob/master/DOM/ParentNode/prepend()/prepend().md\r\n(function(arr) {\r\n    arr.forEach(function(item) {\r\n        if (item.hasOwnProperty('prepend')) {\r\n            return;\r\n        }\r\n        Object.defineProperty(item, 'prepend', {\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true,\r\n            value: function prepend() {\r\n                var argArr = Array.prototype.slice.call(arguments),\r\n                    docFrag = document.createDocumentFragment();\r\n\r\n                argArr.forEach(function(argItem) {\r\n                    var isNode = argItem instanceof Node;\r\n                    docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\r\n                });\r\n\r\n                this.insertBefore(docFrag, this.firstChild);\r\n            }\r\n        });\r\n    });\r\n})([Element.prototype, Document.prototype, DocumentFragment.prototype]);\r\n\r\n//== Global variables \r\nwindow.mUtilElementDataStore = {};\r\nwindow.mUtilElementDataStoreID = 0;\r\nwindow.mUtilDelegatedEventHandlers = {};\r\n\r\nvar mUtil = function() {\r\n\r\n    var resizeHandlers = [];\r\n\r\n    /** @type {object} breakpoints The device width breakpoints **/\r\n    var breakpoints = {\r\n        sm: 544, // Small screen / phone           \r\n        md: 768, // Medium screen / tablet            \r\n        lg: 1024, // Large screen / desktop        \r\n        xl: 1200 // Extra large screen / wide desktop\r\n    };\r\n\r\n    /**\r\n     * Handle window resize event with some \r\n     * delay to attach event handlers upon resize complete \r\n     */\r\n    var _windowResizeHandler = function() {\r\n        var _runResizeHandlers = function() {\r\n            // reinitialize other subscribed elements\r\n            for (var i = 0; i < resizeHandlers.length; i++) {\r\n                var each = resizeHandlers[i];\r\n                each.call();\r\n            }\r\n        };\r\n\r\n        var timeout = false; // holder for timeout id\r\n        var delay = 250; // delay after event is \"complete\" to run callback\r\n\r\n        window.addEventListener('resize', function() {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(function() {\r\n                _runResizeHandlers();\r\n            }, delay); // wait 50ms until window resize finishes.\r\n        });\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Class main initializer.\r\n         * @param {object} options.\r\n         * @returns null\r\n         */\r\n        //main function to initiate the theme\r\n        init: function(options) {\r\n            if (options && options.breakpoints) {\r\n                breakpoints = options.breakpoints;\r\n            }\r\n\r\n            _windowResizeHandler();\r\n        },\r\n\r\n        /**\r\n         * Adds window resize event handler.\r\n         * @param {function} callback function.\r\n         */\r\n        addResizeHandler: function(callback) {\r\n            resizeHandlers.push(callback);\r\n        },\r\n\r\n        /**\r\n         * Removes window resize event handler.\r\n         * @param {function} callback function.\r\n         */\r\n        removeResizeHandler: function(callback) {\r\n            for (var i = 0; i < resizeHandlers.length; i++) {\r\n                if (callback === resizeHandlers[i]) {\r\n                    delete resizeHandlers[i];\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger window resize handlers.\r\n         */\r\n        runResizeHandlers: function() {\r\n            _runResizeHandlers();\r\n        },\r\n\r\n        resize: function() {\r\n            if (typeof(Event) === 'function') {\r\n                // modern browsers\r\n                window.dispatchEvent(new Event('resize'));\r\n            } else {\r\n                // for IE and other old browsers\r\n                // causes deprecation warning on modern browsers\r\n                var evt = window.document.createEvent('UIEvents'); \r\n                evt.initUIEvent('resize', true, false, window, 0); \r\n                window.dispatchEvent(evt);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get GET parameter value from URL.\r\n         * @param {string} paramName Parameter name.\r\n         * @returns {string}  \r\n         */\r\n        getURLParam: function(paramName) {\r\n            var searchString = window.location.search.substring(1),\r\n                i, val, params = searchString.split(\"&\");\r\n\r\n            for (i = 0; i < params.length; i++) {\r\n                val = params[i].split(\"=\");\r\n                if (val[0] == paramName) {\r\n                    return unescape(val[1]);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Checks whether current device is mobile touch.\r\n         * @returns {boolean}  \r\n         */\r\n        isMobileDevice: function() {\r\n            return (this.getViewPort().width < this.getBreakpoint('lg') ? true : false);\r\n        },\r\n\r\n        /**\r\n         * Checks whether current device is desktop.\r\n         * @returns {boolean}  \r\n         */\r\n        isDesktopDevice: function() {\r\n            return mUtil.isMobileDevice() ? false : true;\r\n        },\r\n\r\n        /**\r\n         * Gets browser window viewport size. Ref:\r\n         * http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\r\n         * @returns {object}  \r\n         */\r\n        getViewPort: function() {\r\n            var e = window,\r\n                a = 'inner';\r\n            if (!('innerWidth' in window)) {\r\n                a = 'client';\r\n                e = document.documentElement || document.body;\r\n            }\r\n\r\n            return {\r\n                width: e[a + 'Width'],\r\n                height: e[a + 'Height']\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Checks whether given device mode is currently activated.\r\n         * @param {string} mode Responsive mode name(e.g: desktop,\r\n         *     desktop-and-tablet, tablet, tablet-and-mobile, mobile)\r\n         * @returns {boolean}  \r\n         */\r\n        isInResponsiveRange: function(mode) {\r\n            var breakpoint = this.getViewPort().width;\r\n\r\n            if (mode == 'general') {\r\n                return true;\r\n            } else if (mode == 'desktop' && breakpoint >= (this.getBreakpoint('lg') + 1)) {\r\n                return true;\r\n            } else if (mode == 'tablet' && (breakpoint >= (this.getBreakpoint('md') + 1) && breakpoint < this.getBreakpoint('lg'))) {\r\n                return true;\r\n            } else if (mode == 'mobile' && breakpoint <= this.getBreakpoint('md')) {\r\n                return true;\r\n            } else if (mode == 'desktop-and-tablet' && breakpoint >= (this.getBreakpoint('md') + 1)) {\r\n                return true;\r\n            } else if (mode == 'tablet-and-mobile' && breakpoint <= this.getBreakpoint('lg')) {\r\n                return true;\r\n            } else if (mode == 'minimal-desktop-and-below' && breakpoint <= this.getBreakpoint('xl')) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Generates unique ID for give prefix.\r\n         * @param {string} prefix Prefix for generated ID\r\n         * @returns {boolean}  \r\n         */\r\n        getUniqueID: function(prefix) {\r\n            return prefix + Math.floor(Math.random() * (new Date()).getTime());\r\n        },\r\n\r\n        /**\r\n         * Gets window width for give breakpoint mode.\r\n         * @param {string} mode Responsive mode name(e.g: xl, lg, md, sm)\r\n         * @returns {number}  \r\n         */\r\n        getBreakpoint: function(mode) {\r\n            return breakpoints[mode];\r\n        },\r\n\r\n        /**\r\n         * Checks whether object has property matchs given key path.\r\n         * @param {object} obj Object contains values paired with given key path\r\n         * @param {string} keys Keys path seperated with dots\r\n         * @returns {object}  \r\n         */\r\n        isset: function(obj, keys) {\r\n            var stone;\r\n\r\n            keys = keys || '';\r\n\r\n            if (keys.indexOf('[') !== -1) {\r\n                throw new Error('Unsupported object path notation.');\r\n            }\r\n\r\n            keys = keys.split('.');\r\n\r\n            do {\r\n                if (obj === undefined) {\r\n                    return false;\r\n                }\r\n\r\n                stone = keys.shift();\r\n\r\n                if (!obj.hasOwnProperty(stone)) {\r\n                    return false;\r\n                }\r\n\r\n                obj = obj[stone];\r\n\r\n            } while (keys.length);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Gets highest z-index of the given element parents\r\n         * @param {object} el jQuery element object\r\n         * @returns {number}  \r\n         */\r\n        getHighestZindex: function(el) {\r\n            var elem = mUtil.get(el),\r\n                position, value;\r\n\r\n            while (elem && elem !== document) {\r\n                // Ignore z-index if position is set to a value where z-index is ignored by the browser\r\n                // This makes behavior of this function consistent across browsers\r\n                // WebKit always returns auto if the element is positioned\r\n                position = mUtil.css(elem, 'position');\r\n\r\n                if (position === \"absolute\" || position === \"relative\" || position === \"fixed\") {\r\n                    // IE returns 0 when zIndex is not specified\r\n                    // other browsers return a string\r\n                    // we ignore the case of nested elements with an explicit value of 0\r\n                    // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\r\n                    value = parseInt(mUtil.css(elem, 'z-index'));\r\n\r\n                    if (!isNaN(value) && value !== 0) {\r\n                        return value;\r\n                    }\r\n                }\r\n\r\n                elem = elem.parentNode;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Checks whether the element has any parent with fixed positionfreg\r\n         * @param {object} el jQuery element object\r\n         * @returns {boolean}  \r\n         */\r\n        hasFixedPositionedParent: function(el) {\r\n            while (el && el !== document) {\r\n                position = mUtil.css(el, 'position');\r\n\r\n                if (position === \"fixed\") {\r\n                    return true;\r\n                }\r\n\r\n                el = el.parentNode;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Simulates delay\r\n         */\r\n        sleep: function(milliseconds) {\r\n            var start = new Date().getTime();\r\n            for (var i = 0; i < 1e7; i++) {\r\n                if ((new Date().getTime() - start) > milliseconds) {\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets randomly generated integer value within given min and max range\r\n         * @param {number} min Range start value\r\n         * @param {number} min Range end value\r\n         * @returns {number}  \r\n         */\r\n        getRandomInt: function(min, max) {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        },\r\n\r\n        /**\r\n         * Checks whether Angular library is included\r\n         * @returns {boolean}  \r\n         */\r\n        isAngularVersion: function() {\r\n            return window.Zone !== undefined ? true : false;\r\n        },\r\n\r\n        //== jQuery Workarounds\r\n\r\n        //== Deep extend:  $.extend(true, {}, objA, objB);\r\n        deepExtend: function(out) {\r\n            out = out || {};\r\n\r\n            for (var i = 1; i < arguments.length; i++) {\r\n                var obj = arguments[i];\r\n\r\n                if (!obj)\r\n                    continue;\r\n\r\n                for (var key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        if (typeof obj[key] === 'object')\r\n                            out[key] = mUtil.deepExtend(out[key], obj[key]);\r\n                        else\r\n                            out[key] = obj[key];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return out;\r\n        },\r\n\r\n        //== extend:  $.extend({}, objA, objB); \r\n        extend: function(out) {\r\n            out = out || {};\r\n\r\n            for (var i = 1; i < arguments.length; i++) {\r\n                if (!arguments[i])\r\n                    continue;\r\n\r\n                for (var key in arguments[i]) {\r\n                    if (arguments[i].hasOwnProperty(key))\r\n                        out[key] = arguments[i][key];\r\n                }\r\n            }\r\n\r\n            return out;\r\n        },\r\n\r\n        get: function(query) {\r\n            var el;\r\n\r\n            if (query === document) {\r\n                return document;\r\n            }\r\n\r\n            if (!!(query && query.nodeType === 1)) {\r\n                return query;\r\n            }\r\n\r\n            if (el = document.getElementById(query)) {\r\n                return el;\r\n            } else if (el = document.getElementsByTagName(query)) {\r\n                return el[0];\r\n            } else if (el = document.getElementsByClassName(query)) {\r\n                return el[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        getByClass: function(query) {\r\n            var el;\r\n            \r\n            if (el = document.getElementsByClassName(query)) {\r\n                return el[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Checks whether the element has given classes\r\n         * @param {object} el jQuery element object\r\n         * @param {string} Classes string\r\n         * @returns {boolean}  \r\n         */\r\n        hasClasses: function(el, classes) {\r\n            if (!el) {\r\n                return;\r\n            }\r\n\r\n            var classesArr = classes.split(\" \");\r\n\r\n            for (var i = 0; i < classesArr.length; i++) {\r\n                if (mUtil.hasClass(el, mUtil.trim(classesArr[i])) == false) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        hasClass: function(el, className) {\r\n            if (!el) {\r\n                return;\r\n            }\r\n\r\n            return el.classList ? el.classList.contains(className) : new RegExp('\\\\b' + className + '\\\\b').test(el.className);\r\n        },\r\n\r\n        addClass: function(el, className) {\r\n            if (!el || typeof className === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            var classNames = className.split(' ');\r\n\r\n            if (el.classList) {\r\n                for (var i = 0; i < classNames.length; i++) {\r\n                    if (classNames[i] && classNames[i].length > 0) {\r\n                        el.classList.add(mUtil.trim(classNames[i]));\r\n                    }\r\n                }\r\n            } else if (!mUtil.hasClass(el, className)) {\r\n                for (var i = 0; i < classNames.length; i++) {\r\n                    el.className += ' ' + mUtil.trim(classNames[i]);\r\n                }\r\n            }\r\n        },\r\n\r\n        removeClass: function(el, className) {\r\n            if (!el) {\r\n                return;\r\n            }\r\n\r\n            var classNames = className.split(' ');\r\n\r\n            if (el.classList) {\r\n                for (var i = 0; i < classNames.length; i++) {\r\n                    el.classList.remove(mUtil.trim(classNames[i]));\r\n                }\r\n            } else if (mUtil.hasClass(el, className)) {\r\n                for (var i = 0; i < classNames.length; i++) {\r\n                    el.className = el.className.replace(new RegExp('\\\\b' + mUtil.trim(classNames[i]) + '\\\\b', 'g'), '');\r\n                }\r\n            }\r\n        },\r\n\r\n        triggerCustomEvent: function(el, eventName, data) {\r\n            if (window.CustomEvent) {\r\n                var event = new CustomEvent(eventName, {\r\n                    detail: data\r\n                });\r\n            } else {\r\n                var event = document.createEvent('CustomEvent');\r\n                event.initCustomEvent(eventName, true, true, data);\r\n            }\r\n\r\n            el.dispatchEvent(event);\r\n        },\r\n\r\n        trim: function(string) {\r\n            return string.trim();\r\n        },\r\n\r\n        eventTriggered: function(e) {\r\n            if (e.currentTarget.dataset.triggered) {\r\n                return true;\r\n            } else {\r\n                e.currentTarget.dataset.triggered = true;\r\n\r\n                return false;\r\n            }\r\n        },\r\n\r\n        remove: function(el) {\r\n            if (el && el.parentNode) {\r\n                el.parentNode.removeChild(el);\r\n            }\r\n        },\r\n\r\n        find: function(parent, query) {\r\n            return parent.querySelector(query);\r\n        },\r\n\r\n        findAll: function(parent, query) {\r\n            return parent.querySelectorAll(query);\r\n        },\r\n\r\n        insertAfter: function(el, referenceNode) {\r\n            return referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\r\n        },\r\n\r\n        parents: function(el, query) {\r\n            function collectionHas(a, b) { //helper function (see below)\r\n                for (var i = 0, len = a.length; i < len; i++) {\r\n                    if (a[i] == b) return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function findParentBySelector(el, selector) {\r\n                var all = document.querySelectorAll(selector);\r\n                var cur = el.parentNode;\r\n\r\n                while (cur && !collectionHas(all, cur)) { //keep going up until you find a match\r\n                    cur = cur.parentNode; //go up\r\n                }\r\n\r\n                return cur; //will return null if not found\r\n            }\r\n\r\n            return findParentBySelector(el, query);\r\n        },\r\n\r\n        children: function(el, selector, log) {\r\n            if (!el || !el.childNodes) {\r\n                return;\r\n            }\r\n\r\n            var result = [],\r\n                i = 0,\r\n                l = el.childNodes.length;\r\n\r\n            for (var i; i < l; ++i) {\r\n                if (el.childNodes[i].nodeType == 1 && mUtil.matches(el.childNodes[i], selector, log)) {\r\n                    result.push(el.childNodes[i]);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        child: function(el, selector, log) {\r\n            var children = mUtil.children(el, selector, log);\r\n\r\n            return children ? children[0] : null;\r\n        },\r\n\r\n        matches: function(el, selector, log) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n\r\n            if (el && el.tagName) {\r\n                return f.call(el, selector);\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        data: function(element) {\r\n            element = mUtil.get(element);\r\n\r\n            return {\r\n                set: function(name, data) {\r\n                    if (element.customDataTag === undefined) {\r\n                        mUtilElementDataStoreID++;\r\n                        element.customDataTag = mUtilElementDataStoreID;\r\n                    }\r\n\r\n                    if (mUtilElementDataStore[element.customDataTag] === undefined) {\r\n                        mUtilElementDataStore[element.customDataTag] = {};\r\n                    }\r\n\r\n                    mUtilElementDataStore[element.customDataTag][name] = data;\r\n                },\r\n\r\n                get: function(name) {\r\n                    return this.has(name) ? mUtilElementDataStore[element.customDataTag][name] : null;\r\n                },\r\n\r\n                has: function(name) {\r\n                    return (mUtilElementDataStore[element.customDataTag] && mUtilElementDataStore[element.customDataTag][name]) ? true : false;\r\n                },\r\n\r\n                remove: function(name) {\r\n                    if (this.has(name)) {\r\n                        delete mUtilElementDataStore[element.customDataTag][name];\r\n                    }\r\n                }\r\n            };\r\n        },\r\n\r\n        outerWidth: function(el, margin) {\r\n            var width;\r\n\r\n            if (margin === true) {\r\n                var width = parseFloat(el.offsetWidth);\r\n                width += parseFloat(mUtil.css(el, 'margin-left')) + parseFloat(mUtil.css(el, 'margin-right'));\r\n\r\n                return parseFloat(width);\r\n            } else {\r\n                var width = parseFloat(el.offsetWidth);\r\n\r\n                return width;\r\n            }\r\n        },\r\n\r\n        offset: function(elem) {\r\n            var rect, win;\r\n            elem = mUtil.get(elem);\r\n\r\n            if ( !elem ) {\r\n                return;\r\n            }\r\n\r\n            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\r\n            // Support: IE <=11 only\r\n            // Running getBoundingClientRect on a\r\n            // disconnected node in IE throws an error\r\n\r\n            if ( !elem.getClientRects().length ) {\r\n                return { top: 0, left: 0 };\r\n            }\r\n\r\n            // Get document-relative position by adding viewport scroll to viewport-relative gBCR\r\n            rect = elem.getBoundingClientRect();\r\n            win = elem.ownerDocument.defaultView;\r\n\r\n            return {\r\n                top: rect.top + win.pageYOffset,\r\n                left: rect.left + win.pageXOffset\r\n            };\r\n        },\r\n\r\n        height: function(el) {\r\n            return mUtil.css(el, 'height');\r\n        },\r\n\r\n        visible: function(el) {\r\n            return !(el.offsetWidth === 0 && el.offsetHeight === 0);\r\n        },\r\n\r\n        attr: function(el, name, value) {\r\n            el = mUtil.get(el);\r\n\r\n            if (el == undefined) {\r\n                return;\r\n            }\r\n\r\n            if (value !== undefined) {\r\n                el.setAttribute(name, value);\r\n            } else {\r\n                return el.getAttribute(name);\r\n            }\r\n        },\r\n\r\n        hasAttr: function(el, name) {\r\n            el = mUtil.get(el);\r\n\r\n            if (el == undefined) {\r\n                return;\r\n            }\r\n\r\n            return el.getAttribute(name) ? true : false;\r\n        },\r\n\r\n        removeAttr: function(el, name) {\r\n            el = mUtil.get(el);\r\n\r\n            if (el == undefined) {\r\n                return;\r\n            }\r\n\r\n            el.removeAttribute(name);\r\n        },\r\n\r\n        animate: function(from, to, duration, update, easing, done) {\r\n            /**\r\n             * TinyAnimate.easings\r\n             *  Adapted from jQuery Easing\r\n             */\r\n            var easings = {};\r\n            var easing;\r\n\r\n            easings.linear = function(t, b, c, d) {\r\n                return c * t / d + b;\r\n            };\r\n\r\n            easing = easings.linear;\r\n\r\n            // Early bail out if called incorrectly\r\n            if (typeof from !== 'number' ||\r\n                typeof to !== 'number' ||\r\n                typeof duration !== 'number' ||\r\n                typeof update !== 'function') {\r\n                return;\r\n            }\r\n\r\n            // Create mock done() function if necessary\r\n            if (typeof done !== 'function') {\r\n                done = function() {};\r\n            }\r\n\r\n            // Pick implementation (requestAnimationFrame | setTimeout)\r\n            var rAF = window.requestAnimationFrame || function(callback) {\r\n                window.setTimeout(callback, 1000 / 50);\r\n            };\r\n\r\n            // Animation loop\r\n            var canceled = false;\r\n            var change = to - from;\r\n\r\n            function loop(timestamp) {\r\n                var time = (timestamp || +new Date()) - start;\r\n\r\n                if (time >= 0) {\r\n                    update(easing(time, from, change, duration));\r\n                }\r\n                if (time >= 0 && time >= duration) {\r\n                    update(to);\r\n                    done();\r\n                } else {\r\n                    rAF(loop);\r\n                }\r\n            }\r\n\r\n            update(from);\r\n\r\n            // Start animation loop\r\n            var start = window.performance && window.performance.now ? window.performance.now() : +new Date();\r\n\r\n            rAF(loop);\r\n        },\r\n\r\n        actualCss: function(el, prop, cache) {\r\n            if (el instanceof HTMLElement === false) {\r\n                return;\r\n            }\r\n\r\n            if (!el.getAttribute('m-hidden-' + prop) || cache === false) {\r\n                var value;\r\n\r\n                // the element is hidden so:\r\n                // making the el block so we can meassure its height but still be hidden\r\n                el.style.cssText = 'position: absolute; visibility: hidden; display: block;';\r\n\r\n                if (prop == 'width') {\r\n                    value = el.offsetWidth;\r\n                } else if (prop == 'height') {\r\n                    value = el.offsetHeight;\r\n                }\r\n\r\n                el.style.cssText = '';\r\n\r\n                // store it in cache\r\n                el.setAttribute('m-hidden-' + prop, value);\r\n\r\n                return parseFloat(value);\r\n            } else {\r\n                // store it in cache\r\n                return parseFloat(el.getAttribute('m-hidden-' + prop));\r\n            }\r\n        },\r\n\r\n        actualHeight: function(el, cache) {\r\n            return mUtil.actualCss(el, 'height', cache);\r\n        },\r\n\r\n        actualWidth: function(el, cache) {\r\n            return mUtil.actualCss(el, 'width', cache);\r\n        },\r\n\r\n        getScroll: function(element, method) {\r\n            // The passed in `method` value should be 'Top' or 'Left'\r\n            method = 'scroll' + method;\r\n            return (element == window || element == document) ? (\r\n                self[(method == 'scrollTop') ? 'pageYOffset' : 'pageXOffset'] ||\r\n                (browserSupportsBoxModel && document.documentElement[method]) ||\r\n                document.body[method]\r\n            ) : element[method];\r\n        },\r\n\r\n        css: function(el, styleProp, value) {\r\n            el = mUtil.get(el);\r\n\r\n            if (!el) {\r\n                return;\r\n            }\r\n\r\n            if (value !== undefined) {\r\n                el.style[styleProp] = value;\r\n            } else {\r\n                var value, defaultView = (el.ownerDocument || document).defaultView;\r\n                // W3C standard way:\r\n                if (defaultView && defaultView.getComputedStyle) {\r\n                    // sanitize property name to css notation\r\n                    // (hyphen separated words eg. font-Size)\r\n                    styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n                    return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\r\n                } else if (el.currentStyle) { // IE\r\n                    // sanitize property name to camelCase\r\n                    styleProp = styleProp.replace(/\\-(\\w)/g, function(str, letter) {\r\n                        return letter.toUpperCase();\r\n                    });\r\n                    value = el.currentStyle[styleProp];\r\n                    // convert other units to pixels on IE\r\n                    if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\r\n                        return (function(value) {\r\n                            var oldLeft = el.style.left,\r\n                                oldRsLeft = el.runtimeStyle.left;\r\n                            el.runtimeStyle.left = el.currentStyle.left;\r\n                            el.style.left = value || 0;\r\n                            value = el.style.pixelLeft + \"px\";\r\n                            el.style.left = oldLeft;\r\n                            el.runtimeStyle.left = oldRsLeft;\r\n                            return value;\r\n                        })(value);\r\n                    }\r\n                    return value;\r\n                }\r\n            }\r\n        },\r\n\r\n        slide: function(el, dir, speed, callback, recalcMaxHeight) {\r\n            if (!el || (dir == 'up' && mUtil.visible(el) === false) || (dir == 'down' && mUtil.visible(el) === true)) {\r\n                return;\r\n            }\r\n\r\n            speed = (speed ? speed : 600);\r\n            var calcHeight = mUtil.actualHeight(el);\r\n            var calcPaddingTop = false;\r\n            var calcPaddingBottom = false;\r\n\r\n            if (mUtil.css(el, 'padding-top') && mUtil.data(el).has('slide-padding-top') !== true) {\r\n                mUtil.data(el).set('slide-padding-top', mUtil.css(el, 'padding-top'));\r\n            }\r\n\r\n            if (mUtil.css(el, 'padding-bottom') && mUtil.data(el).has('slide-padding-bottom') !== true) {\r\n                mUtil.data(el).set('slide-padding-bottom', mUtil.css(el, 'padding-bottom'));\r\n            }\r\n\r\n            if (mUtil.data(el).has('slide-padding-top')) {\r\n                calcPaddingTop = parseInt(mUtil.data(el).get('slide-padding-top'));\r\n            }\r\n\r\n            if (mUtil.data(el).has('slide-padding-bottom')) {\r\n                calcPaddingBottom = parseInt(mUtil.data(el).get('slide-padding-bottom'));\r\n            }\r\n\r\n            if (dir == 'up') { // up          \r\n                el.style.cssText = 'display: block; overflow: hidden;';\r\n\r\n                if (calcPaddingTop) {\r\n                    mUtil.animate(0, calcPaddingTop, speed, function(value) {\r\n                        el.style.paddingTop = (calcPaddingTop - value) + 'px';\r\n                    }, 'linear');\r\n                }\r\n\r\n                if (calcPaddingBottom) {\r\n                    mUtil.animate(0, calcPaddingBottom, speed, function(value) {\r\n                        el.style.paddingBottom = (calcPaddingBottom - value) + 'px';\r\n                    }, 'linear');\r\n                }\r\n\r\n                mUtil.animate(0, calcHeight, speed, function(value) {\r\n                    el.style.height = (calcHeight - value) + 'px';\r\n                }, 'linear', function() {\r\n                    callback();\r\n                    el.style.height = '';\r\n                    el.style.display = 'none';\r\n                });\r\n\r\n\r\n            } else if (dir == 'down') { // down\r\n                el.style.cssText = 'display: block; overflow: hidden;';\r\n\r\n                if (calcPaddingTop) {\r\n                    mUtil.animate(0, calcPaddingTop, speed, function(value) {\r\n                        el.style.paddingTop = value + 'px';\r\n                    }, 'linear', function() {\r\n                        el.style.paddingTop = '';\r\n                    });\r\n                }\r\n\r\n                if (calcPaddingBottom) {\r\n                    mUtil.animate(0, calcPaddingBottom, speed, function(value) {\r\n                        el.style.paddingBottom = value + 'px';\r\n                    }, 'linear', function() {\r\n                        el.style.paddingBottom = '';\r\n                    });\r\n                }\r\n\r\n                mUtil.animate(0, calcHeight, speed, function(value) {\r\n                    el.style.height = value + 'px';\r\n                }, 'linear', function() {\r\n                    callback();\r\n                    el.style.height = '';\r\n                    el.style.display = '';\r\n                    el.style.overflow = '';\r\n                });\r\n            }\r\n        },\r\n\r\n        slideUp: function(el, speed, callback) {\r\n            mUtil.slide(el, 'up', speed, callback);\r\n        },\r\n\r\n        slideDown: function(el, speed, callback) {\r\n            mUtil.slide(el, 'down', speed, callback);\r\n        },\r\n\r\n        show: function(el, display) {\r\n            el.style.display = (display ? display : 'block');\r\n        },\r\n\r\n        hide: function(el) {\r\n            el.style.display = 'none';\r\n        },\r\n\r\n        addEvent: function(el, type, handler, one) {\r\n            el = mUtil.get(el);\r\n            if (typeof el !== 'undefined') {\r\n                el.addEventListener(type, handler);\r\n            }\r\n        },\r\n\r\n        removeEvent: function(el, type, handler) {\r\n            el = mUtil.get(el);\r\n            el.removeEventListener(type, handler);\r\n        },\r\n\r\n        on: function(element, selector, event, handler) {\r\n            if (!selector) {\r\n                return;\r\n            }\r\n\r\n            var eventId = mUtil.getUniqueID('event');\r\n\r\n            mUtilDelegatedEventHandlers[eventId] = function(e) {\r\n                var targets = element.querySelectorAll(selector);\r\n                var target = e.target;\r\n\r\n                while (target && target !== element) {\r\n                    for (var i = 0, j = targets.length; i < j; i++) {\r\n                        if (target === targets[i]) {\r\n                            handler.call(target, e);\r\n                        }\r\n                    }\r\n\r\n                    target = target.parentNode;\r\n                }\r\n            }\r\n\r\n            mUtil.addEvent(element, event, mUtilDelegatedEventHandlers[eventId]);\r\n\r\n            return eventId;\r\n        },\r\n\r\n        off: function(element, event, eventId) {\r\n            if (!element || !mUtilDelegatedEventHandlers[eventId]) {\r\n                return;\r\n            }\r\n\r\n            mUtil.removeEvent(element, event, mUtilDelegatedEventHandlers[eventId]);\r\n\r\n            delete mUtilDelegatedEventHandlers[eventId];\r\n        },\r\n\r\n        one: function onetime(el, type, callback) {\r\n            el = mUtil.get(el);\r\n\r\n            el.addEventListener(type, function(e) {\r\n                // remove event\r\n                e.target.removeEventListener(e.type, arguments.callee);\r\n                // call handler\r\n                return callback(e);\r\n            });\r\n        },\r\n\r\n        hash: function(str) {\r\n            var hash = 0,\r\n                i, chr;\r\n\r\n            if (str.length === 0) return hash;\r\n            for (i = 0; i < str.length; i++) {\r\n                chr = str.charCodeAt(i);\r\n                hash = ((hash << 5) - hash) + chr;\r\n                hash |= 0; // Convert to 32bit integer\r\n            }\r\n\r\n            return hash;\r\n        },\r\n\r\n        animateClass: function(el, animationName, callback) {\r\n            var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';\r\n\r\n            mUtil.addClass(el, 'animated ' + animationName);\r\n\r\n            mUtil.one(el, animationEnd, function() {\r\n                mUtil.removeClass(el, 'animated ' + animationName);\r\n            });\r\n\r\n            if (callback) {\r\n                mUtil.one(el.animationEnd, callback);\r\n            }\r\n        },\r\n\r\n        animateDelay: function(el, value) {\r\n            var vendors = ['webkit-', 'moz-', 'ms-', 'o-', ''];\r\n            for (var i = 0; i < vendors.length; i++) {\r\n                mUtil.css(el, vendors[i] + 'animation-delay', value);\r\n            }\r\n        },\r\n\r\n        animateDuration: function(el, value) {\r\n            var vendors = ['webkit-', 'moz-', 'ms-', 'o-', ''];\r\n            for (var i = 0; i < vendors.length; i++) {\r\n                mUtil.css(el, vendors[i] + 'animation-duration', value);\r\n            }\r\n        },\r\n\r\n        scrollTo: function(target, offset, duration) {\r\n            var duration = duration ? duration : 500;\r\n            var target = mUtil.get(target);\r\n            var targetPos = target ? mUtil.offset(target).top : 0;\r\n            var scrollPos = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n            var from, to;\r\n\r\n            if (targetPos > scrollPos) {\r\n                from = targetPos;\r\n                to = scrollPos;\r\n            } else {\r\n                from = scrollPos;\r\n                to = targetPos;\r\n            }\r\n\r\n            if (offset) {\r\n                to += offset;\r\n            }\r\n\r\n            mUtil.animate(from, to, duration, function(value) {\r\n                document.documentElement.scrollTop = value;\r\n                document.body.parentNode.scrollTop = value;\r\n                document.body.scrollTop = value;\r\n            }); //, easing, done\r\n        },\r\n\r\n        scrollTop: function(offset, duration) {\r\n            mUtil.scrollTo(null, offset, duration);\r\n        },\r\n\r\n        isArray: function(obj) {\r\n            return obj && Array.isArray(obj);\r\n        },\r\n\r\n        ready: function(callback) {\r\n            if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n                callback();\r\n            } else {\r\n                document.addEventListener('DOMContentLoaded', callback);\r\n            }\r\n        },\r\n\r\n        isEmpty: function(obj) {\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        numberString: function(nStr) {\r\n            nStr += '';\r\n            var x = nStr.split('.');\r\n            var x1 = x[0];\r\n            var x2 = x.length > 1 ? '.' + x[1] : '';\r\n            var rgx = /(\\d+)(\\d{3})/;\r\n            while (rgx.test(x1)) {\r\n                x1 = x1.replace(rgx, '$1' + ',' + '$2');\r\n            }\r\n            return x1 + x2;\r\n        },\r\n\r\n        detectIE: function() {\r\n            var ua = window.navigator.userAgent;\r\n\r\n            // Test values; Uncomment to check result â¦\r\n\r\n            // IE 10\r\n            // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\r\n\r\n            // IE 11\r\n            // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\r\n\r\n            // Edge 12 (Spartan)\r\n            // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\r\n\r\n            // Edge 13\r\n            // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\r\n\r\n            var msie = ua.indexOf('MSIE ');\r\n            if (msie > 0) {\r\n                // IE 10 or older => return version number\r\n                return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n            }\r\n\r\n            var trident = ua.indexOf('Trident/');\r\n            if (trident > 0) {\r\n                // IE 11 => return version number\r\n                var rv = ua.indexOf('rv:');\r\n                return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\r\n            }\r\n\r\n            var edge = ua.indexOf('Edge/');\r\n            if (edge > 0) {\r\n                // Edge (IE 12+) => return version number\r\n                return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\r\n            }\r\n\r\n            // other browser\r\n            return false;\r\n        },\r\n\r\n        isRTL: function() {\r\n            return (mUtil.attr(mUtil.get('html'), 'direction') == 'rtl');\r\n        },\r\n\r\n        //== Scroller\r\n        scrollerInit: function(element, options) {\r\n            //== Define init function\r\n            function init() {\r\n                var ps;\r\n                var height;\r\n\r\n                if (options.height instanceof Function) {\r\n                    height = parseInt(options.height.call());\r\n                } else {\r\n                    height = parseInt(options.height);\r\n                }\r\n\r\n                //== Destroy scroll on table and mobile modes\r\n                if (options.disableForMobile && mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                    if (ps = mUtil.data(element).get('ps')) {\r\n                        if (options.resetHeightOnDestroy) {\r\n                            mUtil.css(element, 'height', 'auto');\r\n                        } else {\r\n                            mUtil.css(element, 'overflow', 'auto');\r\n                            if (height > 0) {\r\n                                mUtil.css(element, 'height', height + 'px');\r\n                            }\r\n                        }\r\n\r\n                        ps.destroy();\r\n                        ps = mUtil.data(element).remove('ps');\r\n                    } else if (height > 0){\r\n                        mUtil.css(element, 'overflow', 'auto');\r\n                        mUtil.css(element, 'height', height + 'px');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                if (height > 0) {\r\n                    mUtil.css(element, 'height', height + 'px');\r\n                }\r\n\r\n                mUtil.css(element, 'overflow', 'hidden');\r\n\r\n                //== Init scroll\r\n                if (ps = mUtil.data(element).get('ps')) {\r\n                    ps.update();\r\n                } else {\r\n                    mUtil.addClass(element, 'm-scroller');\r\n                    ps = new PerfectScrollbar(element, {\r\n                        wheelSpeed: 0.5,\r\n                        swipeEasing: true,\r\n                        wheelPropagation: false,\r\n                        minScrollbarLength: 40,\r\n                        suppressScrollX: true\r\n                    });\r\n\r\n                    mUtil.data(element).set('ps', ps);\r\n                }\r\n            }\r\n\r\n            //== Init\r\n            init();\r\n\r\n            //== Handle window resize\r\n            if (options.handleWindowResize) {\r\n                mUtil.addResizeHandler(function() {\r\n                    init();\r\n                });\r\n            }\r\n        },\r\n\r\n        scrollerUpdate: function(element) {\r\n            var ps;\r\n            if (ps = mUtil.data(element).get('ps')) {\r\n                console.log('update!');\r\n                ps.update();\r\n            }\r\n        },\r\n\r\n        scrollersUpdate: function(parent) {\r\n            var scrollers = mUtil.findAll(parent, '.ps');\r\n            for (var i = 0, len = scrollers.length; i < len; i++) {\r\n                mUtil.scrollerUpdate(scrollers[i]);\r\n            }\r\n        },\r\n\r\n        scrollerTop: function(element) {\r\n            var ps;\r\n            if (ps = mUtil.data(element).get('ps')) {\r\n                element.scrollTop = 0;\r\n            }\r\n        },\r\n\r\n        scrollerDestroy: function(element) {\r\n            var ps;\r\n            if (ps = mUtil.data(element).get('ps')) {\r\n                ps.destroy();\r\n                ps = mUtil.data(element).remove('ps');\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\n//== Initialize mUtil class on document ready\r\nmUtil.ready(function() {\r\n    mUtil.init();\r\n});\n/**\r\n * @class mApp  Metronic App class\r\n */\r\n\r\nvar mApp = function() {\r\n\r\n    /** @type {object} colors State colors **/\r\n    var colors = {\r\n        brand:      '#716aca',\r\n        metal:      '#c4c5d6',\r\n        light:      '#ffffff',\r\n        accent:     '#00c5dc',\r\n        primary:    '#5867dd',\r\n        success:    '#34bfa3',\r\n        info:       '#36a3f7',\r\n        warning:    '#ffb822',\r\n        danger:     '#f4516c',\r\n        focus:      '#9816f4'\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap tooltip\r\n    */\r\n    var initTooltip = function(el) {\r\n        var skin = el.data('skin') ? 'm-tooltip--skin-' + el.data('skin') : '';\r\n        var width = el.data('width') == 'auto' ? 'm-tooltop--auto-width' : '';\r\n        var triggerValue = el.data('trigger') ? el.data('trigger') : 'hover';\r\n        var placement = el.data('placement') ? el.data('placement') : 'left';\r\n                    \r\n        el.tooltip({\r\n            trigger: triggerValue,\r\n            template: '<div class=\"m-tooltip ' + skin + ' ' + width + ' tooltip\" role=\"tooltip\">\\\r\n                <div class=\"arrow\"></div>\\\r\n                <div class=\"tooltip-inner\"></div>\\\r\n            </div>'\r\n        });\r\n    }\r\n    \r\n    /**\r\n    * Initializes bootstrap tooltips\r\n    */\r\n    var initTooltips = function() {\r\n        // init bootstrap tooltips\r\n        $('[data-toggle=\"m-tooltip\"]').each(function() {\r\n            initTooltip($(this));\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap popover\r\n    */\r\n    var initPopover = function(el) {\r\n        var skin = el.data('skin') ? 'm-popover--skin-' + el.data('skin') : '';\r\n        var triggerValue = el.data('trigger') ? el.data('trigger') : 'hover';\r\n            \r\n        el.popover({\r\n            trigger: triggerValue,\r\n            template: '\\\r\n            <div class=\"m-popover ' + skin + ' popover\" role=\"tooltip\">\\\r\n                <div class=\"arrow\"></div>\\\r\n                <h3 class=\"popover-header\"></h3>\\\r\n                <div class=\"popover-body\"></div>\\\r\n            </div>'\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap popovers\r\n    */\r\n    var initPopovers = function() {\r\n        // init bootstrap popover\r\n        $('[data-toggle=\"m-popover\"]').each(function() {\r\n            initPopover($(this));\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap file input\r\n    */\r\n    var initFileInput = function() {\r\n        // init bootstrap popover\r\n        $('.custom-file-input').on('change',function(){\r\n            var fileName = $(this).val();\r\n            $(this).next('.custom-file-label').addClass(\"selected\").html(fileName);\r\n        });\r\n    }           \r\n\r\n    /**\r\n    * Initializes metronic portlet\r\n    */\r\n    var initPortlet = function(el, options) {\r\n        // init portlet tools\r\n        var el = $(el);\r\n        var portlet = new mPortlet(el[0], options);\r\n    }\r\n\r\n    /**\r\n    * Initializes metronic portlets\r\n    */\r\n    var initPortlets = function() {\r\n        // init portlet tools\r\n        $('[m-portlet=\"true\"]').each(function() {\r\n            var el = $(this);\r\n\r\n            if ( el.data('portlet-initialized') !== true ) {\r\n                initPortlet(el, {});\r\n                el.data('portlet-initialized', true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes scrollable contents\r\n    */\r\n    var initScrollers = function() {\r\n        $('[data-scrollable=\"true\"]').each(function(){\r\n            var el = $(this);\r\n            mUtil.scrollerInit(this, {disableForMobile: true, handleWindowResize: true, height: function() {\r\n                if (mUtil.isInResponsiveRange('tablet-and-mobile') && el.data('mobile-height')) {\r\n                    return el.data('mobile-height');\r\n                } else {\r\n                    return el.data('height');\r\n                }\r\n            }});\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap alerts\r\n    */\r\n    var initAlerts = function() {\r\n        // init bootstrap popover\r\n        $('body').on('click', '[data-close=alert]', function() {\r\n            $(this).closest('.alert').hide();\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes Metronic custom tabs\r\n    */\r\n    var initCustomTabs = function() {\r\n        // init bootstrap popover\r\n        $('[data-tab-target]').each(function() {\r\n            if ($(this).data('tabs-initialized') == true ) {\r\n                return;\r\n            }\r\n\r\n            $(this).click(function(e) {\r\n                e.preventDefault();\r\n                \r\n                var tab = $(this);\r\n                var tabs = tab.closest('[data-tabs=\"true\"]');\r\n                var contents = $( tabs.data('tabs-contents') );\r\n                var content = $( tab.data('tab-target') );\r\n\r\n                tabs.find('.m-tabs__item.m-tabs__item--active').removeClass('m-tabs__item--active');\r\n                tab.addClass('m-tabs__item--active');\r\n\r\n                contents.find('.m-tabs-content__item.m-tabs-content__item--active').removeClass('m-tabs-content__item--active');\r\n                content.addClass('m-tabs-content__item--active');         \r\n            });\r\n\r\n            $(this).data('tabs-initialized', true);\r\n        });\r\n    }\r\n\r\n\tvar hideTouchWarning = function() {\r\n\t\tjQuery.event.special.touchstart = {\r\n\t\t\tsetup: function(_, ns, handle) {\r\n\t\t\t\tif (typeof this === 'function')\r\n\t\t\t\t\tif (ns.includes('noPreventDefault')) {\r\n\t\t\t\t\t\tthis.addEventListener('touchstart', handle, {passive: false});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.addEventListener('touchstart', handle, {passive: true});\r\n\t\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t\tjQuery.event.special.touchmove = {\r\n\t\t\tsetup: function(_, ns, handle) {\r\n\t\t\t\tif (typeof this === 'function')\r\n\t\t\t\t\tif (ns.includes('noPreventDefault')) {\r\n\t\t\t\t\t\tthis.addEventListener('touchmove', handle, {passive: false});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.addEventListener('touchmove', handle, {passive: true});\r\n\t\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t\tjQuery.event.special.wheel = {\r\n\t\t\tsetup: function(_, ns, handle) {\r\n\t\t\t\tif (typeof this === 'function')\r\n\t\t\t\t\tif (ns.includes('noPreventDefault')) {\r\n\t\t\t\t\t\tthis.addEventListener('wheel', handle, {passive: false});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.addEventListener('wheel', handle, {passive: true});\r\n\t\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n    return {\r\n        /**\r\n        * Main class initializer\r\n        */\r\n        init: function(options) {\r\n            if (options && options.colors) {\r\n                colors = options.colors;\r\n            }\r\n            mApp.initComponents();\r\n        },\r\n\r\n        /**\r\n        * Initializes components\r\n        */\r\n        initComponents: function() {\r\n            hideTouchWarning();\r\n            initScrollers();\r\n            initTooltips();\r\n            initPopovers();\r\n            initAlerts();\r\n            initPortlets();\r\n            initFileInput();\r\n            initCustomTabs();\r\n        },\r\n\r\n\r\n        /**\r\n        * Init custom tabs\r\n        */\r\n        initCustomTabs: function() {\r\n            initCustomTabs();\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        initTooltips: function() {\r\n            initTooltips();\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        initTooltip: function(el) {\r\n            initTooltip(el);\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        initPopovers: function() {\r\n            initPopovers();\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        initPopover: function(el) {\r\n            initPopover(el);\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // function to init portlet\r\n        initPortlet: function(el, options) {\r\n            initPortlet(el, options);\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // function to init portlets\r\n        initPortlets: function() {\r\n            initPortlets();\r\n        },\r\n\r\n        /**\r\n        * Blocks element with loading indiciator using http://malsup.com/jquery/block/\r\n        * @param {object} target jQuery element object\r\n        * @param {object} options \r\n        */\r\n        block: function(target, options) {\r\n            var el = $(target);\r\n\r\n            options = $.extend(true, {\r\n                opacity: 0.03,\r\n                overlayColor: '#000000',\r\n                state: 'brand',\r\n                type: 'loader',\r\n                size: 'lg',\r\n                centerX: true,\r\n                centerY: true,\r\n                message: '',\r\n                shadow: true,\r\n                width: 'auto'\r\n            }, options);\r\n\r\n            var skin;\r\n            var state;\r\n            var loading;\r\n\r\n            if (options.type == 'spinner') {\r\n                skin = options.skin ? 'm-spinner--skin-' + options.skin : '';\r\n                state = options.state ? 'm-spinner--' + options.state : '';\r\n                loading = '<div class=\"m-spinner ' + skin + ' ' + state + '\"></div';\r\n            } else {\r\n                skin = options.skin ? 'm-loader--skin-' + options.skin : '';\r\n                state = options.state ? 'm-loader--' + options.state : '';\r\n                size = options.size ? 'm-loader--' + options.size : '';\r\n                loading = '<div class=\"m-loader ' + skin + ' ' + state + ' ' + size + '\"></div';\r\n            }\r\n\r\n            if (options.message && options.message.length > 0) {\r\n                var classes = 'm-blockui ' + (options.shadow === false ? 'm-blockui-no-shadow' : '');\r\n\r\n                html = '<div class=\"' + classes + '\"><span>' + options.message + '</span><span>' + loading + '</span></div>';\r\n\r\n                var el = document.createElement('div');\r\n                mUtil.get('body').prepend(el);\r\n                mUtil.addClass(el, classes);\r\n                el.innerHTML = '<span>' + options.message + '</span><span>' + loading + '</span>';\r\n                options.width = mUtil.actualWidth(el) + 10;\r\n                mUtil.remove(el);\r\n\r\n                if (target == 'body') {\r\n                    html = '<div class=\"' + classes + '\" style=\"margin-left:-'+ (options.width / 2) +'px;\"><span>' + options.message + '</span><span>' + loading + '</span></div>';\r\n                }\r\n            } else {\r\n                html = loading;\r\n            }\r\n\r\n            var params = {\r\n                message: html,\r\n                centerY: options.centerY,\r\n                centerX: options.centerX,\r\n                css: {\r\n                    top: '30%',\r\n                    left: '50%',\r\n                    border: '0',\r\n                    padding: '0',\r\n                    backgroundColor: 'none',\r\n                    width: options.width\r\n                },\r\n                overlayCSS: {\r\n                    backgroundColor: options.overlayColor,\r\n                    opacity: options.opacity,\r\n                    cursor: 'wait',\r\n                    zIndex: '10'\r\n                },\r\n                onUnblock: function() {\r\n                    if (el && el[0]) {\r\n                        mUtil.css(el[0], 'position', '');\r\n                        mUtil.css(el[0], 'zoom', '');\r\n                    }                    \r\n                }\r\n            };\r\n\r\n            if (target == 'body') {\r\n                params.css.top = '50%';\r\n                $.blockUI(params);\r\n            } else {\r\n                var el = $(target);\r\n                el.block(params);\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Un-blocks the blocked element \r\n        * @param {object} target jQuery element object\r\n        */\r\n        unblock: function(target) {\r\n            if (target && target != 'body') {\r\n                $(target).unblock();\r\n            } else {\r\n                $.unblockUI();\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Blocks the page body element with loading indicator\r\n        * @param {object} options \r\n        */\r\n        blockPage: function(options) {\r\n            return mApp.block('body', options);\r\n        },\r\n\r\n        /**\r\n        * Un-blocks the blocked page body element\r\n        */\r\n        unblockPage: function() {\r\n            return mApp.unblock('body');\r\n        },\r\n\r\n        /**\r\n        * Enable loader progress for button and other elements\r\n        * @param {object} target jQuery element object\r\n        * @param {object} options\r\n        */\r\n        progress: function(target, options) {\r\n            var skin = (options && options.skin) ? options.skin : 'light';\r\n            var alignment = (options && options.alignment) ? options.alignment : 'right'; \r\n            var size = (options && options.size) ? 'm-spinner--' + options.size : ''; \r\n            var classes = 'm-loader ' + 'm-loader--' + skin + ' m-loader--' + alignment + ' m-loader--' + size;\r\n\r\n            mApp.unprogress(target);\r\n            \r\n            $(target).addClass(classes);\r\n            $(target).data('progress-classes', classes);\r\n        },\r\n\r\n        /**\r\n        * Disable loader progress for button and other elements\r\n        * @param {object} target jQuery element object\r\n        */\r\n        unprogress: function(target) {\r\n            $(target).removeClass($(target).data('progress-classes'));\r\n        },\r\n\r\n        /**\r\n        * Gets state color's hex code by color name\r\n        * @param {string} name Color name\r\n        * @returns {string}  \r\n        */\r\n        getColor: function(name) {\r\n            return colors[name];\r\n        }\r\n    };\r\n}();\r\n\r\n//== Initialize mApp class on document ready\r\n$(document).ready(function() {\r\n    mApp.init({});\r\n});\n(function ($) {\r\n\r\n\tif (typeof mUtil === 'undefined') throw new Error('mUtil is required and must be included before mDatatable.');\r\n\r\n\t// plugin setup\r\n\t$.fn.mDatatable = function (options) {\r\n\t\tif ($(this).length === 0) {\r\n\t\t\tconsole.log('No mDatatable element exist.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// global variables\r\n\t\tvar datatable = this;\r\n\r\n\t\t// debug enabled?\r\n\t\t// 1) state will be cleared on each refresh\r\n\t\t// 2) enable some logs\r\n\t\t// 3) etc.\r\n\t\tdatatable.debug = false;\r\n\r\n\t\tdatatable.API = {\r\n\t\t\trecord: null,\r\n\t\t\tvalue: null,\r\n\t\t\tparams: null,\r\n\t\t};\r\n\r\n\t\tvar Plugin = {\r\n\t\t\t/********************\r\n\t\t\t ** PRIVATE METHODS\r\n\t\t\t ********************/\r\n\t\t\tisInit: false,\r\n\t\t\toffset: 110,\r\n\t\t\tstateId: 'meta',\r\n\t\t\tajaxParams: {},\r\n\r\n\t\t\tinit: function (options) {\r\n\t\t\t\tvar isHtmlTable = false;\r\n\t\t\t\t// data source option empty is normal table\r\n\t\t\t\tif (options.data.source === null) {\r\n\t\t\t\t\tPlugin.extractTable();\r\n\t\t\t\t\tisHtmlTable = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tPlugin.setupBaseDOM.call();\r\n\t\t\t\tPlugin.setupDOM(datatable.table);\r\n\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\t// set custom query from options\r\n\t\t\t\tPlugin.setDataSourceQuery(Plugin.getOption('data.source.read.params.query'));\r\n\r\n\t\t\t\t// on event after layout had done setup, show datatable\r\n\t\t\t\t$(datatable).on('m-datatable--on-layout-updated', Plugin.afterRender);\r\n\r\n\t\t\t\tif (datatable.debug) Plugin.stateRemove(Plugin.stateId);\r\n\r\n\t\t\t\t// initialize extensions\r\n\t\t\t\t$.each(Plugin.getOption('extensions'), function (extName, extOptions) {\r\n\t\t\t\t\tif (typeof $.fn.mDatatable[extName] === 'function')\r\n\t\t\t\t\t\tnew $.fn.mDatatable[extName](datatable, extOptions);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// get data\r\n\t\t\t\tif (options.data.type === 'remote' || options.data.type === 'local') {\r\n\t\t\t\t\tif (options.data.saveState === false\r\n\t\t\t\t\t\t|| options.data.saveState.cookie === false\r\n\t\t\t\t\t\t&& options.data.saveState.webstorage === false) {\r\n\t\t\t\t\t\tPlugin.stateRemove(Plugin.stateId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// get data for local datatable and local table\r\n\t\t\t\t\tif (options.data.type === 'local' && typeof options.data.source === 'object') {\r\n\t\t\t\t\t\tdatatable.dataSet = datatable.originalDataSet = Plugin.dataMapCallback(options.data.source);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tPlugin.dataRender();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!isHtmlTable) {\r\n\t\t\t\t\t// if not a html table, setup header\r\n\t\t\t\t\tPlugin.setHeadTitle();\r\n\t\t\t\t\tif (Plugin.getOption('layout.footer')) {\r\n\t\t\t\t\t\tPlugin.setHeadTitle(datatable.tableFoot);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// hide header\r\n\t\t\t\tif (typeof options.layout.header !== 'undefined' &&\r\n\t\t\t\t\toptions.layout.header === false) {\r\n\t\t\t\t\t$(datatable.table).find('thead').remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// hide footer\r\n\t\t\t\tif (typeof options.layout.footer !== 'undefined' &&\r\n\t\t\t\t\toptions.layout.footer === false) {\r\n\t\t\t\t\t$(datatable.table).find('tfoot').remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// for normal and local data type, run layoutUpdate\r\n\t\t\t\tif (options.data.type === null ||\r\n\t\t\t\t\toptions.data.type === 'local') {\r\n\t\t\t\t\tPlugin.setupCellField.call();\r\n\t\t\t\t\tPlugin.setupTemplateCell.call();\r\n\r\n\t\t\t\t\t// setup nested datatable, if option enabled\r\n\t\t\t\t\tPlugin.setupSubDatatable.call();\r\n\r\n\t\t\t\t\t// setup extra system column properties\r\n\t\t\t\t\tPlugin.setupSystemColumn.call();\r\n\t\t\t\t\tPlugin.redraw();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(window).resize(Plugin.fullRender);\r\n\r\n\t\t\t\t$(datatable).height('');\r\n\r\n\t\t\t\t$(Plugin.getOption('search.input')).on('keyup', function (e) {\r\n\t\t\t\t\tif (Plugin.getOption('search.onEnter') && e.which !== 13) return;\r\n\t\t\t\t\tPlugin.search($(this).val());\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Extract static HTML table content into datasource\r\n\t\t\t */\r\n\t\t\textractTable: function () {\r\n\t\t\t\tconsole.log(\"start extract table\");\r\n\t\t\t\tvar columns = [];\r\n\t\t\t\tvar headers = $(datatable).find('tr:first-child th').get().map(function (cell, i) {\r\n\t\t\t\t\tvar field = $(cell).data('field');\r\n\t\t\t\t\tif (typeof field === 'undefined') {\r\n\t\t\t\t\t\tfield = $(cell).text().trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar column = {field: field, title: field};\r\n\t\t\t\t\tfor (var ii in options.columns) {\r\n\t\t\t\t\t\tif (options.columns[ii].field === field) {\r\n\t\t\t\t\t\t\tcolumn = $.extend(true, {}, options.columns[ii], column);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolumns.push(column);\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t});\r\n\t\t\t\t// auto create columns config\r\n\t\t\t\toptions.columns = columns;\r\n\r\n\t\t\t\tvar rowProp = [];\r\n\t\t\t\tvar source = [];\r\n\r\n\t\t\t\t$(datatable).find('tr').each(function () {\r\n\t\t\t\t\tif ($(this).find('td').length) {\r\n\t\t\t\t\t\trowProp.push($(this).prop('attributes'));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar td = {};\r\n\t\t\t\t\t$(this).find('td').each(function (i, cell) {\r\n\t\t\t\t\t\tconsole.log(cell.innerHTML);\r\n\r\n\t\t\t\t\t\ttd[headers[i]] = cell.innerHTML.trim();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (!mUtil.isEmpty(td)) {\r\n\t\t\t\t\t\tsource.push(td);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\toptions.data.attr.rowProps = rowProp;\r\n\t\t\t\toptions.data.source = source;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * One time layout update on init\r\n\t\t\t */\r\n\t\t\tlayoutUpdate: function () {\r\n\t\t\t\t// setup nested datatable, if option enabled\r\n\t\t\t\tPlugin.setupSubDatatable.call();\r\n\r\n\t\t\t\t// setup extra system column properties\r\n\t\t\t\tPlugin.setupSystemColumn.call();\r\n\r\n\t\t\t\t// setup cell hover event\r\n\t\t\t\tPlugin.setupHover.call();\r\n\r\n\t\t\t\tif (typeof options.detail === 'undefined'\r\n\t\t\t\t\t// temporary disable lock column in subtable\r\n\t\t\t\t\t&& Plugin.getDepth() === 1) {\r\n\t\t\t\t\t// lock columns handler\r\n\t\t\t\t\tPlugin.lockTable.call();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tPlugin.columnHide.call();\r\n\r\n\t\t\t\tPlugin.resetScroll();\r\n\r\n\t\t\t\tif (!Plugin.isInit) {\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-init', {table: $(datatable.wrap).attr('id'), options: options});\r\n\t\t\t\t\tPlugin.isInit = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(datatable).trigger('m-datatable--on-layout-updated', {table: $(datatable.wrap).attr('id')});\r\n\t\t\t},\r\n\r\n\t\t\tlockTable: function () {\r\n\t\t\t\t// todo; revise lock table responsive\r\n\t\t\t\tvar lock = {\r\n\t\t\t\t\tlockEnabled: false,\r\n\t\t\t\t\tinit: function () {\r\n\t\t\t\t\t\t// check if table should be locked columns\r\n\t\t\t\t\t\tlock.lockEnabled = Plugin.lockEnabledColumns();\r\n\t\t\t\t\t\tif (lock.lockEnabled.left.length === 0 &&\r\n\t\t\t\t\t\t\tlock.lockEnabled.right.length === 0) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlock.enable();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tenable: function () {\r\n\t\t\t\t\t\tvar enableLock = function (tablePart) {\r\n\t\t\t\t\t\t\t// check if already has lock column\r\n\t\t\t\t\t\t\tif ($(tablePart).find('.m-datatable__lock').length > 0) {\r\n\t\t\t\t\t\t\t\tPlugin.log('Locked container already exist in: ', tablePart);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// check if no rows exists\r\n\t\t\t\t\t\t\tif ($(tablePart).find('.m-datatable__row').length === 0) {\r\n\t\t\t\t\t\t\t\tPlugin.log('No row exist in: ', tablePart);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// locked div container\r\n\t\t\t\t\t\t\tvar lockLeft = $('<div/>').addClass('m-datatable__lock m-datatable__lock--left');\r\n\t\t\t\t\t\t\tvar lockScroll = $('<div/>').addClass('m-datatable__lock m-datatable__lock--scroll');\r\n\t\t\t\t\t\t\tvar lockRight = $('<div/>').addClass('m-datatable__lock m-datatable__lock--right');\r\n\r\n\t\t\t\t\t\t\t$(tablePart).find('.m-datatable__row').each(function () {\r\n\t\t\t\t\t\t\t\tvar rowLeft = $('<tr/>').addClass('m-datatable__row').appendTo(lockLeft);\r\n\t\t\t\t\t\t\t\tvar rowScroll = $('<tr/>').addClass('m-datatable__row').appendTo(lockScroll);\r\n\t\t\t\t\t\t\t\tvar rowRight = $('<tr/>').addClass('m-datatable__row').appendTo(lockRight);\r\n\t\t\t\t\t\t\t\t$(this).find('.m-datatable__cell').each(function () {\r\n\t\t\t\t\t\t\t\t\tvar locked = $(this).data('locked');\r\n\t\t\t\t\t\t\t\t\tif (typeof locked !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t\tif (typeof locked.left !== 'undefined' || locked === true) {\r\n\t\t\t\t\t\t\t\t\t\t\t// default locked to left\r\n\t\t\t\t\t\t\t\t\t\t\t$(this).appendTo(rowLeft);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (typeof locked.right !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t\t\t$(this).appendTo(rowRight);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t$(this).appendTo(rowScroll);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t// remove old row\r\n\t\t\t\t\t\t\t\t$(this).remove();\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (lock.lockEnabled.left.length > 0) {\r\n\t\t\t\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--lock');\r\n\t\t\t\t\t\t\t\t$(lockLeft).appendTo(tablePart);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (lock.lockEnabled.left.length > 0 || lock.lockEnabled.right.length > 0) {\r\n\t\t\t\t\t\t\t\t$(lockScroll).appendTo(tablePart);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (lock.lockEnabled.right.length > 0) {\r\n\t\t\t\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--lock');\r\n\t\t\t\t\t\t\t\t$(lockRight).appendTo(tablePart);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t$(datatable.table).find('thead,tbody,tfoot').each(function () {\r\n\t\t\t\t\t\t\tvar tablePart = this;\r\n\t\t\t\t\t\t\tif ($(this).find('.m-datatable__lock').length === 0) {\r\n\t\t\t\t\t\t\t\t$(this).ready(function () {\r\n\t\t\t\t\t\t\t\t\tenableLock(tablePart);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tlock.init();\r\n\t\t\t\treturn lock;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Render everything for resize\r\n\t\t\t */\r\n\t\t\tfullRender: function () {\r\n\t\t\t\tif (Plugin.isLocked()) {\r\n\r\n\t\t\t\t\t$(datatable.tableHead).empty();\r\n\t\t\t\t\tPlugin.setHeadTitle();\r\n\t\t\t\t\tif (Plugin.getOption('layout.footer')) {\r\n\t\t\t\t\t\t$(datatable.tableFoot).empty();\r\n\t\t\t\t\t\tPlugin.setHeadTitle(datatable.tableFoot);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// todo; full render datatable for specific condition only\r\n\t\t\t\t\tPlugin.spinnerCallback(true);\r\n\t\t\t\t\t$(datatable.wrap).removeClass('m-datatable--loaded');\r\n\r\n\t\t\t\t\tPlugin.insertData();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tlockEnabledColumns: function () {\r\n\t\t\t\tvar screen = $(window).width();\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\tvar enabled = {left: [], right: []};\r\n\t\t\t\t$.each(columns, function (i, column) {\r\n\t\t\t\t\tif (typeof column.locked !== 'undefined') {\r\n\t\t\t\t\t\tif (typeof column.locked.left !== 'undefined') {\r\n\t\t\t\t\t\t\tif (mUtil.getBreakpoint(column.locked.left) <= screen) {\r\n\t\t\t\t\t\t\t\tenabled['left'].push(column.locked.left);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (typeof column.locked.right !== 'undefined') {\r\n\t\t\t\t\t\t\tif (mUtil.getBreakpoint(column.locked.right) <= screen) {\r\n\t\t\t\t\t\t\t\tenabled['right'].push(column.locked.right);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn enabled;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * After render event, called by m-datatable--on-layout-updated\r\n\t\t\t * @param e\r\n\t\t\t * @param args\r\n\t\t\t */\r\n\t\t\tafterRender: function (e, args) {\r\n\t\t\t\tif (args.table == $(datatable.wrap).attr('id')) {\r\n\t\t\t\t\t$(datatable).ready(function () {\r\n\t\t\t\t\t\tif (!Plugin.isLocked()) {\r\n\t\t\t\t\t\t\tPlugin.redraw();\r\n\t\t\t\t\t\t\t// work on non locked columns\r\n\t\t\t\t\t\t\tif (Plugin.getOption('rows.autoHide')) {\r\n\t\t\t\t\t\t\t\tPlugin.autoHide();\r\n\t\t\t\t\t\t\t\t// reset row\r\n\t\t\t\t\t\t\t\t$(datatable.table).find('.m-datatable__row').css('height', '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tPlugin.rowEvenOdd.call();\r\n\r\n\t\t\t\t\t\t// redraw locked columns table\r\n\t\t\t\t\t\tif (Plugin.isLocked()) Plugin.redraw();\r\n\t\t\t\t\t\t$(datatable.tableBody).css('visibility', '');\r\n\t\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--loaded');\r\n\r\n\t\t\t\t\t\tPlugin.sorting.call();\r\n\t\t\t\t\t\tPlugin.scrollbar.call();\r\n\r\n\t\t\t\t\t\t// Plugin.hoverColumn.call();\r\n\t\t\t\t\t\tPlugin.spinnerCallback(false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\thoverTimer: 0,\r\n\t\t\tisScrolling: false,\r\n\t\t\tsetupHover: function () {\r\n\t\t\t\t$(window).scroll(function (e) {\r\n\t\t\t\t\t// stop hover when scrolling\r\n\t\t\t\t\tclearTimeout(Plugin.hoverTimer);\r\n\t\t\t\t\tPlugin.isScrolling = true;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(datatable.tableBody).find('.m-datatable__cell').off('mouseenter', 'mouseleave').on('mouseenter', function () {\r\n\t\t\t\t\t// reset scroll timer to hover class\r\n\t\t\t\t\tPlugin.hoverTimer = setTimeout(function () {\r\n\t\t\t\t\t\tPlugin.isScrolling = false;\r\n\t\t\t\t\t}, 200);\r\n\t\t\t\t\tif (Plugin.isScrolling) return;\r\n\r\n\t\t\t\t\t// normal table\r\n\t\t\t\t\tvar row = $(this).closest('.m-datatable__row').addClass('m-datatable__row--hover');\r\n\t\t\t\t\tvar index = $(row).index() + 1;\r\n\r\n\t\t\t\t\t// lock table\r\n\t\t\t\t\t$(row).closest('.m-datatable__lock').parent().find('.m-datatable__row:nth-child(' + index + ')').addClass('m-datatable__row--hover');\r\n\t\t\t\t}).on('mouseleave', function () {\r\n\t\t\t\t\t// normal table\r\n\t\t\t\t\tvar row = $(this).closest('.m-datatable__row').removeClass('m-datatable__row--hover');\r\n\t\t\t\t\tvar index = $(row).index() + 1;\r\n\r\n\t\t\t\t\t// look table\r\n\t\t\t\t\t$(row).closest('.m-datatable__lock').parent().find('.m-datatable__row:nth-child(' + index + ')').removeClass('m-datatable__row--hover');\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adjust width of locked table containers by resize handler\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tadjustLockContainer: function () {\r\n\t\t\t\tif (!Plugin.isLocked()) return 0;\r\n\r\n\t\t\t\t// refer to head dimension\r\n\t\t\t\tvar containerWidth = $(datatable.tableHead).width();\r\n\t\t\t\tvar lockLeft = $(datatable.tableHead).find('.m-datatable__lock--left').width();\r\n\t\t\t\tvar lockRight = $(datatable.tableHead).find('.m-datatable__lock--right').width();\r\n\r\n\t\t\t\tif (typeof lockLeft === 'undefined') lockLeft = 0;\r\n\t\t\t\tif (typeof lockRight === 'undefined') lockRight = 0;\r\n\r\n\t\t\t\tvar lockScroll = Math.floor(containerWidth - lockLeft - lockRight);\r\n\t\t\t\t$(datatable.table).find('.m-datatable__lock--scroll').css('width', lockScroll);\r\n\r\n\t\t\t\treturn lockScroll;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * todo; not in use\r\n\t\t\t */\r\n\t\t\tdragResize: function () {\r\n\t\t\t\tvar pressed = false;\r\n\t\t\t\tvar start = undefined;\r\n\t\t\t\tvar startX, startWidth;\r\n\t\t\t\t$(datatable.tableHead).find('.m-datatable__cell').mousedown(function (e) {\r\n\t\t\t\t\tstart = $(this);\r\n\t\t\t\t\tpressed = true;\r\n\t\t\t\t\tstartX = e.pageX;\r\n\t\t\t\t\tstartWidth = $(this).width();\r\n\t\t\t\t\t$(start).addClass('m-datatable__cell--resizing');\r\n\r\n\t\t\t\t}).mousemove(function (e) {\r\n\t\t\t\t\tif (pressed) {\r\n\t\t\t\t\t\tvar i = $(start).index();\r\n\t\t\t\t\t\tvar tableBody = $(datatable.tableBody);\r\n\t\t\t\t\t\tvar ifLocked = $(start).closest('.m-datatable__lock');\r\n\r\n\t\t\t\t\t\tif (ifLocked) {\r\n\t\t\t\t\t\t\tvar lockedIndex = $(ifLocked).index();\r\n\t\t\t\t\t\t\ttableBody = $(datatable.tableBody).find('.m-datatable__lock').eq(lockedIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$(tableBody).find('.m-datatable__row').each(function (tri, tr) {\r\n\t\t\t\t\t\t\t$(tr).find('.m-datatable__cell').eq(i).width(startWidth + (e.pageX - startX)).children().width(startWidth + (e.pageX - startX));\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t$(start).children().css('width', startWidth + (e.pageX - startX));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}).mouseup(function () {\r\n\t\t\t\t\t$(start).removeClass('m-datatable__cell--resizing');\r\n\t\t\t\t\tpressed = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(document).mouseup(function () {\r\n\t\t\t\t\t$(start).removeClass('m-datatable__cell--resizing');\r\n\t\t\t\t\tpressed = false;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * To prepare placeholder for table before content is loading\r\n\t\t\t */\r\n\t\t\tinitHeight: function () {\r\n\t\t\t\tif (options.layout.height && options.layout.scroll) {\r\n\t\t\t\t\tvar theadHeight = $(datatable.tableHead).find('.m-datatable__row').height();\r\n\t\t\t\t\tvar tfootHeight = $(datatable.tableFoot).find('.m-datatable__row').height();\r\n\t\t\t\t\tvar bodyHeight = options.layout.height;\r\n\t\t\t\t\tif (theadHeight > 0) {\r\n\t\t\t\t\t\tbodyHeight -= theadHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tfootHeight > 0) {\r\n\t\t\t\t\t\tbodyHeight -= tfootHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(datatable.tableBody).css('max-height', bodyHeight);\r\n\r\n\t\t\t\t\t// set scrollable area fixed height\r\n\t\t\t\t\t$(datatable.tableBody).find('.m-datatable__lock--scroll').css('height', bodyHeight);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Setup base DOM (table, thead, tbody, tfoot) and create if not exist.\r\n\t\t\t */\r\n\t\t\tsetupBaseDOM: function () {\r\n\t\t\t\t// keep original state before mDatatable initialize\r\n\t\t\t\tdatatable.initialDatatable = $(datatable).clone();\r\n\r\n\t\t\t\t// main element\r\n\t\t\t\tif ($(datatable).prop('tagName') === 'TABLE') {\r\n\t\t\t\t\t// if main init element is <table>, wrap with div\r\n\t\t\t\t\tdatatable.table = $(datatable).removeClass('m-datatable').addClass('m-datatable__table');\r\n\t\t\t\t\tif ($(datatable.table).parents('.m-datatable').length === 0) {\r\n\t\t\t\t\t\tdatatable.table.wrap($('<div/>').addClass('m-datatable').addClass('m-datatable--' + options.layout.theme));\r\n\t\t\t\t\t\tdatatable.wrap = $(datatable.table).parent();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// create table\r\n\t\t\t\t\tdatatable.wrap = $(datatable).addClass('m-datatable').addClass('m-datatable--' + options.layout.theme);\r\n\t\t\t\t\tdatatable.table = $('<table/>').addClass('m-datatable__table').appendTo(datatable);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof options.layout.class !== 'undefined') {\r\n\t\t\t\t\t$(datatable.wrap).addClass(options.layout.class);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(datatable.table).removeClass('m-datatable--destroyed').css('display', 'block');\r\n\r\n\t\t\t\t// force disable save state\r\n\t\t\t\tif (typeof $(datatable).attr('id') === 'undefined') {\r\n\t\t\t\t\tPlugin.setOption('data.saveState', false);\r\n\t\t\t\t\t$(datatable.table).attr('id', mUtil.getUniqueID('m-datatable--'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// predefine table height\r\n\t\t\t\tif (Plugin.getOption('layout.minHeight'))\r\n\t\t\t\t\t$(datatable.table).css('min-height', Plugin.getOption('layout.minHeight'));\r\n\r\n\t\t\t\tif (Plugin.getOption('layout.height'))\r\n\t\t\t\t\t$(datatable.table).css('max-height', Plugin.getOption('layout.height'));\r\n\r\n\t\t\t\t// for normal table load\r\n\t\t\t\tif (options.data.type === null) {\r\n\t\t\t\t\t$(datatable.table).css('width', '').css('display', '');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create table head element\r\n\t\t\t\tdatatable.tableHead = $(datatable.table).find('thead');\r\n\t\t\t\tif ($(datatable.tableHead).length === 0) {\r\n\t\t\t\t\tdatatable.tableHead = $('<thead/>').prependTo(datatable.table);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create table head element\r\n\t\t\t\tdatatable.tableBody = $(datatable.table).find('tbody');\r\n\t\t\t\tif ($(datatable.tableBody).length === 0) {\r\n\t\t\t\t\tdatatable.tableBody = $('<tbody/>').appendTo(datatable.table);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof options.layout.footer !== 'undefined' &&\r\n\t\t\t\t\toptions.layout.footer) {\r\n\t\t\t\t\t// create table foot element\r\n\t\t\t\t\tdatatable.tableFoot = $(datatable.table).find('tfoot');\r\n\t\t\t\t\tif ($(datatable.tableFoot).length === 0) {\r\n\t\t\t\t\t\tdatatable.tableFoot = $('<tfoot/>').appendTo(datatable.table);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set column data before table manipulation.\r\n\t\t\t */\r\n\t\t\tsetupCellField: function (tableParts) {\r\n\t\t\t\tif (typeof tableParts === 'undefined') tableParts = $(datatable.table).children();\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\t$.each(tableParts, function (part, tablePart) {\r\n\t\t\t\t\t$(tablePart).find('.m-datatable__row').each(function (tri, tr) {\r\n\t\t\t\t\t\t// prepare data\r\n\t\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function (tdi, td) {\r\n\t\t\t\t\t\t\tif (typeof columns[tdi] !== 'undefined') {\r\n\t\t\t\t\t\t\t\t$(td).data(columns[tdi]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set column template callback\r\n\t\t\t * @param tablePart\r\n\t\t\t */\r\n\t\t\tsetupTemplateCell: function (tablePart) {\r\n\t\t\t\tif (typeof tablePart === 'undefined') tablePart = datatable.tableBody;\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\t$(tablePart).find('.m-datatable__row').each(function (tri, tr) {\r\n\t\t\t\t\t// row data object, if any\r\n\t\t\t\t\tvar obj = $(tr).data('obj') || {};\r\n\r\n\t\t\t\t\t// @deprecated in v5.0.6\r\n\t\t\t\t\t// obj['getIndex'] = function() {\r\n\t\t\t\t\t// \treturn tri;\r\n\t\t\t\t\t// };\r\n\t\t\t\t\t// @deprecated in v5.0.6\r\n\t\t\t\t\t// obj['getDatatable'] = function() {\r\n\t\t\t\t\t// \treturn datatable;\r\n\t\t\t\t\t// };\r\n\r\n\t\t\t\t\t// @deprecated in v5.0.6\r\n\t\t\t\t\tvar rowCallback = Plugin.getOption('rows.callback');\r\n\t\t\t\t\tif (typeof rowCallback === 'function') {\r\n\t\t\t\t\t\trowCallback($(tr), obj, tri);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// before template row callback\r\n\t\t\t\t\tvar beforeTemplate = Plugin.getOption('rows.beforeTemplate');\r\n\t\t\t\t\tif (typeof beforeTemplate === 'function') {\r\n\t\t\t\t\t\tbeforeTemplate($(tr), obj, tri);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if data object is undefined, collect from table\r\n\t\t\t\t\tif (typeof obj === 'undefined') {\r\n\t\t\t\t\t\tobj = {};\r\n\t\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function (tdi, td) {\r\n\t\t\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\t\t\tvar column = $.grep(columns, function (n, i) {\r\n\t\t\t\t\t\t\t\treturn $(td).data('field') === n.field;\r\n\t\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t\t\tobj[column['field']] = $(td).text();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function (tdi, td) {\r\n\t\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\t\tvar column = $.grep(columns, function (n, i) {\r\n\t\t\t\t\t\t\treturn $(td).data('field') === n.field;\r\n\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t\t// column template\r\n\t\t\t\t\t\t\tif (typeof column.template !== 'undefined') {\r\n\t\t\t\t\t\t\t\tvar finalValue = '';\r\n\t\t\t\t\t\t\t\t// template string\r\n\t\t\t\t\t\t\t\tif (typeof column.template === 'string') {\r\n\t\t\t\t\t\t\t\t\tfinalValue = Plugin.dataPlaceholder(column.template, obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// template callback function\r\n\t\t\t\t\t\t\t\tif (typeof column.template === 'function') {\r\n\t\t\t\t\t\t\t\t\tfinalValue = column.template(obj, tri, datatable);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar span = document.createElement('span');\r\n\t\t\t\t\t\t\t\tspan.innerHTML = finalValue;\r\n\t\t\t\t\t\t\t\t// insert to cell, wrap with span\r\n\t\t\t\t\t\t\t\t$(td).html(span);\r\n\r\n\t\t\t\t\t\t\t\t// set span overflow\r\n\t\t\t\t\t\t\t\tif (typeof column.overflow !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t$(span).css('overflow', column.overflow);\r\n\t\t\t\t\t\t\t\t\t$(span).css('position', 'relative');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// after template row callback\r\n\t\t\t\t\tvar afterTemplate = Plugin.getOption('rows.afterTemplate');\r\n\t\t\t\t\tif (typeof afterTemplate === 'function') {\r\n\t\t\t\t\t\tafterTemplate($(tr), obj, tri);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Setup extra system column properties\r\n\t\t\t * Note: selector checkbox, subtable toggle\r\n\t\t\t */\r\n\t\t\tsetupSystemColumn: function () {\r\n\t\t\t\tdatatable.dataSet = datatable.dataSet || [];\r\n\t\t\t\t// no records available\r\n\t\t\t\tif (datatable.dataSet.length === 0) return;\r\n\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\t$(datatable.tableBody).find('.m-datatable__row').each(function (tri, tr) {\r\n\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function (tdi, td) {\r\n\t\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\t\tvar column = $.grep(columns, function (n, i) {\r\n\t\t\t\t\t\t\treturn $(td).data('field') === n.field;\r\n\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t\tvar value = $(td).text();\r\n\r\n\t\t\t\t\t\t\t// enable column selector\r\n\t\t\t\t\t\t\tif (typeof column.selector !== 'undefined' &&\r\n\t\t\t\t\t\t\t\tcolumn.selector !== false) {\r\n\t\t\t\t\t\t\t\t// check if checkbox exist\r\n\t\t\t\t\t\t\t\tif ($(td).find('.m-checkbox [type=\"checkbox\"]').length > 0) return;\r\n\t\t\t\t\t\t\t\t$(td).addClass('m-datatable__cell--check');\r\n\t\t\t\t\t\t\t\t// append checkbox\r\n\t\t\t\t\t\t\t\tvar chk = $('<label/>').addClass('m-checkbox m-checkbox--single').append($('<input/>').attr('type', 'checkbox').attr('value', value).on('click', function () {\r\n\t\t\t\t\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\t\t\t\t\t// add checkbox active row class\r\n\t\t\t\t\t\t\t\t\t\tPlugin.setActive(this);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t// add checkbox active row class\r\n\t\t\t\t\t\t\t\t\t\tPlugin.setInactive(this);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})).append($('<span/>'));\r\n\r\n\t\t\t\t\t\t\t\t// checkbox selector has outline style\r\n\t\t\t\t\t\t\t\tif (typeof column.selector.class !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t$(chk).addClass(column.selector.class);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t$(td).children().html(chk);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// enable column subtable toggle\r\n\t\t\t\t\t\t\tif (typeof column.subtable !== 'undefined' && column.subtable) {\r\n\t\t\t\t\t\t\t\t// check if subtable toggle exist\r\n\t\t\t\t\t\t\t\tif ($(td).find('.m-datatable__toggle-subtable').length > 0) return;\r\n\t\t\t\t\t\t\t\t// append subtable toggle\r\n\t\t\t\t\t\t\t\t$(td).children().html($('<a/>').addClass('m-datatable__toggle-subtable').attr('href', '#').attr('data-value', value).append($('<i/>').addClass(Plugin.getOption('layout.icons.rowDetail.collapse'))));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// init checkbox for header/footer\r\n\t\t\t\tvar initCheckbox = function (tr) {\r\n\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\tvar column = $.grep(columns, function (n, i) {\r\n\t\t\t\t\t\treturn typeof n.selector !== 'undefined' && n.selector !== false;\r\n\t\t\t\t\t})[0];\r\n\r\n\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t// enable column selector\r\n\t\t\t\t\t\tif (typeof column.selector !== 'undefined' && column.selector !== false) {\r\n\t\t\t\t\t\t\tvar td = $(tr).find('[data-field=\"' + column.field + '\"]');\r\n\t\t\t\t\t\t\t// check if checkbox exist\r\n\t\t\t\t\t\t\tif ($(td).find('.m-checkbox [type=\"checkbox\"]').length > 0) return;\r\n\t\t\t\t\t\t\t$(td).addClass('m-datatable__cell--check');\r\n\r\n\t\t\t\t\t\t\t// todo; check all, for server pagination\r\n\t\t\t\t\t\t\t// append checkbox\r\n\t\t\t\t\t\t\tvar chk = $('<label/>').addClass('m-checkbox m-checkbox--single m-checkbox--all').append($('<input/>').attr('type', 'checkbox').on('click', function () {\r\n\t\t\t\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\t\t\t\tPlugin.setActiveAll(true);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tPlugin.setActiveAll(false);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})).append($('<span/>'));\r\n\r\n\t\t\t\t\t\t\t// checkbox selector has outline style\r\n\t\t\t\t\t\t\tif (typeof column.selector.class !== 'undefined') {\r\n\t\t\t\t\t\t\t\t$(chk).addClass(column.selector.class);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t$(td).children().html(chk);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (options.layout.header) {\r\n\t\t\t\t\tinitCheckbox($(datatable.tableHead).find('.m-datatable__row').first());\r\n\t\t\t\t}\r\n\t\t\t\tif (options.layout.footer) {\r\n\t\t\t\t\tinitCheckbox($(datatable.tableFoot).find('.m-datatable__row').first());\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adjust width to match container size\r\n\t\t\t */\r\n\t\t\tadjustCellsWidth: function () {\r\n\t\t\t\t// get table width\r\n\t\t\t\tvar containerWidth = $(datatable.tableHead).width();\r\n\r\n\t\t\t\t// offset reserved for sort icon\r\n\t\t\t\tvar sortOffset = 20;\r\n\r\n\t\t\t\t// get total number of columns\r\n\t\t\t\tvar columns = $(datatable.tableHead).find('.m-datatable__row:first-child').find('.m-datatable__cell:visible').length;\r\n\t\t\t\tif (columns > 0) {\r\n\t\t\t\t\t//  remove reserved sort icon width\r\n\t\t\t\t\tcontainerWidth = containerWidth - (sortOffset * columns);\r\n\t\t\t\t\tvar minWidth = Math.floor(containerWidth / columns);\r\n\r\n\t\t\t\t\t// minimum width\r\n\t\t\t\t\tif (minWidth <= Plugin.offset) {\r\n\t\t\t\t\t\tminWidth = Plugin.offset;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$(datatable.table).find('.m-datatable__row').find('.m-datatable__cell:visible').each(function (tdi, td) {\r\n\t\t\t\t\t\tvar width = minWidth;\r\n\t\t\t\t\t\tvar dataWidth = $(td).data('width');\r\n\t\t\t\t\t\tif (typeof dataWidth !== 'undefined') {\r\n\t\t\t\t\t\t\twidth = dataWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(td).children().css('width', parseInt(width));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adjust height to match container size\r\n\t\t\t */\r\n\t\t\tadjustCellsHeight: function () {\r\n\t\t\t\t$.each($(datatable.table).children(), function (part, tablePart) {\r\n\t\t\t\t\tvar totalRows = $(tablePart).find('.m-datatable__row').first().parent().find('.m-datatable__row').length;\r\n\t\t\t\t\tfor (var i = 1; i <= totalRows; i++) {\r\n\t\t\t\t\t\tvar rows = $(tablePart).find('.m-datatable__row:nth-child(' + i + ')');\r\n\t\t\t\t\t\tif ($(rows).length > 0) {\r\n\t\t\t\t\t\t\tvar maxHeight = Math.max.apply(null, $(rows).map(function () {\r\n\t\t\t\t\t\t\t\treturn $(this).height();\r\n\t\t\t\t\t\t\t}).get());\r\n\t\t\t\t\t\t\t$(rows).css('height', Math.ceil(parseInt(maxHeight)));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Setup table DOM and classes\r\n\t\t\t */\r\n\t\t\tsetupDOM: function (table) {\r\n\t\t\t\t// set table classes\r\n\t\t\t\t$(table).find('> thead').addClass('m-datatable__head');\r\n\t\t\t\t$(table).find('> tbody').addClass('m-datatable__body');\r\n\t\t\t\t$(table).find('> tfoot').addClass('m-datatable__foot');\r\n\t\t\t\t$(table).find('tr').addClass('m-datatable__row');\r\n\t\t\t\t$(table).find('tr > th, tr > td').addClass('m-datatable__cell');\r\n\t\t\t\t$(table).find('tr > th, tr > td').each(function (i, td) {\r\n\t\t\t\t\tif ($(td).find('span').length === 0) {\r\n\t\t\t\t\t\t$(td).wrapInner($('<span/>').css('width', Plugin.offset));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Default scrollbar\r\n\t\t\t * @returns {{tableLocked: null, init: init, onScrolling: onScrolling}}\r\n\t\t\t */\r\n\t\t\tscrollbar: function () {\r\n\t\t\t\tvar scroll = {\r\n\t\t\t\t\tscrollable: null,\r\n\t\t\t\t\ttableLocked: null,\r\n\t\t\t\t\tmcsOptions: {\r\n\t\t\t\t\t\tscrollInertia: 0,\r\n\t\t\t\t\t\tautoDraggerLength: true,\r\n\t\t\t\t\t\tautoHideScrollbar: true,\r\n\t\t\t\t\t\tautoExpandScrollbar: false,\r\n\t\t\t\t\t\talwaysShowScrollbar: 0,\r\n\t\t\t\t\t\tmouseWheel: {\r\n\t\t\t\t\t\t\tscrollAmount: 120,\r\n\t\t\t\t\t\t\tpreventDefault: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tadvanced: {\r\n\t\t\t\t\t\t\tupdateOnContentResize: true,\r\n\t\t\t\t\t\t\tautoExpandHorizontalScroll: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttheme: 'minimal-dark',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinit: function () {\r\n\t\t\t\t\t\tif (mUtil.isRTL()) {\r\n\t\t\t\t\t\t\t$.fn.extend({\r\n\t\t\t\t\t\t\t\tscrollRight: function (val) {\r\n\t\t\t\t\t\t\t\t\tif (val === undefined) {\r\n\t\t\t\t\t\t\t\t\t\treturn this[0].scrollWidth - (this[0].scrollLeft + this[0].clientWidth) + 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn this.scrollLeft(this[0].scrollWidth - this[0].clientWidth - val);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar screen = mUtil.getViewPort().width;\r\n\t\t\t\t\t\t// setup scrollable datatable\r\n\t\t\t\t\t\tif (options.layout.scroll) {\r\n\t\t\t\t\t\t\t// add scrollable datatable class\r\n\t\t\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--scroll');\r\n\r\n\t\t\t\t\t\t\tvar scrollable = $(datatable.tableBody).find('.m-datatable__lock--scroll');\r\n\r\n\t\t\t\t\t\t\t// check if scrollable area have rows\r\n\t\t\t\t\t\t\tif ($(scrollable).find('.m-datatable__row').length > 0 && $(scrollable).length > 0) {\r\n\t\t\t\t\t\t\t\tscroll.scrollHead = $(datatable.tableHead).find('> .m-datatable__lock--scroll > .m-datatable__row');\r\n\t\t\t\t\t\t\t\tscroll.scrollFoot = $(datatable.tableFoot).find('> .m-datatable__lock--scroll > .m-datatable__row');\r\n\t\t\t\t\t\t\t\tscroll.tableLocked = $(datatable.tableBody).find('.m-datatable__lock:not(.m-datatable__lock--scroll)');\r\n\t\t\t\t\t\t\t\tif (Plugin.getOption('layout.customScrollbar') && mUtil.detectIE() != 10 && screen > mUtil.getBreakpoint('lg')) {\r\n\t\t\t\t\t\t\t\t\tscroll.initCustomScrollbar(scrollable[0]);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tscroll.initDefaultScrollbar(scrollable);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ($(datatable.tableBody).find('.m-datatable__row').length > 0) {\r\n\t\t\t\t\t\t\t\tscroll.scrollHead = $(datatable.tableHead).find('> .m-datatable__row');\r\n\t\t\t\t\t\t\t\tscroll.scrollFoot = $(datatable.tableFoot).find('> .m-datatable__row');\r\n\t\t\t\t\t\t\t\tif (Plugin.getOption('layout.customScrollbar') && mUtil.detectIE() != 10 && screen > mUtil.getBreakpoint('lg')) {\r\n\t\t\t\t\t\t\t\t\tscroll.initCustomScrollbar(datatable.tableBody);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tscroll.initDefaultScrollbar(datatable.tableBody);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(datatable.table).// css('height', 'auto').\r\n\t\t\t\t\t\t\tcss('overflow-x', 'auto');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinitDefaultScrollbar: function (scrollable) {\r\n\t\t\t\t\t\t$(scrollable).css('overflow', 'auto').off().on('scroll', scroll.onScrolling);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonScrolling: function (e) {\r\n\t\t\t\t\t\tvar top = $(this).scrollTop();\r\n\t\t\t\t\t\tif (mUtil.isRTL()) {\r\n\t\t\t\t\t\t\tvar right = $(this).scrollRight();\r\n\t\t\t\t\t\t\t$(scroll.scrollHead).css('right', -right);\r\n\t\t\t\t\t\t\t$(scroll.scrollFoot).css('right', -right);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar left = $(this).scrollLeft();\r\n\t\t\t\t\t\t\t$(scroll.scrollHead).css('left', -left);\r\n\t\t\t\t\t\t\t$(scroll.scrollFoot).css('left', -left);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(scroll.tableLocked).each(function (i, table) {\r\n\t\t\t\t\t\t\t$(table).css('top', -top);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinitCustomScrollbar: function (scrollable) {\r\n\t\t\t\t\t\tscroll.scrollable = scrollable;\r\n\t\t\t\t\t\t// create a new instance for table body with scrollbar\r\n\t\t\t\t\t\tPlugin.initScrollbar(scrollable);\r\n\t\t\t\t\t\t$(scrollable).off().on('scroll', scroll.onScrolling);\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tscroll.init();\r\n\t\t\t\treturn scroll;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Init custom scrollbar and reset position\r\n\t\t\t * @param element\r\n\t\t\t * @param options\r\n\t\t\t */\r\n\t\t\tinitScrollbar: function (element, options) {\r\n\t\t\t\t$(datatable.tableBody).css('overflow', '');\r\n\t\t\t\tif (mUtil.hasClass(element, 'ps')) {\r\n\t\t\t\t\t$(element).data('ps').update();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar ps = new PerfectScrollbar(element);\r\n\t\t\t\t\t$(element).data('ps', ps);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set column title from options.columns settings\r\n\t\t\t */\r\n\t\t\tsetHeadTitle: function (tablePart) {\r\n\t\t\t\tif (typeof tablePart === 'undefined') tablePart = datatable.tableHead;\r\n\t\t\t\ttablePart = $(tablePart)[0];\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\tvar row = tablePart.getElementsByTagName('tr')[0];\r\n\t\t\t\tvar ths = tablePart.getElementsByTagName('td');\r\n\r\n\t\t\t\tif (typeof row === 'undefined') {\r\n\t\t\t\t\trow = document.createElement('tr');\r\n\t\t\t\t\ttablePart.appendChild(row);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$.each(columns, function (i, column) {\r\n\t\t\t\t\tvar th = ths[i];\r\n\t\t\t\t\tif (typeof th === 'undefined') {\r\n\t\t\t\t\t\tth = document.createElement('th');\r\n\t\t\t\t\t\trow.appendChild(th);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// set column title\r\n\t\t\t\t\tif (typeof column['title'] !== 'undefined') {\r\n\t\t\t\t\t\tth.innerHTML = column.title;\r\n\t\t\t\t\t\tth.setAttribute('data-field', column.field);\r\n\t\t\t\t\t\tmUtil.addClass(th, column.class);\r\n\t\t\t\t\t\t$(th).data(column);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// set header attr option\r\n\t\t\t\t\tif (typeof column.attr !== 'undefined') {\r\n\t\t\t\t\t\t$.each(column.attr, function (key, val) {\r\n\t\t\t\t\t\t\tth.setAttribute(key, val);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// apply text align to thead/tfoot\r\n\t\t\t\t\tif (typeof column.textAlign !== 'undefined') {\r\n\t\t\t\t\t\tvar align = typeof datatable.textAlign[column.textAlign] !== 'undefined' ? datatable.textAlign[column.textAlign] : '';\r\n\t\t\t\t\t\tmUtil.addClass(th, align);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tPlugin.setupDOM(tablePart);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Initiate to get remote or local data via ajax\r\n\t\t\t */\r\n\t\t\tdataRender: function (action) {\r\n\t\t\t\t$(datatable.table).siblings('.m-datatable__pager').removeClass('m-datatable--paging-loaded');\r\n\r\n\t\t\t\tvar buildMeta = function () {\r\n\t\t\t\t\tdatatable.dataSet = datatable.dataSet || [];\r\n\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t// local pagination meta\r\n\t\t\t\t\tvar meta = Plugin.getDataSourceParam('pagination');\r\n\t\t\t\t\tif (meta.perpage === 0) {\r\n\t\t\t\t\t\tmeta.perpage = options.data.pageSize || 10;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmeta.total = datatable.dataSet.length;\r\n\t\t\t\t\tvar start = Math.max(meta.perpage * (meta.page - 1), 0);\r\n\t\t\t\t\tvar end = Math.min(start + meta.perpage, meta.total);\r\n\t\t\t\t\tdatatable.dataSet = $(datatable.dataSet).slice(start, end);\r\n\t\t\t\t\treturn meta;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar afterGetData = function (result) {\r\n\t\t\t\t\tvar localPagingCallback = function (ctx, meta) {\r\n\t\t\t\t\t\tif (!$(ctx.pager).hasClass('m-datatable--paging-loaded')) {\r\n\t\t\t\t\t\t\t$(ctx.pager).remove();\r\n\t\t\t\t\t\t\tctx.init(meta);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(ctx.pager).off().on('m-datatable--on-goto-page', function (e) {\r\n\t\t\t\t\t\t\t$(ctx.pager).remove();\r\n\t\t\t\t\t\t\tctx.init(meta);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tvar start = Math.max(meta.perpage * (meta.page - 1), 0);\r\n\t\t\t\t\t\tvar end = Math.min(start + meta.perpage, meta.total);\r\n\r\n\t\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t\tdatatable.dataSet = $(datatable.dataSet).slice(start, end);\r\n\r\n\t\t\t\t\t\t// insert data into table content\r\n\t\t\t\t\t\tPlugin.insertData();\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$(datatable.wrap).removeClass('m-datatable--error');\r\n\t\t\t\t\t// pagination enabled\r\n\t\t\t\t\tif (options.pagination) {\r\n\t\t\t\t\t\tif (options.data.serverPaging && options.data.type !== 'local') {\r\n\t\t\t\t\t\t\t// server pagination\r\n\t\t\t\t\t\t\tvar serverMeta = Plugin.getObject('meta', result || null);\r\n\t\t\t\t\t\t\tif (serverMeta !== null) {\r\n\t\t\t\t\t\t\t\tPlugin.paging(serverMeta);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// no meta object from server response, fallback to local pagination\r\n\t\t\t\t\t\t\t\tPlugin.paging(buildMeta(), localPagingCallback);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// local pagination can be used by remote data also\r\n\t\t\t\t\t\t\tPlugin.paging(buildMeta(), localPagingCallback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// pagination is disabled\r\n\t\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// insert data into table content\r\n\t\t\t\t\tPlugin.insertData();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// get local datasource\r\n\t\t\t\tif (options.data.type === 'local'\r\n\t\t\t\t\t// for remote json datasource\r\n\t\t\t\t\t// || typeof options.data.source.read === 'undefined' && datatable.dataSet !== null\r\n\t\t\t\t\t// for remote datasource, server sorting is disabled and data already received from remote\r\n\t\t\t\t\t|| options.data.serverSorting === false && action === 'sort'\r\n\t\t\t\t\t|| options.data.serverFiltering === false && action === 'search'\r\n\t\t\t\t) {\r\n\t\t\t\t\tafterGetData();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// getting data from remote only\r\n\t\t\t\tPlugin.getData().done(afterGetData);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Process ajax data\r\n\t\t\t */\r\n\t\t\tinsertData: function () {\r\n\t\t\t\tdatatable.dataSet = datatable.dataSet || [];\r\n\t\t\t\tvar params = Plugin.getDataSourceParam();\r\n\r\n\t\t\t\t// get row attributes\r\n\t\t\t\tvar pagination = params.pagination;\r\n\t\t\t\tvar start = (Math.max(pagination.page, 1) - 1) * pagination.perpage;\r\n\t\t\t\tvar end = Math.min(pagination.page, pagination.pages) * pagination.perpage;\r\n\t\t\t\tvar rowProps = {};\r\n\t\t\t\tif (typeof options.data.attr.rowProps !== 'undefined' && options.data.attr.rowProps.length) {\r\n\t\t\t\t\trowProps = options.data.attr.rowProps.slice(start, end);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// todo; fix performance\r\n\t\t\t\tvar tableBody = document.createElement('tbody');\r\n\t\t\t\ttableBody.style.visibility = 'hidden';\r\n\t\t\t\tvar colLength = options.columns.length;\r\n\r\n\t\t\t\t$.each(datatable.dataSet, function (rowIndex, row) {\r\n\t\t\t\t\tvar tr = document.createElement('tr');\r\n\t\t\t\t\ttr.setAttribute('data-row', rowIndex);\r\n\t\t\t\t\t// keep data object to row\r\n\t\t\t\t\t$(tr).data('obj', row);\r\n\r\n\t\t\t\t\tif (typeof rowProps[rowIndex] !== 'undefined') {\r\n\t\t\t\t\t\t$.each(rowProps[rowIndex], function () {\r\n\t\t\t\t\t\t\ttr.setAttribute(this.name, this.value);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar cellIndex = 0;\r\n\t\t\t\t\tvar tds = [];\r\n\t\t\t\t\tfor (var a = 0; a < colLength; a += 1) {\r\n\t\t\t\t\t\tvar column = options.columns[a];\r\n\t\t\t\t\t\tvar classes = [];\r\n\t\t\t\t\t\t// add sorted class to cells\r\n\t\t\t\t\t\tif (Plugin.getObject('sort.field', params) === column.field) {\r\n\t\t\t\t\t\t\tclasses.push('m-datatable__cell--sorted');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// apply text align\r\n\t\t\t\t\t\tif (typeof column.textAlign !== 'undefined') {\r\n\t\t\t\t\t\t\tvar align = typeof datatable.textAlign[column.textAlign] !==\r\n\t\t\t\t\t\t\t'undefined' ? datatable.textAlign[column.textAlign] : '';\r\n\t\t\t\t\t\t\tclasses.push(align);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// var classAttr = '';\r\n\t\t\t\t\t\tif (typeof column.class !== 'undefined') {\r\n\t\t\t\t\t\t\tclasses.push(column.class);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar td = document.createElement('td');\r\n\t\t\t\t\t\tmUtil.addClass(td, classes.join(' '));\r\n\t\t\t\t\t\ttd.setAttribute('data-field', column.field);\r\n\t\t\t\t\t\ttd.innerHTML = Plugin.getObject(column.field, row);\r\n\t\t\t\t\t\ttr.appendChild(td);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttableBody.appendChild(tr);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// display no records message\r\n\t\t\t\tif (datatable.dataSet.length === 0) {\r\n\t\t\t\t\tvar errorSpan = document.createElement('span');\r\n\t\t\t\t\tmUtil.addClass(errorSpan, 'm-datatable--error');\r\n\t\t\t\t\terrorSpan.innerHTML = Plugin.getOption('translate.records.noRecords');\r\n\t\t\t\t\ttableBody.appendChild(errorSpan);\r\n\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--error m-datatable--loaded');\r\n\t\t\t\t\tPlugin.spinnerCallback(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// replace existing table body\r\n\t\t\t\t$(datatable.tableBody).replaceWith(tableBody);\r\n\t\t\t\tdatatable.tableBody = tableBody;\r\n\r\n\t\t\t\t// layout update\r\n\t\t\t\tPlugin.setupDOM(datatable.table);\r\n\t\t\t\tPlugin.setupCellField([datatable.tableBody]);\r\n\t\t\t\tPlugin.setupTemplateCell(datatable.tableBody);\r\n\t\t\t\tPlugin.layoutUpdate();\r\n\t\t\t},\r\n\r\n\t\t\tupdateTableComponents: function () {\r\n\t\t\t\tdatatable.tableHead = $(datatable.table).children('thead');\r\n\t\t\t\tdatatable.tableBody = $(datatable.table).children('tbody');\r\n\t\t\t\tdatatable.tableFoot = $(datatable.table).children('tfoot');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Call ajax for raw JSON data\r\n\t\t\t */\r\n\t\t\tgetData: function () {\r\n\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\tvar ajaxParams = {\r\n\t\t\t\t\tdataType: 'json',\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tdata: {},\r\n\t\t\t\t\ttimeout: Plugin.getOption('data.source.read.timeout') || 30000,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (options.data.type === 'local') {\r\n\t\t\t\t\tajaxParams.url = options.data.source;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (options.data.type === 'remote') {\r\n\t\t\t\t\tajaxParams.url = Plugin.getOption('data.source.read.url');\r\n\t\t\t\t\tif (typeof ajaxParams.url !== 'string') ajaxParams.url = Plugin.getOption('data.source.read');\r\n\t\t\t\t\tif (typeof ajaxParams.url !== 'string') ajaxParams.url = Plugin.getOption('data.source');\r\n\t\t\t\t\tajaxParams.headers = Plugin.getOption('data.source.read.headers');\r\n\t\t\t\t\tajaxParams.method = Plugin.getOption('data.source.read.method') || 'POST';\r\n\r\n\t\t\t\t\tvar data = Plugin.getDataSourceParam();\r\n\t\t\t\t\t// remove if server params is not enabled\r\n\t\t\t\t\tif (!Plugin.getOption('data.serverPaging')) {\r\n\t\t\t\t\t\tdelete data['pagination'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!Plugin.getOption('data.serverSorting')) {\r\n\t\t\t\t\t\tdelete data['sort'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tajaxParams.data = $.extend(true, ajaxParams.data, data, Plugin.getOption('data.source.read.params'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn $.ajax(ajaxParams).done(function (response, textStatus, jqXHR) {\r\n\t\t\t\t\tdatatable.lastResponse = response;\r\n\t\t\t\t\t// extendible data map callback for custom datasource\r\n\t\t\t\t\tdatatable.dataSet = datatable.originalDataSet = Plugin.dataMapCallback(response);\r\n\t\t\t\t\tPlugin.setAutoColumns();\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-ajax-done', [datatable.dataSet]);\r\n\t\t\t\t}).fail(function (jqXHR, textStatus, errorThrown) {\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-ajax-fail', [jqXHR]);\r\n\t\t\t\t\t$(datatable.tableBody).html($('<span/>').addClass('m-datatable--error').html(Plugin.getOption('translate.records.noRecords')));\r\n\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--error m-datatable--loaded');\r\n\t\t\t\t\tPlugin.spinnerCallback(false);\r\n\t\t\t\t}).always(function () {\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Pagination object\r\n\t\t\t * @param meta if null, local pagination, otherwise remote pagination\r\n\t\t\t * @param callback for update data when navigating page\r\n\t\t\t */\r\n\t\t\tpaging: function (meta, callback) {\r\n\t\t\t\tvar pg = {\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t\tpager: null,\r\n\t\t\t\t\tpaginateEvent: null,\r\n\t\t\t\t\tpagerLayout: {pagination: null, info: null},\r\n\t\t\t\t\tcallback: null,\r\n\t\t\t\t\tinit: function (meta) {\r\n\t\t\t\t\t\tpg.meta = meta;\r\n\r\n\t\t\t\t\t\t// parse pagination meta to integer\r\n\t\t\t\t\t\tpg.meta.page = parseInt(pg.meta.page);\r\n\t\t\t\t\t\tpg.meta.pages = parseInt(pg.meta.pages);\r\n\t\t\t\t\t\tpg.meta.perpage = parseInt(pg.meta.perpage);\r\n\t\t\t\t\t\tpg.meta.total = parseInt(pg.meta.total);\r\n\r\n\t\t\t\t\t\t// todo; if meta object not exist will cause error\r\n\t\t\t\t\t\t// always recount total pages\r\n\t\t\t\t\t\tpg.meta.pages = Math.max(Math.ceil(pg.meta.total / pg.meta.perpage), 1);\r\n\r\n\t\t\t\t\t\t// current page must be not over than total pages\r\n\t\t\t\t\t\tif (pg.meta.page > pg.meta.pages) pg.meta.page = pg.meta.pages;\r\n\r\n\t\t\t\t\t\t// set unique event name between tables\r\n\t\t\t\t\t\tpg.paginateEvent = Plugin.getTablePrefix();\r\n\r\n\t\t\t\t\t\tpg.pager = $(datatable.table).siblings('.m-datatable__pager');\r\n\t\t\t\t\t\tif ($(pg.pager).hasClass('m-datatable--paging-loaded')) return;\r\n\r\n\t\t\t\t\t\t// if class .m-datatable--paging-loaded not exist, recreate pagination\r\n\t\t\t\t\t\t$(pg.pager).remove();\r\n\r\n\t\t\t\t\t\t// if no pages available\r\n\t\t\t\t\t\tif (pg.meta.pages === 0) return;\r\n\r\n\t\t\t\t\t\t// update datasource params\r\n\t\t\t\t\t\tPlugin.setDataSourceParam('pagination', {\r\n\t\t\t\t\t\t\tpage: pg.meta.page,\r\n\t\t\t\t\t\t\tpages: pg.meta.pages,\r\n\t\t\t\t\t\t\tperpage: pg.meta.perpage,\r\n\t\t\t\t\t\t\ttotal: pg.meta.total,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// default callback function, contains remote pagination handler\r\n\t\t\t\t\t\tpg.callback = pg.serverCallback;\r\n\t\t\t\t\t\t// custom callback function\r\n\t\t\t\t\t\tif (typeof callback === 'function') pg.callback = callback;\r\n\r\n\t\t\t\t\t\tpg.addPaginateEvent();\r\n\t\t\t\t\t\tpg.populate();\r\n\r\n\t\t\t\t\t\tpg.meta.page = Math.max(pg.meta.page || 1, pg.meta.page);\r\n\r\n\t\t\t\t\t\t$(datatable).trigger(pg.paginateEvent, pg.meta);\r\n\r\n\t\t\t\t\t\tpg.pagingBreakpoint.call();\r\n\t\t\t\t\t\t$(window).resize(pg.pagingBreakpoint);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tserverCallback: function (ctx, meta) {\r\n\t\t\t\t\t\tPlugin.dataRender();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpopulate: function () {\r\n\t\t\t\t\t\tvar icons = Plugin.getOption('layout.icons.pagination');\r\n\t\t\t\t\t\tvar title = Plugin.getOption('translate.toolbar.pagination.items.default');\r\n\t\t\t\t\t\t// pager root element\r\n\t\t\t\t\t\tpg.pager = $('<div/>').addClass('m-datatable__pager m-datatable--paging-loaded clearfix');\r\n\t\t\t\t\t\t// numbering links\r\n\t\t\t\t\t\tvar pagerNumber = $('<ul/>').addClass('m-datatable__pager-nav');\r\n\t\t\t\t\t\tpg.pagerLayout['pagination'] = pagerNumber;\r\n\r\n\t\t\t\t\t\t// pager first/previous button\r\n\t\t\t\t\t\t$('<li/>').append($('<a/>').attr('title', title.first).addClass('m-datatable__pager-link m-datatable__pager-link--first').append($('<i/>').addClass(icons.first)).on('click', pg.gotoMorePage).attr('data-page', 1)).appendTo(pagerNumber);\r\n\t\t\t\t\t\t$('<li/>').append($('<a/>').attr('title', title.prev).addClass('m-datatable__pager-link m-datatable__pager-link--prev').append($('<i/>').addClass(icons.prev)).on('click', pg.gotoMorePage)).appendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\t// more previous pages\r\n\t\t\t\t\t\t$('<li/>').append($('<a/>').attr('title', title.more).addClass('m-datatable__pager-link m-datatable__pager-link--more-prev').html($('<i/>').addClass(icons.more)).on('click', pg.gotoMorePage)).appendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\t$('<li/>').append($('<input/>').attr('type', 'text').addClass('m-pager-input form-control').attr('title', title.input).on('keyup', function () {\r\n\t\t\t\t\t\t\t// on keyup update [data-page]\r\n\t\t\t\t\t\t\t$(this).attr('data-page', Math.abs($(this).val()));\r\n\t\t\t\t\t\t}).on('keypress', function (e) {\r\n\t\t\t\t\t\t\t// on keypressed enter button\r\n\t\t\t\t\t\t\tif (e.which === 13) pg.gotoMorePage(e);\r\n\t\t\t\t\t\t})).appendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\tvar pagesNumber = Plugin.getOption('toolbar.items.pagination.pages.desktop.pagesNumber');\r\n\t\t\t\t\t\tvar end = Math.ceil(pg.meta.page / pagesNumber) * pagesNumber;\r\n\t\t\t\t\t\tvar start = end - pagesNumber;\r\n\t\t\t\t\t\tif (end > pg.meta.pages) {\r\n\t\t\t\t\t\t\tend = pg.meta.pages;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (var x = start; x < end; x++) {\r\n\t\t\t\t\t\t\tvar pageNumber = x + 1;\r\n\t\t\t\t\t\t\t$('<li/>').append($('<a/>').addClass('m-datatable__pager-link m-datatable__pager-link-number').text(pageNumber).attr('data-page', pageNumber).attr('title', pageNumber).on('click', pg.gotoPage)).appendTo(pagerNumber);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// more next pages\r\n\t\t\t\t\t\t$('<li/>').append($('<a/>').attr('title', title.more).addClass('m-datatable__pager-link m-datatable__pager-link--more-next').html($('<i/>').addClass(icons.more)).on('click', pg.gotoMorePage)).appendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\t// pager next/last button\r\n\t\t\t\t\t\t$('<li/>').append($('<a/>').attr('title', title.next).addClass('m-datatable__pager-link m-datatable__pager-link--next').append($('<i/>').addClass(icons.next)).on('click', pg.gotoMorePage)).appendTo(pagerNumber);\r\n\t\t\t\t\t\t$('<li/>').append($('<a/>').attr('title', title.last).addClass('m-datatable__pager-link m-datatable__pager-link--last').append($('<i/>').addClass(icons.last)).on('click', pg.gotoMorePage).attr('data-page', pg.meta.pages)).appendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\t// page info\r\n\t\t\t\t\t\tif (Plugin.getOption('toolbar.items.info')) {\r\n\t\t\t\t\t\t\tpg.pagerLayout['info'] = $('<div/>').addClass('m-datatable__pager-info').append($('<span/>').addClass('m-datatable__pager-detail'));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$.each(Plugin.getOption('toolbar.layout'), function (i, layout) {\r\n\t\t\t\t\t\t\t$(pg.pagerLayout[layout]).appendTo(pg.pager);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// page size select\r\n\t\t\t\t\t\tvar pageSizeSelect = $('<select/>').addClass('selectpicker m-datatable__pager-size').attr('title', Plugin.getOption('translate.toolbar.pagination.items.default.select')).attr('data-width', '70px').val(pg.meta.perpage).on('change', pg.updatePerpage).prependTo(pg.pagerLayout['info']);\r\n\r\n\t\t\t\t\t\tvar pageSizes = Plugin.getOption('toolbar.items.pagination.pageSizeSelect');\r\n\t\t\t\t\t\t// default value here, to fix override option by user\r\n\t\t\t\t\t\tif (pageSizes.length == 0) pageSizes = [10, 20, 30, 50, 100];\r\n\t\t\t\t\t\t$.each(pageSizes, function (i, size) {\r\n\t\t\t\t\t\t\tvar display = size;\r\n\t\t\t\t\t\t\tif (size === -1) display = 'All';\r\n\t\t\t\t\t\t\t$('<option/>').attr('value', size).html(display).appendTo(pageSizeSelect);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// init selectpicker to dropdown\r\n\t\t\t\t\t\t$(datatable).ready(function () {\r\n\t\t\t\t\t\t\t$('.selectpicker').selectpicker().siblings('.dropdown-toggle').attr('title', Plugin.getOption(\r\n\t\t\t\t\t\t\t\t'translate.toolbar.pagination.items.default.select'));\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tpg.paste();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpaste: function () {\r\n\t\t\t\t\t\t// insert pagination based on placement position, top|bottom\r\n\t\t\t\t\t\t$.each($.unique(Plugin.getOption('toolbar.placement')),\r\n\t\t\t\t\t\t\tfunction (i, position) {\r\n\t\t\t\t\t\t\t\tif (position === 'bottom') {\r\n\t\t\t\t\t\t\t\t\t$(pg.pager).clone(true).insertAfter(datatable.table);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (position === 'top') {\r\n\t\t\t\t\t\t\t\t\t// pager top need some extra space\r\n\t\t\t\t\t\t\t\t\t$(pg.pager).clone(true).addClass('m-datatable__pager--top').insertBefore(datatable.table);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgotoMorePage: function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t// $(this) is a link of .m-datatable__pager-link\r\n\r\n\t\t\t\t\t\tif ($(this).attr('disabled') === 'disabled') return false;\r\n\r\n\t\t\t\t\t\tvar page = $(this).attr('data-page');\r\n\r\n\t\t\t\t\t\t// event from text input\r\n\t\t\t\t\t\tif (typeof page === 'undefined') {\r\n\t\t\t\t\t\t\tpage = $(e.target).attr('data-page');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpg.openPage(parseInt(page));\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgotoPage: function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t// prevent from click same page number\r\n\t\t\t\t\t\tif ($(this).hasClass('m-datatable__pager-link--active')) return;\r\n\r\n\t\t\t\t\t\tpg.openPage(parseInt($(this).data('page')));\r\n\t\t\t\t\t},\r\n\t\t\t\t\topenPage: function (page) {\r\n\t\t\t\t\t\t// currentPage is 1-based index\r\n\t\t\t\t\t\tpg.meta.page = parseInt(page);\r\n\r\n\t\t\t\t\t\t$(datatable).trigger(pg.paginateEvent, pg.meta);\r\n\t\t\t\t\t\tpg.callback(pg, pg.meta);\r\n\r\n\t\t\t\t\t\t// update page callback function\r\n\t\t\t\t\t\t$(pg.pager).trigger('m-datatable--on-goto-page', pg.meta);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdatePerpage: function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t// if (Plugin.getOption('layout.height') === null) {\r\n\t\t\t\t\t\t// fix white space, when perpage is set from many records to less records\r\n\t\t\t\t\t\t// $('html, body').animate({scrollTop: $(datatable).position().top});\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\tpg.pager = $(datatable.table).siblings('.m-datatable__pager').removeClass('m-datatable--paging-loaded');\r\n\r\n\t\t\t\t\t\t// on change select page size\r\n\t\t\t\t\t\tif (e.originalEvent) {\r\n\t\t\t\t\t\t\tpg.meta.perpage = parseInt($(this).val());\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$(pg.pager).find('select.m-datatable__pager-size').val(pg.meta.perpage).attr('data-selected', pg.meta.perpage);\r\n\r\n\t\t\t\t\t\t// update datasource params\r\n\t\t\t\t\t\tPlugin.setDataSourceParam('pagination', {\r\n\t\t\t\t\t\t\tpage: pg.meta.page,\r\n\t\t\t\t\t\t\tpages: pg.meta.pages,\r\n\t\t\t\t\t\t\tperpage: pg.meta.perpage,\r\n\t\t\t\t\t\t\ttotal: pg.meta.total,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// update page callback function\r\n\t\t\t\t\t\t$(pg.pager).trigger('m-datatable--on-update-perpage', pg.meta);\r\n\t\t\t\t\t\t$(datatable).trigger(pg.paginateEvent, pg.meta);\r\n\t\t\t\t\t\tpg.callback(pg, pg.meta);\r\n\r\n\t\t\t\t\t\t// update pagination info\r\n\t\t\t\t\t\tpg.updateInfo.call();\r\n\t\t\t\t\t},\r\n\t\t\t\t\taddPaginateEvent: function (e) {\r\n\t\t\t\t\t\t// pagination event\r\n\t\t\t\t\t\t$(datatable).off(pg.paginateEvent).on(pg.paginateEvent, function (e, meta) {\r\n\t\t\t\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\t\t\t\tpg.pager = $(datatable.table).siblings('.m-datatable__pager');\r\n\t\t\t\t\t\t\tvar pagerNumber = $(pg.pager).find('.m-datatable__pager-nav');\r\n\r\n\t\t\t\t\t\t\t// set sync active page class\r\n\t\t\t\t\t\t\t$(pagerNumber).find('.m-datatable__pager-link--active').removeClass('m-datatable__pager-link--active');\r\n\t\t\t\t\t\t\t$(pagerNumber).find('.m-datatable__pager-link-number[data-page=\"' + meta.page + '\"]').addClass('m-datatable__pager-link--active');\r\n\r\n\t\t\t\t\t\t\t// set next and previous link page number\r\n\t\t\t\t\t\t\t$(pagerNumber).find('.m-datatable__pager-link--prev').attr('data-page', Math.max(meta.page - 1, 1));\r\n\t\t\t\t\t\t\t$(pagerNumber).find('.m-datatable__pager-link--next').attr('data-page', Math.min(meta.page + 1, meta.pages));\r\n\r\n\t\t\t\t\t\t\t// current page input value sync\r\n\t\t\t\t\t\t\t$(pg.pager).each(function () {\r\n\t\t\t\t\t\t\t\t$(this).find('.m-pager-input[type=\"text\"]').prop('value', meta.page);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t$(pg.pager).find('.m-datatable__pager-nav').show();\r\n\t\t\t\t\t\t\tif (meta.pages <= 1) {\r\n\t\t\t\t\t\t\t\t// hide pager if has 1 page\r\n\t\t\t\t\t\t\t\t$(pg.pager).find('.m-datatable__pager-nav').hide();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// update datasource params\r\n\t\t\t\t\t\t\tPlugin.setDataSourceParam('pagination', {\r\n\t\t\t\t\t\t\t\tpage: pg.meta.page,\r\n\t\t\t\t\t\t\t\tpages: pg.meta.pages,\r\n\t\t\t\t\t\t\t\tperpage: pg.meta.perpage,\r\n\t\t\t\t\t\t\t\ttotal: pg.meta.total,\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t$(pg.pager).find('select.m-datatable__pager-size').val(meta.perpage).attr('data-selected', meta.perpage);\r\n\r\n\t\t\t\t\t\t\t// clear active rows\r\n\t\t\t\t\t\t\t$(datatable.table).find('.m-checkbox > [type=\"checkbox\"]').prop('checked', false);\r\n\t\t\t\t\t\t\t$(datatable.table).find('.m-datatable__row--active').removeClass('m-datatable__row--active');\r\n\r\n\t\t\t\t\t\t\tpg.updateInfo.call();\r\n\t\t\t\t\t\t\tpg.pagingBreakpoint.call();\r\n\t\t\t\t\t\t\t// Plugin.resetScroll();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdateInfo: function () {\r\n\t\t\t\t\t\tvar start = Math.max(pg.meta.perpage * (pg.meta.page - 1) + 1, 1);\r\n\t\t\t\t\t\tvar end = Math.min(start + pg.meta.perpage - 1, pg.meta.total);\r\n\t\t\t\t\t\t// page info update\r\n\t\t\t\t\t\t$(pg.pager).find('.m-datatable__pager-info').find('.m-datatable__pager-detail').html(Plugin.dataPlaceholder(\r\n\t\t\t\t\t\t\tPlugin.getOption('translate.toolbar.pagination.items.info'), {\r\n\t\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\t\tend: pg.meta.perpage === -1 ? pg.meta.total : end,\r\n\t\t\t\t\t\t\t\tpageSize: pg.meta.perpage === -1 ||\r\n\t\t\t\t\t\t\t\tpg.meta.perpage >= pg.meta.total\r\n\t\t\t\t\t\t\t\t\t? pg.meta.total\r\n\t\t\t\t\t\t\t\t\t: pg.meta.perpage,\r\n\t\t\t\t\t\t\t\ttotal: pg.meta.total,\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Update pagination layout breakpoint\r\n\t\t\t\t\t */\r\n\t\t\t\t\tpagingBreakpoint: function () {\r\n\t\t\t\t\t\t// keep page links reference\r\n\t\t\t\t\t\tvar pagerNumber = $(datatable.table).siblings('.m-datatable__pager').find('.m-datatable__pager-nav');\r\n\t\t\t\t\t\tif ($(pagerNumber).length === 0) return;\r\n\r\n\t\t\t\t\t\tvar currentPage = Plugin.getCurrentPage();\r\n\t\t\t\t\t\tvar pagerInput = $(pagerNumber).find('.m-pager-input').closest('li');\r\n\r\n\t\t\t\t\t\t// reset\r\n\t\t\t\t\t\t$(pagerNumber).find('li').show();\r\n\r\n\t\t\t\t\t\t// pagination update\r\n\t\t\t\t\t\t$.each(Plugin.getOption('toolbar.items.pagination.pages'),\r\n\t\t\t\t\t\t\tfunction (mode, option) {\r\n\t\t\t\t\t\t\t\tif (mUtil.isInResponsiveRange(mode)) {\r\n\t\t\t\t\t\t\t\t\tswitch (mode) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'desktop':\r\n\t\t\t\t\t\t\t\t\t\tcase 'tablet':\r\n\t\t\t\t\t\t\t\t\t\t\tvar end = Math.ceil(currentPage / option.pagesNumber) *\r\n\t\t\t\t\t\t\t\t\t\t\t\toption.pagesNumber;\r\n\t\t\t\t\t\t\t\t\t\t\tvar start = end - option.pagesNumber;\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerInput).hide();\r\n\t\t\t\t\t\t\t\t\t\t\tpg.meta = Plugin.getDataSourceParam('pagination');\r\n\t\t\t\t\t\t\t\t\t\t\tpg.paginationUpdate();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'mobile':\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerInput).show();\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerNumber).find('.m-datatable__pager-link--more-prev').closest('li').hide();\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerNumber).find('.m-datatable__pager-link--more-next').closest('li').hide();\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerNumber).find('.m-datatable__pager-link-number').closest('li').hide();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Update pagination number and button display\r\n\t\t\t\t\t */\r\n\t\t\t\t\tpaginationUpdate: function () {\r\n\t\t\t\t\t\tvar pager = $(datatable.table).siblings('.m-datatable__pager').find('.m-datatable__pager-nav'),\r\n\t\t\t\t\t\t\tpagerMorePrev = $(pager).find('.m-datatable__pager-link--more-prev'),\r\n\t\t\t\t\t\t\tpagerMoreNext = $(pager).find('.m-datatable__pager-link--more-next'),\r\n\t\t\t\t\t\t\tpagerFirst = $(pager).find('.m-datatable__pager-link--first'),\r\n\t\t\t\t\t\t\tpagerPrev = $(pager).find('.m-datatable__pager-link--prev'),\r\n\t\t\t\t\t\t\tpagerNext = $(pager).find('.m-datatable__pager-link--next'),\r\n\t\t\t\t\t\t\tpagerLast = $(pager).find('.m-datatable__pager-link--last');\r\n\r\n\t\t\t\t\t\t// get visible page\r\n\t\t\t\t\t\tvar pagerNumber = $(pager).find('.m-datatable__pager-link-number');\r\n\t\t\t\t\t\t// get page before of first visible\r\n\t\t\t\t\t\tvar morePrevPage = Math.max($(pagerNumber).first().data('page') - 1,\r\n\t\t\t\t\t\t\t1);\r\n\t\t\t\t\t\t$(pagerMorePrev).each(function (i, prev) {\r\n\t\t\t\t\t\t\t$(prev).attr('data-page', morePrevPage);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// show/hide <li>\r\n\t\t\t\t\t\tif (morePrevPage === 1) {\r\n\t\t\t\t\t\t\t$(pagerMorePrev).parent().hide();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(pagerMorePrev).parent().show();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// get page after of last visible\r\n\t\t\t\t\t\tvar moreNextPage = Math.min($(pagerNumber).last().data('page') + 1,\r\n\t\t\t\t\t\t\tpg.meta.pages);\r\n\t\t\t\t\t\t$(pagerMoreNext).each(function (i, prev) {\r\n\t\t\t\t\t\t\t$(pagerMoreNext).attr('data-page', moreNextPage).show();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// show/hide <li>\r\n\t\t\t\t\t\tif (moreNextPage === pg.meta.pages\r\n\t\t\t\t\t\t\t// missing dot fix when last hidden page is one left\r\n\t\t\t\t\t\t\t&& moreNextPage === $(pagerNumber).last().data('page')) {\r\n\t\t\t\t\t\t\t$(pagerMoreNext).parent().hide();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(pagerMoreNext).parent().show();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// begin/end of pages\r\n\t\t\t\t\t\tif (pg.meta.page === 1) {\r\n\t\t\t\t\t\t\t$(pagerFirst).attr('disabled', true).addClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t\t$(pagerPrev).attr('disabled', true).addClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(pagerFirst).removeAttr('disabled').removeClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t\t$(pagerPrev).removeAttr('disabled').removeClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (pg.meta.page === pg.meta.pages) {\r\n\t\t\t\t\t\t\t$(pagerNext).attr('disabled', true).addClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t\t$(pagerLast).attr('disabled', true).addClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(pagerNext).removeAttr('disabled').removeClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t\t$(pagerLast).removeAttr('disabled').removeClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// display more buttons\r\n\t\t\t\t\t\tvar nav = Plugin.getOption('toolbar.items.pagination.navigation');\r\n\t\t\t\t\t\tif (!nav.first) $(pagerFirst).remove();\r\n\t\t\t\t\t\tif (!nav.prev) $(pagerPrev).remove();\r\n\t\t\t\t\t\tif (!nav.next) $(pagerNext).remove();\r\n\t\t\t\t\t\tif (!nav.last) $(pagerLast).remove();\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tpg.init(meta);\r\n\t\t\t\treturn pg;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Hide/show table cell defined by\r\n\t\t\t * options[columns][i][responsive][visible/hidden]\r\n\t\t\t */\r\n\t\t\tcolumnHide: function () {\r\n\t\t\t\tvar screen = mUtil.getViewPort().width;\r\n\t\t\t\t// foreach columns setting\r\n\t\t\t\t$.each(options.columns, function (i, column) {\r\n\t\t\t\t\tif (typeof column.responsive !== 'undefined') {\r\n\t\t\t\t\t\tvar field = column.field;\r\n\t\t\t\t\t\tvar tds = $.grep($(datatable.table).find('.m-datatable__cell'), function (n, i) {\r\n\t\t\t\t\t\t\treturn field === $(n).data('field');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (mUtil.getBreakpoint(column.responsive.hidden) >= screen) {\r\n\t\t\t\t\t\t\t$(tds).hide();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(tds).show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (mUtil.getBreakpoint(column.responsive.visible) <= screen) {\r\n\t\t\t\t\t\t\t$(tds).show();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(tds).hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Setup sub datatable\r\n\t\t\t */\r\n\t\t\tsetupSubDatatable: function () {\r\n\t\t\t\tvar subTableCallback = Plugin.getOption('detail.content');\r\n\t\t\t\tif (typeof subTableCallback !== 'function') return;\r\n\r\n\t\t\t\t// subtable already exist\r\n\t\t\t\tif ($(datatable.table).find('.m-datatable__subtable').length > 0) return;\r\n\r\n\t\t\t\t$(datatable.wrap).addClass('m-datatable--subtable');\r\n\r\n\t\t\t\toptions.columns[0]['subtable'] = true;\r\n\r\n\t\t\t\t// toggle on open sub table\r\n\t\t\t\tvar toggleSubTable = function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t// get parent row of this subtable\r\n\t\t\t\t\tvar parentRow = $(this).closest('.m-datatable__row');\r\n\r\n\t\t\t\t\t// get subtable row for sub table\r\n\t\t\t\t\tvar subTableRow = $(parentRow).next('.m-datatable__row-subtable');\r\n\t\t\t\t\tif ($(subTableRow).length === 0) {\r\n\t\t\t\t\t\t// prepare DOM for sub table, each <tr> as parent and add <tr> as child table\r\n\t\t\t\t\t\tsubTableRow = $('<tr/>').addClass('m-datatable__row-subtable m-datatable__row-loading').hide().append($('<td/>').addClass('m-datatable__subtable').attr('colspan', Plugin.getTotalColumns()));\r\n\t\t\t\t\t\t$(parentRow).after(subTableRow);\r\n\t\t\t\t\t\t// add class to even row\r\n\t\t\t\t\t\tif ($(parentRow).hasClass('m-datatable__row--even')) {\r\n\t\t\t\t\t\t\t$(subTableRow).addClass('m-datatable__row-subtable--even');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$(subTableRow).toggle();\r\n\r\n\t\t\t\t\tvar subTable = $(subTableRow).find('.m-datatable__subtable');\r\n\r\n\t\t\t\t\t// get id from first column of parent row\r\n\t\t\t\t\tvar primaryKey = $(this).closest('[data-field]:first-child').find('.m-datatable__toggle-subtable').data('value');\r\n\r\n\t\t\t\t\tvar icon = $(this).find('i').removeAttr('class');\r\n\r\n\t\t\t\t\t// prevent duplicate datatable init\r\n\t\t\t\t\tif ($(parentRow).hasClass('m-datatable__row--subtable-expanded')) {\r\n\t\t\t\t\t\t$(icon).addClass(Plugin.getOption('layout.icons.rowDetail.collapse'));\r\n\t\t\t\t\t\t// remove expand class from parent row\r\n\t\t\t\t\t\t$(parentRow).removeClass('m-datatable__row--subtable-expanded');\r\n\t\t\t\t\t\t// trigger event on collapse\r\n\t\t\t\t\t\t$(datatable).trigger('m-datatable--on-collapse-subtable', [parentRow]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// expand and run callback function\r\n\t\t\t\t\t\t$(icon).addClass(Plugin.getOption('layout.icons.rowDetail.expand'));\r\n\t\t\t\t\t\t// add expand class to parent row\r\n\t\t\t\t\t\t$(parentRow).addClass('m-datatable__row--subtable-expanded');\r\n\t\t\t\t\t\t// trigger event on expand\r\n\t\t\t\t\t\t$(datatable).trigger('m-datatable--on-expand-subtable', [parentRow]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// prevent duplicate datatable init\r\n\t\t\t\t\tif ($(subTable).find('.m-datatable').length === 0) {\r\n\r\n\t\t\t\t\t\t// get data by primary id\r\n\t\t\t\t\t\t$.map(datatable.dataSet, function (n, i) {\r\n\t\t\t\t\t\t\t// primary id must be at the first column, otherwise e.data will be undefined\r\n\t\t\t\t\t\t\t// bug: if n[options.columns[0].field] is a number e.g 1===\"1\", then data \r\n\t\t\t\t\t\t\t// will be set as undefined, eg. OrderID is a number intead of string\r\n\t\t\t\t\t\t\tif (primaryKey === n[options.columns[0].field]) {\r\n\t\t\t\t\t\t\t\te.data = n;\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( (!isNaN(primaryKey) && !isNaN(n[options.columns[0].field])) && +primaryKey === +n[options.columns[0].field] ) {\r\n\t\t\t\t\t\t\t\te.data = n;\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// deprecated in v5.0.6\r\n\t\t\t\t\t\te.detailCell = subTable;\r\n\r\n\t\t\t\t\t\te.parentRow = parentRow;\r\n\t\t\t\t\t\te.subTable = subTable;\r\n\r\n\t\t\t\t\t\t// run callback with event\r\n\t\t\t\t\t\tsubTableCallback(e);\r\n\r\n\t\t\t\t\t\t$(subTable).children('.m-datatable').on('m-datatable--on-init', function (e) {\r\n\t\t\t\t\t\t\t$(subTableRow).removeClass('m-datatable__row-loading');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (Plugin.getOption('data.type') === 'local') {\r\n\t\t\t\t\t\t\t$(subTableRow).removeClass('m-datatable__row-loading');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\t$(datatable.tableBody).find('.m-datatable__row').each(function (tri, tr) {\r\n\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function (tdi, td) {\r\n\t\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\t\tvar column = $.grep(columns, function (n, i) {\r\n\t\t\t\t\t\t\treturn $(td).data('field') === n.field;\r\n\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t\tvar value = $(td).text();\r\n\t\t\t\t\t\t\t// enable column subtable toggle\r\n\t\t\t\t\t\t\tif (typeof column.subtable !== 'undefined' && column.subtable) {\r\n\t\t\t\t\t\t\t\t// check if subtable toggle exist\r\n\t\t\t\t\t\t\t\tif ($(td).find('.m-datatable__toggle-subtable').length > 0) return;\r\n\t\t\t\t\t\t\t\t// append subtable toggle\r\n\t\t\t\t\t\t\t\t$(td).html($('<a/>').addClass('m-datatable__toggle-subtable').attr('href', '#').attr('data-value', value).attr('title', Plugin.getOption('detail.title')).on('click', toggleSubTable).append($('<i/>').css('width', $(td).data('width')).addClass(Plugin.getOption('layout.icons.rowDetail.collapse'))));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// $(datatable.tableHead).find('.m-datatable__row').first()\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Datasource mapping callback\r\n\t\t\t */\r\n\t\t\tdataMapCallback: function (raw) {\r\n\t\t\t\t// static dataset array\r\n\t\t\t\tvar dataSet = raw;\r\n\t\t\t\t// dataset mapping callback\r\n\t\t\t\tif (typeof Plugin.getOption('data.source.read.map') === 'function') {\r\n\t\t\t\t\treturn Plugin.getOption('data.source.read.map')(raw);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// default data mapping fallback\r\n\t\t\t\t\tif (typeof raw !== 'undefined' && typeof raw.data !== 'undefined') {\r\n\t\t\t\t\t\tdataSet = raw.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn dataSet;\r\n\t\t\t},\r\n\r\n\t\t\tisSpinning: false,\r\n\t\t\t/**\r\n\t\t\t * BlockUI spinner callback\r\n\t\t\t * @param block\r\n\t\t\t */\r\n\t\t\tspinnerCallback: function (block) {\r\n\t\t\t\tif (block) {\r\n\t\t\t\t\tif (!Plugin.isSpinning) {\r\n\t\t\t\t\t\t// get spinner options\r\n\t\t\t\t\t\tvar spinnerOptions = Plugin.getOption('layout.spinner');\r\n\t\t\t\t\t\tif (spinnerOptions.message === true) {\r\n\t\t\t\t\t\t\t// use default spinner message from translation\r\n\t\t\t\t\t\t\tspinnerOptions.message = Plugin.getOption('translate.records.processing');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tPlugin.isSpinning = true;\r\n\t\t\t\t\t\tif (typeof mApp !== 'undefined') {\r\n\t\t\t\t\t\t\tmApp.block(datatable, spinnerOptions);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPlugin.isSpinning = false;\r\n\t\t\t\t\tif (typeof mApp !== 'undefined') {\r\n\t\t\t\t\t\tmApp.unblock(datatable);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Default sort callback function\r\n\t\t\t * @param data\r\n\t\t\t * @param sort\r\n\t\t\t * @param column\r\n\t\t\t * @returns {*|Array.<T>|{sort, field}|{asc, desc}}\r\n\t\t\t */\r\n\t\t\tsortCallback: function (data, sort, column) {\r\n\t\t\t\tvar type = column['type'] || 'string';\r\n\t\t\t\tvar format = column['format'] || '';\r\n\t\t\t\tvar field = column['field'];\r\n\r\n\t\t\t\treturn $(data).sort(function (a, b) {\r\n\t\t\t\t\tvar aField = a[field];\r\n\t\t\t\t\tvar bField = b[field];\r\n\r\n\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase 'date':\r\n\t\t\t\t\t\t\tif (typeof moment === 'undefined') {\r\n\t\t\t\t\t\t\t\tthrow new Error('Moment.js is required.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar diff = moment(aField, format).diff(moment(bField, format));\r\n\t\t\t\t\t\t\tif (sort === 'asc') {\r\n\t\t\t\t\t\t\t\treturn diff > 0 ? 1 : diff < 0 ? -1 : 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn diff < 0 ? 1 : diff > 0 ? -1 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'number':\r\n\t\t\t\t\t\t\tif (isNaN(parseFloat(aField)) && aField != null) {\r\n\t\t\t\t\t\t\t\taField = Number(aField.replace(/[^0-9\\.-]+/g, ''));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (isNaN(parseFloat(bField)) && bField != null) {\r\n\t\t\t\t\t\t\t\tbField = Number(bField.replace(/[^0-9\\.-]+/g, ''));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taField = parseFloat(aField);\r\n\t\t\t\t\t\t\tbField = parseFloat(bField);\r\n\t\t\t\t\t\t\tif (sort === 'asc') {\r\n\t\t\t\t\t\t\t\treturn aField > bField ? 1 : aField < bField ? -1 : 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aField < bField ? 1 : aField > bField ? -1 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'string':\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif (sort === 'asc') {\r\n\t\t\t\t\t\t\t\treturn aField > bField ? 1 : aField < bField ? -1 : 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aField < bField ? 1 : aField > bField ? -1 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Custom debug log\r\n\t\t\t * @param text\r\n\t\t\t * @param obj\r\n\t\t\t */\r\n\t\t\tlog: function (text, obj) {\r\n\t\t\t\tif (typeof obj === 'undefined') obj = '';\r\n\t\t\t\tif (datatable.debug) {\r\n\t\t\t\t\tconsole.log(text, obj);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Auto hide columnds overflow in row\r\n\t\t\t */\r\n\t\t\tautoHide: function () {\r\n\t\t\t\t$(datatable.table).find('.m-datatable__cell').show();\r\n\t\t\t\t$(datatable.tableBody).each(function () {\r\n\t\t\t\t\twhile ($(this)[0].offsetWidth < $(this)[0].scrollWidth) {\r\n\t\t\t\t\t\t$(datatable.table).find('.m-datatable__row').each(function (i) {\r\n\t\t\t\t\t\t\tvar cell = $(this).find('.m-datatable__cell').not(':hidden').last();\r\n\t\t\t\t\t\t\t$(cell).hide();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tPlugin.adjustCellsWidth.call();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar toggleHiddenColumns = function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\tvar row = $(this).closest('.m-datatable__row');\r\n\t\t\t\t\tvar detailRow = $(row).next();\r\n\r\n\t\t\t\t\tif (!$(detailRow).hasClass('m-datatable__row-detail')) {\r\n\t\t\t\t\t\t$(this).find('i').removeClass(Plugin.getOption('layout.icons.rowDetail.collapse')).addClass(Plugin.getOption('layout.icons.rowDetail.expand'));\r\n\r\n\t\t\t\t\t\tvar hidden = $(row).find('.m-datatable__cell:hidden').clone().show();\r\n\r\n\t\t\t\t\t\tdetailRow = $('<tr/>').addClass('m-datatable__row-detail').insertAfter(row);\r\n\t\t\t\t\t\tvar detailRowTd = $('<td/>').addClass('m-datatable__detail').attr('colspan', Plugin.getTotalColumns()).appendTo(detailRow);\r\n\r\n\t\t\t\t\t\tvar detailSubTable = $('<table/>');\r\n\t\t\t\t\t\t$(hidden).each(function () {\r\n\t\t\t\t\t\t\tvar field = $(this).data('field');\r\n\t\t\t\t\t\t\tvar column = $.grep(options.columns, function (n, i) {\r\n\t\t\t\t\t\t\t\treturn field === n.field;\r\n\t\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\t\t$(detailSubTable).append($('<tr class=\"m-datatable__row\"></tr>').append($('<td class=\"m-datatable__cell\"></td>').append($('<span/>').css('width', Plugin.offset).append(column.title))).append(this));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$(detailRowTd).append(detailSubTable);\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(this).find('i').removeClass(Plugin.getOption('layout.icons.rowDetail.expand')).addClass(Plugin.getOption('layout.icons.rowDetail.collapse'));\r\n\t\t\t\t\t\t$(detailRow).remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// toggle show hidden columns\r\n\t\t\t\t$(datatable.tableBody).find('.m-datatable__row').each(function () {\r\n\t\t\t\t\t$(this).prepend($('<td/>').addClass('m-datatable__cell m-datatable__toggle--detail').append($('<a/>').addClass('m-datatable__toggle-detail').attr('href', '').on('click', toggleHiddenColumns).append($('<i/>').css('width', '21px').// maintain width for both icons expand and collapse\r\n\t\t\t\t\taddClass(Plugin.getOption('layout.icons.rowDetail.collapse')))));\r\n\r\n\t\t\t\t\t// check if subtable toggle exist\r\n\t\t\t\t\tif ($(datatable.tableHead).find('.m-datatable__toggle-detail').length === 0) {\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__row').first().prepend('<th class=\"m-datatable__cell m-datatable__toggle-detail\"><span style=\"width: 21px\"></span></th>');\r\n\t\t\t\t\t\t$(datatable.tableFoot).find('.m-datatable__row').first().prepend('<th class=\"m-datatable__cell m-datatable__toggle-detail\"><span style=\"width: 21px\"></span></th>');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__toggle-detail').find('span').css('width', '21px');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * todo; implement hover column\r\n\t\t\t */\r\n\t\t\thoverColumn: function () {\r\n\t\t\t\t$(datatable.tableBody).on('mouseenter', '.m-datatable__cell', function () {\r\n\t\t\t\t\tvar colIdx = $(Plugin.cell(this).nodes()).index();\r\n\t\t\t\t\t$(Plugin.cells().nodes()).removeClass('m-datatable__cell--hover');\r\n\t\t\t\t\t$(Plugin.column(colIdx).nodes()).addClass('m-datatable__cell--hover');\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * To enable auto columns features for remote data source\r\n\t\t\t */\r\n\t\t\tsetAutoColumns: function () {\r\n\t\t\t\tif (Plugin.getOption('data.autoColumns')) {\r\n\t\t\t\t\t$.each(datatable.dataSet[0], function (k, v) {\r\n\t\t\t\t\t\tvar found = $.grep(options.columns, function (n, i) {\r\n\t\t\t\t\t\t\treturn k === n.field;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (found.length === 0) {\r\n\t\t\t\t\t\t\toptions.columns.push({field: k, title: k});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__row').remove();\r\n\t\t\t\t\tPlugin.setHeadTitle();\r\n\t\t\t\t\tif (Plugin.getOption('layout.footer')) {\r\n\t\t\t\t\t\t$(datatable.tableFoot).find('.m-datatable__row').remove();\r\n\t\t\t\t\t\tPlugin.setHeadTitle(datatable.tableFoot);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/********************\r\n\t\t\t ** HELPERS\r\n\t\t\t ********************/\r\n\r\n\t\t\t/**\r\n\t\t\t * Check if table is a locked colums table\r\n\t\t\t */\r\n\t\t\tisLocked: function () {\r\n\t\t\t\treturn mUtil.hasClass(datatable.wrap[0], 'm-datatable--lock') || false;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get total extra space of an element for width calculation, including\r\n\t\t\t * padding, margin, border\r\n\t\t\t * @param element\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tgetExtraSpace: function (element) {\r\n\t\t\t\tvar padding = parseInt($(element).css('paddingRight')) +\r\n\t\t\t\t\tparseInt($(element).css('paddingLeft'));\r\n\t\t\t\tvar margin = parseInt($(element).css('marginRight')) +\r\n\t\t\t\t\tparseInt($(element).css('marginLeft'));\r\n\t\t\t\tvar border = Math.ceil(\r\n\t\t\t\t\t$(element).css('border-right-width').replace('px', ''));\r\n\t\t\t\treturn padding + margin + border;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Insert data of array into {{ }} template placeholder\r\n\t\t\t * @param template\r\n\t\t\t * @param data\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tdataPlaceholder: function (template, data) {\r\n\t\t\t\tvar result = template;\r\n\t\t\t\t$.each(data, function (key, val) {\r\n\t\t\t\t\tresult = result.replace('{{' + key + '}}', val);\r\n\t\t\t\t});\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get table unique ID\r\n\t\t\t * Note: table unique change each time refreshed\r\n\t\t\t * @param suffix\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetTableId: function (suffix) {\r\n\t\t\t\tif (typeof suffix === 'undefined') suffix = '';\r\n\t\t\t\tvar id = $(datatable).attr('id');\r\n\t\t\t\tif (typeof id === 'undefined') {\r\n\t\t\t\t\tid = $(datatable).attr('class').split(' ')[0];\r\n\t\t\t\t}\r\n\t\t\t\treturn id + suffix;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get table prefix with depth number\r\n\t\t\t */\r\n\t\t\tgetTablePrefix: function (suffix) {\r\n\t\t\t\tif (typeof suffix !== 'undefined') suffix = '-' + suffix;\r\n\t\t\t\treturn Plugin.getTableId() + '-' + Plugin.getDepth() + suffix;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get current table depth of sub table\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tgetDepth: function () {\r\n\t\t\t\tvar depth = 0;\r\n\t\t\t\tvar table = datatable.table;\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttable = $(table).parents('.m-datatable__table');\r\n\t\t\t\t\tdepth++;\r\n\t\t\t\t} while ($(table).length > 0);\r\n\t\t\t\treturn depth;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Keep state item\r\n\t\t\t * @param key\r\n\t\t\t * @param value\r\n\t\t\t */\r\n\t\t\tstateKeep: function (key, value) {\r\n\t\t\t\tkey = Plugin.getTablePrefix(key);\r\n\t\t\t\tif (Plugin.getOption('data.saveState') === false) return;\r\n\t\t\t\tif (Plugin.getOption('data.saveState.webstorage') && localStorage) {\r\n\t\t\t\t\tlocalStorage.setItem(key, JSON.stringify(value));\r\n\t\t\t\t}\r\n\t\t\t\tif (Plugin.getOption('data.saveState.cookie')) {\r\n\t\t\t\t\tCookies.set(key, JSON.stringify(value));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get state item\r\n\t\t\t * @param key\r\n\t\t\t * @param defValue\r\n\t\t\t */\r\n\t\t\tstateGet: function (key, defValue) {\r\n\t\t\t\tkey = Plugin.getTablePrefix(key);\r\n\t\t\t\tif (Plugin.getOption('data.saveState') === false) return;\r\n\t\t\t\tvar value = null;\r\n\t\t\t\tif (Plugin.getOption('data.saveState.webstorage') && localStorage) {\r\n\t\t\t\t\tvalue = localStorage.getItem(key);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = Cookies.get(key);\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value !== 'undefined' && value !== null) {\r\n\t\t\t\t\treturn JSON.parse(value);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Update data in state without clear existing\r\n\t\t\t * @param key\r\n\t\t\t * @param value\r\n\t\t\t */\r\n\t\t\tstateUpdate: function (key, value) {\r\n\t\t\t\tvar ori = Plugin.stateGet(key);\r\n\t\t\t\tif (typeof ori === 'undefined' || ori === null) ori = {};\r\n\t\t\t\tPlugin.stateKeep(key, $.extend({}, ori, value));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Remove state item\r\n\t\t\t * @param key\r\n\t\t\t */\r\n\t\t\tstateRemove: function (key) {\r\n\t\t\t\tkey = Plugin.getTablePrefix(key);\r\n\t\t\t\tif (localStorage) {\r\n\t\t\t\t\tlocalStorage.removeItem(key);\r\n\t\t\t\t}\r\n\t\t\t\tCookies.remove(key);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get total columns.\r\n\t\t\t */\r\n\t\t\tgetTotalColumns: function (tablePart) {\r\n\t\t\t\tif (typeof tablePart === 'undefined') tablePart = datatable.tableBody;\r\n\t\t\t\treturn $(tablePart).find('.m-datatable__row').first().find('.m-datatable__cell').length;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get table row. Useful to get row when current table is in lock mode.\r\n\t\t\t * Can be used for both lock and normal table mode.\r\n\t\t\t * By default, returning result will be in a list of <td>.\r\n\t\t\t * @param tablePart\r\n\t\t\t * @param row 1-based index\r\n\t\t\t * @param tdOnly Optional. Default true\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetOneRow: function (tablePart, row, tdOnly) {\r\n\t\t\t\tif (typeof tdOnly === 'undefined') tdOnly = true;\r\n\t\t\t\t// get list of <tr>\r\n\t\t\t\tvar result = $(tablePart).find('.m-datatable__row:not(.m-datatable__row-detail):nth-child(' + row + ')');\r\n\t\t\t\tif (tdOnly) {\r\n\t\t\t\t\t// get list of <td> or <th>\r\n\t\t\t\t\tresult = result.find('.m-datatable__cell');\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Check if element has vertical overflow\r\n\t\t\t * @param element\r\n\t\t\t * @returns {boolean}\r\n\t\t\t */\r\n\t\t\thasOverflowY: function (element) {\r\n\t\t\t\tvar children = $(element).find('.m-datatable__row');\r\n\t\t\t\tvar maxHeight = 0;\r\n\r\n\t\t\t\tif (children.length > 0) {\r\n\t\t\t\t\t$(children).each(function (tdi, td) {\r\n\t\t\t\t\t\tmaxHeight += Math.floor($(td).innerHeight());\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn maxHeight > $(element).innerHeight();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Sort table row at HTML level by column index.\r\n\t\t\t * todo; Not in use.\r\n\t\t\t * @param header Header sort clicked\r\n\t\t\t * @param sort asc|desc. Optional. Default asc\r\n\t\t\t * @param int Boolean. Optional. Comparison value parse to integer.\r\n\t\t\t *     Default false\r\n\t\t\t */\r\n\t\t\tsortColumn: function (header, sort, int) {\r\n\t\t\t\tif (typeof sort === 'undefined') sort = 'asc'; // desc\r\n\t\t\t\tif (typeof int === 'undefined') int = false;\r\n\r\n\t\t\t\tvar column = $(header).index();\r\n\t\t\t\tvar rows = $(datatable.tableBody).find('.m-datatable__row');\r\n\t\t\t\tvar hIndex = $(header).closest('.m-datatable__lock').index();\r\n\t\t\t\tif (hIndex !== -1) {\r\n\t\t\t\t\trows = $(datatable.tableBody).find('.m-datatable__lock:nth-child(' + (hIndex + 1) + ')').find('.m-datatable__row');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar container = $(rows).parent();\r\n\t\t\t\t$(rows).sort(function (a, b) {\r\n\t\t\t\t\tvar tda = $(a).find('td:nth-child(' + column + ')').text();\r\n\t\t\t\t\tvar tdb = $(b).find('td:nth-child(' + column + ')').text();\r\n\r\n\t\t\t\t\tif (int) {\r\n\t\t\t\t\t\t// useful for integer type sorting\r\n\t\t\t\t\t\ttda = parseInt(tda);\r\n\t\t\t\t\t\ttdb = parseInt(tdb);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (sort === 'asc') {\r\n\t\t\t\t\t\treturn tda > tdb ? 1 : tda < tdb ? -1 : 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn tda < tdb ? 1 : tda > tdb ? -1 : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}).appendTo(container);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Perform sort remote and local\r\n\t\t\t */\r\n\t\t\tsorting: function () {\r\n\t\t\t\tvar sortObj = {\r\n\t\t\t\t\tinit: function () {\r\n\t\t\t\t\t\tif (options.sortable) {\r\n\t\t\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__cell:not(.m-datatable__cell--check)').addClass('m-datatable__cell--sort').off('click').on('click', sortObj.sortClick);\r\n\t\t\t\t\t\t\t// first init\r\n\t\t\t\t\t\t\tsortObj.setIcon();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsetIcon: function () {\r\n\t\t\t\t\t\tvar meta = Plugin.getDataSourceParam('sort');\r\n\t\t\t\t\t\tif ($.isEmptyObject(meta)) return;\r\n\r\n\t\t\t\t\t\t// sort icon beside column header\r\n\t\t\t\t\t\tvar td = $(datatable.tableHead).find('.m-datatable__cell[data-field=\"' + meta.field + '\"]').attr('data-sort', meta.sort);\r\n\t\t\t\t\t\tvar sorting = $(td).find('span');\r\n\t\t\t\t\t\tvar icon = $(sorting).find('i');\r\n\r\n\t\t\t\t\t\tvar icons = Plugin.getOption('layout.icons.sort');\r\n\t\t\t\t\t\t// update sort icon; desc & asc\r\n\t\t\t\t\t\tif ($(icon).length > 0) {\r\n\t\t\t\t\t\t\t$(icon).removeAttr('class').addClass(icons[meta.sort]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(sorting).append($('<i/>').addClass(icons[meta.sort]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsortClick: function (e) {\r\n\t\t\t\t\t\tvar meta = Plugin.getDataSourceParam('sort');\r\n\t\t\t\t\t\tvar field = $(this).data('field');\r\n\t\t\t\t\t\tvar column = Plugin.getColumnByField(field);\r\n\t\t\t\t\t\t// sort is disabled for this column\r\n\t\t\t\t\t\tif (typeof column.sortable !== 'undefined' &&\r\n\t\t\t\t\t\t\tcolumn.sortable === false) return;\r\n\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__cell > span > i').remove();\r\n\r\n\t\t\t\t\t\tif (options.sortable) {\r\n\t\t\t\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\t\t\t\tvar sort = 'desc';\r\n\t\t\t\t\t\t\tif (Plugin.getObject('field', meta) === field) {\r\n\t\t\t\t\t\t\t\tsort = Plugin.getObject('sort', meta);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// toggle sort\r\n\t\t\t\t\t\t\tsort = typeof sort === 'undefined' || sort === 'desc'\r\n\t\t\t\t\t\t\t\t? 'asc'\r\n\t\t\t\t\t\t\t\t: 'desc';\r\n\r\n\t\t\t\t\t\t\t// update field and sort params\r\n\t\t\t\t\t\t\tmeta = {field: field, sort: sort};\r\n\t\t\t\t\t\t\tPlugin.setDataSourceParam('sort', meta);\r\n\r\n\t\t\t\t\t\t\tsortObj.setIcon();\r\n\r\n\t\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\t\tPlugin.dataRender('sort');\r\n\t\t\t\t\t\t\t\t$(datatable).trigger('m-datatable--on-sort', meta);\r\n\t\t\t\t\t\t\t}, 300);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tsortObj.init();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Update JSON data list linked with sort, filter and pagination.\r\n\t\t\t * Call this method, before using dataSet variable.\r\n\t\t\t * @returns {*|null}\r\n\t\t\t */\r\n\t\t\tlocalDataUpdate: function () {\r\n\t\t\t\t// todo; fix twice execution\r\n\t\t\t\tvar params = Plugin.getDataSourceParam();\r\n\t\t\t\tif (typeof datatable.originalDataSet === 'undefined') {\r\n\t\t\t\t\tdatatable.originalDataSet = datatable.dataSet;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar field = Plugin.getObject('sort.field', params);\r\n\t\t\t\tvar sort = Plugin.getObject('sort.sort', params);\r\n\t\t\t\tvar column = Plugin.getColumnByField(field);\r\n\t\t\t\tif (typeof column !== 'undefined' && Plugin.getOption('data.serverSorting') !== true) {\r\n\t\t\t\t\tif (typeof column.sortCallback === 'function') {\r\n\t\t\t\t\t\tdatatable.dataSet = column.sortCallback(datatable.originalDataSet, sort, column);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatatable.dataSet = Plugin.sortCallback(datatable.originalDataSet, sort, column);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdatatable.dataSet = datatable.originalDataSet;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if server filter enable, don't pass local filter\r\n\t\t\t\tif (typeof params.query === 'object' && !Plugin.getOption('data.serverFiltering')) {\r\n\t\t\t\t\tparams.query = params.query || {};\r\n\r\n\t\t\t\t\tvar nestedSearch = function (obj) {\r\n\t\t\t\t\t\tfor (var field in obj) {\r\n\t\t\t\t\t\t\tif (!obj.hasOwnProperty(field)) continue;\r\n\t\t\t\t\t\t\tif (typeof obj[field] === 'string') {\r\n\t\t\t\t\t\t\t\tif (obj[field].toLowerCase() == search || obj[field].toLowerCase().indexOf(search) !== -1) {\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (typeof obj[field] === 'number') {\r\n\t\t\t\t\t\t\t\tif (obj[field] === search) {\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (typeof obj[field] === 'object') {\r\n\t\t\t\t\t\t\t\treturn nestedSearch(obj[field]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tvar search = $(Plugin.getOption('search.input')).val();\r\n\t\t\t\t\tif (typeof search !== 'undefined' && search !== '') {\r\n\t\t\t\t\t\tsearch = search.toLowerCase();\r\n\t\t\t\t\t\tdatatable.dataSet = $.grep(datatable.dataSet, nestedSearch);\r\n\t\t\t\t\t\t// remove generalSearch as we don't need this for next columns filter\r\n\t\t\t\t\t\tdelete params.query[Plugin.getGeneralSearchKey()];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// remove empty element from array\r\n\t\t\t\t\t$.each(params.query, function (k, v) {\r\n\t\t\t\t\t\tif (v === '') {\r\n\t\t\t\t\t\t\tdelete params.query[k];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// filter array by query\r\n\t\t\t\t\tdatatable.dataSet = Plugin.filterArray(datatable.dataSet, params.query);\r\n\r\n\t\t\t\t\t// reset array index\r\n\t\t\t\t\tdatatable.dataSet = datatable.dataSet.filter(function () {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn datatable.dataSet;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Utility helper to filter array by object pair of {key:value}\r\n\t\t\t * @param list\r\n\t\t\t * @param args\r\n\t\t\t * @param operator\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tfilterArray: function (list, args, operator) {\r\n\t\t\t\tif (typeof list !== 'object') {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof operator === 'undefined') operator = 'AND';\r\n\r\n\t\t\t\tif (typeof args !== 'object') {\r\n\t\t\t\t\treturn list;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toperator = operator.toUpperCase();\r\n\r\n\t\t\t\tif ($.inArray(operator, ['AND', 'OR', 'NOT']) === -1) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar count = Object.keys(args).length;\r\n\t\t\t\tvar filtered = [];\r\n\r\n\t\t\t\t$.each(list, function (key, obj) {\r\n\t\t\t\t\tvar to_match = obj;\r\n\r\n\t\t\t\t\tvar matched = 0;\r\n\t\t\t\t\t$.each(args, function (m_key, m_value) {\r\n\t\t\t\t\t\tm_value = m_value instanceof Array ? m_value : [m_value];\r\n\t\t\t\t\t\tif (to_match.hasOwnProperty(m_key)) {\r\n\t\t\t\t\t\t\tvar lhs = to_match[m_key].toString().toLowerCase();\r\n\t\t\t\t\t\t\tm_value.forEach(function (item, index) {\r\n\t\t\t\t\t\t\t\tif (item.toString().toLowerCase() == lhs || lhs.indexOf(item.toString().toLowerCase()) !== -1) {\r\n\t\t\t\t\t\t\t\t\tmatched++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (('AND' == operator && matched == count) ||\r\n\t\t\t\t\t\t('OR' == operator && matched > 0) ||\r\n\t\t\t\t\t\t('NOT' == operator && 0 == matched)) {\r\n\t\t\t\t\t\tfiltered[key] = obj;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlist = filtered;\r\n\r\n\t\t\t\treturn list;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Reset lock column scroll to 0 when resize\r\n\t\t\t */\r\n\t\t\tresetScroll: function () {\r\n\t\t\t\tif (typeof options.detail === 'undefined' && Plugin.getDepth() === 1) {\r\n\t\t\t\t\tif (mUtil.isRTL()) {\r\n\t\t\t\t\t\t$(datatable.table).find('.m-datatable__row').css('right', 0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(datatable.table).find('.m-datatable__row').css('left', 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(datatable.table).find('.m-datatable__lock').css('top', 0);\r\n\t\t\t\t\t$(datatable.tableBody).scrollTop(0);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get column options by field\r\n\t\t\t * @param field\r\n\t\t\t * @returns {boolean}\r\n\t\t\t */\r\n\t\t\tgetColumnByField: function (field) {\r\n\t\t\t\tif (typeof field === 'undefined') return;\r\n\t\t\t\tvar result;\r\n\t\t\t\t$.each(options.columns, function (i, column) {\r\n\t\t\t\t\tif (field === column.field) {\r\n\t\t\t\t\t\tresult = column;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get default sort column\r\n\t\t\t */\r\n\t\t\tgetDefaultSortColumn: function () {\r\n\t\t\t\tvar result;\r\n\t\t\t\t$.each(options.columns, function (i, column) {\r\n\t\t\t\t\tif (typeof column.sortable !== 'undefined'\r\n\t\t\t\t\t\t&& $.inArray(column.sortable, ['asc', 'desc']) !== -1) {\r\n\t\t\t\t\t\tresult = {sort: column.sortable, field: column.field};\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Helper to get element dimensions, when the element is hidden\r\n\t\t\t * @param element\r\n\t\t\t * @param includeMargin\r\n\t\t\t * @returns {{width: number, height: number, innerWidth: number,\r\n\t\t\t *     innerHeight: number, outerWidth: number, outerHeight: number}}\r\n\t\t\t */\r\n\t\t\tgetHiddenDimensions: function (element, includeMargin) {\r\n\t\t\t\tvar props = {\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\tvisibility: 'hidden',\r\n\t\t\t\t\t\tdisplay: 'block',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdim = {\r\n\t\t\t\t\t\twidth: 0,\r\n\t\t\t\t\t\theight: 0,\r\n\t\t\t\t\t\tinnerWidth: 0,\r\n\t\t\t\t\t\tinnerHeight: 0,\r\n\t\t\t\t\t\touterWidth: 0,\r\n\t\t\t\t\t\touterHeight: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t\thiddenParents = $(element).parents().addBack().not(':visible');\r\n\t\t\t\tincludeMargin = (typeof includeMargin === 'boolean')\r\n\t\t\t\t\t? includeMargin\r\n\t\t\t\t\t: false;\r\n\r\n\t\t\t\tvar oldProps = [];\r\n\t\t\t\thiddenParents.each(function () {\r\n\t\t\t\t\tvar old = {};\r\n\r\n\t\t\t\t\tfor (var name in props) {\r\n\t\t\t\t\t\told[name] = this.style[name];\r\n\t\t\t\t\t\tthis.style[name] = props[name];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toldProps.push(old);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdim.width = $(element).width();\r\n\t\t\t\tdim.outerWidth = $(element).outerWidth(includeMargin);\r\n\t\t\t\tdim.innerWidth = $(element).innerWidth();\r\n\t\t\t\tdim.height = $(element).height();\r\n\t\t\t\tdim.innerHeight = $(element).innerHeight();\r\n\t\t\t\tdim.outerHeight = $(element).outerHeight(includeMargin);\r\n\r\n\t\t\t\thiddenParents.each(function (i) {\r\n\t\t\t\t\tvar old = oldProps[i];\r\n\t\t\t\t\tfor (var name in props) {\r\n\t\t\t\t\t\tthis.style[name] = old[name];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn dim;\r\n\t\t\t},\r\n\r\n\t\t\tgetGeneralSearchKey: function () {\r\n\t\t\t\tvar searchInput = $(Plugin.getOption('search.input'));\r\n\t\t\t\treturn $(searchInput).prop('name') || $(searchInput).prop('id');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get value by dot notation path string and to prevent undefined errors\r\n\t\t\t * @param path String Dot notation path in string\r\n\t\t\t * @param object Object to iterate\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetObject: function (path, object) {\r\n\t\t\t\treturn path.split('.').reduce(function (obj, i) {\r\n\t\t\t\t\treturn obj !== null && typeof obj[i] !== 'undefined' ? obj[i] : null;\r\n\t\t\t\t}, object);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Extend object\r\n\t\t\t * @param obj\r\n\t\t\t * @param path\r\n\t\t\t * @param value\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\textendObj: function (obj, path, value) {\r\n\t\t\t\tvar levels = path.split('.'),\r\n\t\t\t\t\ti = 0;\r\n\r\n\t\t\t\tfunction createLevel(child) {\r\n\t\t\t\t\tvar name = levels[i++];\r\n\t\t\t\t\tif (typeof child[name] !== 'undefined' && child[name] !== null) {\r\n\t\t\t\t\t\tif (typeof child[name] !== 'object' &&\r\n\t\t\t\t\t\t\ttypeof child[name] !== 'function') {\r\n\t\t\t\t\t\t\tchild[name] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchild[name] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (i === levels.length) {\r\n\t\t\t\t\t\tchild[name] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcreateLevel(child[name]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcreateLevel(obj);\r\n\t\t\t\treturn obj;\r\n\t\t\t},\r\n\r\n\t\t\trowEvenOdd: function () {\r\n\t\t\t\t// row even class\r\n\t\t\t\t$(datatable.tableBody).find('.m-datatable__row').removeClass('m-datatable__row--even');\r\n\t\t\t\tif ($(datatable.wrap).hasClass('m-datatable--subtable')) {\r\n\t\t\t\t\t$(datatable.tableBody).find('.m-datatable__row:not(.m-datatable__row-detail):even').addClass('m-datatable__row--even');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(datatable.tableBody).find('.m-datatable__row:nth-child(even)').addClass('m-datatable__row--even');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/********************\r\n\t\t\t ** PUBLIC API METHODS\r\n\t\t\t ********************/\r\n\r\n\t\t\t// delay timer\r\n\t\t\ttimer: 0,\r\n\r\n\t\t\t/**\r\n\t\t\t * Redraw datatable by recalculating its DOM elements, etc.\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tredraw: function () {\r\n\t\t\t\tPlugin.adjustCellsWidth.call();\r\n\t\t\t\tif (Plugin.isLocked()) {\r\n\t\t\t\t\t// fix hiding cell width issue\r\n\t\t\t\t\tPlugin.scrollbar();\r\n\t\t\t\t\tPlugin.resetScroll();\r\n\r\n\t\t\t\t\tPlugin.adjustCellsHeight.call();\r\n\t\t\t\t}\r\n\t\t\t\tPlugin.adjustLockContainer.call();\r\n\t\t\t\tPlugin.initHeight.call();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shortcode to reload\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tload: function () {\r\n\t\t\t\tPlugin.reload();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Datasource reload\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\treload: function () {\r\n\t\t\t\tvar delay = (function () {\r\n\t\t\t\t\treturn function (callback, ms) {\r\n\t\t\t\t\t\tclearTimeout(Plugin.timer);\r\n\t\t\t\t\t\tPlugin.timer = setTimeout(callback, ms);\r\n\t\t\t\t\t};\r\n\t\t\t\t})();\r\n\t\t\t\tdelay(function () {\r\n\t\t\t\t\t// local only. remote pagination will skip this block\r\n\t\t\t\t\tif (!options.data.serverFiltering) {\r\n\t\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tPlugin.dataRender();\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-reloaded');\r\n\t\t\t\t}, Plugin.getOption('search.delay'));\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get record by record ID\r\n\t\t\t * @param id\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tgetRecord: function (id) {\r\n\t\t\t\tif (typeof datatable.tableBody === 'undefined') datatable.tableBody = $(datatable.table).children('tbody');\r\n\t\t\t\t$(datatable.tableBody).find('.m-datatable__cell:first-child').each(function (i, cell) {\r\n\t\t\t\t\tif (id == $(cell).text()) {\r\n\t\t\t\t\t\tvar rowNumber = $(cell).closest('.m-datatable__row').index() + 1;\r\n\t\t\t\t\t\tdatatable.API.record = datatable.API.value = Plugin.getOneRow(datatable.tableBody, rowNumber);\r\n\t\t\t\t\t\treturn datatable;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Get column of current record ID\r\n\t\t\t * @param columnName\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tgetColumn: function (columnName) {\r\n\t\t\t\tPlugin.setSelectedRecords();\r\n\t\t\t\tdatatable.API.value = $(datatable.API.record).find('[data-field=\"' + columnName + '\"]');\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Destroy datatable to original DOM state before datatable was\r\n\t\t\t * initialized\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tdestroy: function () {\r\n\t\t\t\t$(datatable).parent().find('.m-datatable__pager').remove();\r\n\t\t\t\tvar initialDatatable = $(datatable.initialDatatable).addClass('m-datatable--destroyed').show();\r\n\t\t\t\t$(datatable).replaceWith(initialDatatable);\r\n\t\t\t\tdatatable = initialDatatable;\r\n\t\t\t\t$(datatable).trigger('m-datatable--on-destroy');\r\n\t\t\t\tPlugin.isInit = false;\r\n\t\t\t\tinitialDatatable = null;\r\n\t\t\t\treturn initialDatatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Sort by column field\r\n\t\t\t * @param field\r\n\t\t\t * @param sort\r\n\t\t\t */\r\n\t\t\tsort: function (field, sort) {\r\n\t\t\t\t// toggle sort\r\n\t\t\t\tsort = typeof sort === 'undefined' ? 'asc' : sort;\r\n\r\n\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\t// update field and sort params\r\n\t\t\t\tvar meta = {field: field, sort: sort};\r\n\t\t\t\tPlugin.setDataSourceParam('sort', meta);\r\n\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tPlugin.dataRender('sort');\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-sort', meta);\r\n\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__cell > span > i').remove();\r\n\t\t\t\t}, 300);\r\n\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Get current selected column value\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tgetValue: function () {\r\n\t\t\t\treturn $(datatable.API.value).text();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set checkbox active\r\n\t\t\t * @param cell JQuery selector or checkbox ID\r\n\t\t\t */\r\n\t\t\tsetActive: function (cell) {\r\n\t\t\t\tif (typeof cell === 'string') {\r\n\t\t\t\t\t// set by checkbox id\r\n\t\t\t\t\tcell = $(datatable.tableBody).find('.m-checkbox--single > [type=\"checkbox\"][value=\"' + cell + '\"]');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(cell).prop('checked', true);\r\n\r\n\t\t\t\t// normal table\r\n\t\t\t\tvar row = $(cell).closest('.m-datatable__row').addClass('m-datatable__row--active');\r\n\r\n\t\t\t\tvar index = $(row).index() + 1;\r\n\t\t\t\t// lock table\r\n\t\t\t\t$(row).closest('.m-datatable__lock').parent().find('.m-datatable__row:nth-child(' + index + ')').addClass('m-datatable__row--active');\r\n\r\n\t\t\t\tvar ids = [];\r\n\t\t\t\t$(row).each(function (i, td) {\r\n\t\t\t\t\tvar id = $(td).find('.m-checkbox--single:not(.m-checkbox--all) > [type=\"checkbox\"]').val();\r\n\t\t\t\t\tif (typeof id !== 'undefined') {\r\n\t\t\t\t\t\tids.push(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(datatable).trigger('m-datatable--on-check', [ids]);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set checkbox inactive\r\n\t\t\t * @param cell JQuery selector or checkbox ID\r\n\t\t\t */\r\n\t\t\tsetInactive: function (cell) {\r\n\t\t\t\tif (typeof cell === 'string') {\r\n\t\t\t\t\t// set by checkbox id\r\n\t\t\t\t\tcell = $(datatable.tableBody).find('.m-checkbox--single > [type=\"checkbox\"][value=\"' + cell + '\"]');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(cell).prop('checked', false);\r\n\r\n\t\t\t\t// normal table\r\n\t\t\t\tvar row = $(cell).closest('.m-datatable__row').removeClass('m-datatable__row--active');\r\n\t\t\t\tvar index = $(row).index() + 1;\r\n\r\n\t\t\t\t// lock table\r\n\t\t\t\t$(row).closest('.m-datatable__lock').parent().find('.m-datatable__row:nth-child(' + index + ')').removeClass('m-datatable__row--active');\r\n\r\n\t\t\t\tvar ids = [];\r\n\t\t\t\t$(row).each(function (i, td) {\r\n\t\t\t\t\tvar id = $(td).find('.m-checkbox--single:not(.m-checkbox--all) > [type=\"checkbox\"]').val();\r\n\t\t\t\t\tif (typeof id !== 'undefined') {\r\n\t\t\t\t\t\tids.push(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(datatable).trigger('m-datatable--on-uncheck', [ids]);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set all checkboxes active or inactive\r\n\t\t\t * @param active\r\n\t\t\t */\r\n\t\t\tsetActiveAll: function (active) {\r\n\t\t\t\t// todo; check if child table also will set active?\r\n\t\t\t\tvar checkboxes = $(datatable.table).find('.m-datatable__body .m-datatable__row').find('.m-datatable__cell--check .m-checkbox [type=\"checkbox\"]');\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\tPlugin.setActive(checkboxes);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPlugin.setInactive(checkboxes);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Get selected rows which are active\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tsetSelectedRecords: function () {\r\n\t\t\t\tdatatable.API.record = $(datatable.tableBody).find('.m-datatable__row--active');\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get selected records\r\n\t\t\t * @returns {null}\r\n\t\t\t */\r\n\t\t\tgetSelectedRecords: function () {\r\n\t\t\t\t// support old method\r\n\t\t\t\tPlugin.setSelectedRecords();\r\n\t\t\t\tdatatable.API.record = datatable.rows('.m-datatable__row--active').nodes();\r\n\t\t\t\treturn datatable.API.record;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get options by dots notation path\r\n\t\t\t * @param path String Dot notation path in string\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetOption: function (path) {\r\n\t\t\t\treturn Plugin.getObject(path, options);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set global options nodes by dots notation path\r\n\t\t\t * @param path\r\n\t\t\t * @param object\r\n\t\t\t */\r\n\t\t\tsetOption: function (path, object) {\r\n\t\t\t\toptions = Plugin.extendObj(options, path, object);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Search filter for local & remote\r\n\t\t\t * @param value\r\n\t\t\t * @param columns. Optional list of columns to be filtered.\r\n\t\t\t */\r\n\t\t\tsearch: function (value, columns) {\r\n\t\t\t\tif (typeof columns !== 'undefined') columns = $.makeArray(columns);\r\n\t\t\t\tvar delay = (function () {\r\n\t\t\t\t\treturn function (callback, ms) {\r\n\t\t\t\t\t\tclearTimeout(Plugin.timer);\r\n\t\t\t\t\t\tPlugin.timer = setTimeout(callback, ms);\r\n\t\t\t\t\t};\r\n\t\t\t\t})();\r\n\r\n\t\t\t\tdelay(function () {\r\n\t\t\t\t\t// get query parameters\r\n\t\t\t\t\tvar query = Plugin.getDataSourceQuery();\r\n\r\n\t\t\t\t\t// search not by columns\r\n\t\t\t\t\tif (typeof columns === 'undefined' && typeof value !== 'undefined') {\r\n\t\t\t\t\t\tvar key = Plugin.getGeneralSearchKey();\r\n\t\t\t\t\t\tquery[key] = value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// search by columns, support multiple columns\r\n\t\t\t\t\tif (typeof columns === 'object') {\r\n\t\t\t\t\t\t$.each(columns, function (k, column) {\r\n\t\t\t\t\t\t\tquery[column] = value;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// remove empty element from arrays\r\n\t\t\t\t\t\t$.each(query, function (k, v) {\r\n\t\t\t\t\t\t\tif (v === '' || $.isEmptyObject(v)) {\r\n\t\t\t\t\t\t\t\tdelete query[k];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tPlugin.setDataSourceQuery(query);\r\n\r\n\t\t\t\t\t// local filter only. remote pagination will skip this block\r\n\t\t\t\t\tif (!options.data.serverFiltering) {\r\n\t\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tPlugin.dataRender('search');\r\n\t\t\t\t}, Plugin.getOption('search.delay'));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set datasource paramsextractextract\r\n\t\t\t * @param param\r\n\t\t\t * @param value\r\n\t\t\t */\r\n\t\t\tsetDataSourceParam: function (param, value) {\r\n\t\t\t\tdatatable.API.params = $.extend({}, {\r\n\t\t\t\t\tpagination: {page: 1, perpage: Plugin.getOption('data.pageSize')},\r\n\t\t\t\t\tsort: Plugin.getDefaultSortColumn(),\r\n\t\t\t\t\tquery: {},\r\n\t\t\t\t}, datatable.API.params, Plugin.stateGet(Plugin.stateId));\r\n\r\n\t\t\t\tdatatable.API.params = Plugin.extendObj(datatable.API.params, param, value);\r\n\r\n\t\t\t\tPlugin.stateKeep(Plugin.stateId, datatable.API.params);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get datasource params\r\n\t\t\t * @param param\r\n\t\t\t */\r\n\t\t\tgetDataSourceParam: function (param) {\r\n\t\t\t\tdatatable.API.params = $.extend({}, {\r\n\t\t\t\t\tpagination: {page: 1, perpage: Plugin.getOption('data.pageSize')},\r\n\t\t\t\t\tsort: Plugin.getDefaultSortColumn(),\r\n\t\t\t\t\tquery: {},\r\n\t\t\t\t}, datatable.API.params, Plugin.stateGet(Plugin.stateId));\r\n\r\n\t\t\t\tif (typeof param === 'string') {\r\n\t\t\t\t\treturn Plugin.getObject(param, datatable.API.params);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn datatable.API.params;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shortcode to datatable.getDataSourceParam('query');\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetDataSourceQuery: function () {\r\n\t\t\t\treturn Plugin.getDataSourceParam('query') || {};\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shortcode to datatable.setDataSourceParam('query', query);\r\n\t\t\t * @param query\r\n\t\t\t */\r\n\t\t\tsetDataSourceQuery: function (query) {\r\n\t\t\t\tPlugin.setDataSourceParam('query', query);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get current page number\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tgetCurrentPage: function () {\r\n\t\t\t\treturn $(datatable.table).siblings('.m-datatable__pager').last().find('.m-datatable__pager-nav').find('.m-datatable__pager-link.m-datatable__pager-link--active').data('page') || 1;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get selected dropdown page size\r\n\t\t\t * @returns {*|number}\r\n\t\t\t */\r\n\t\t\tgetPageSize: function () {\r\n\t\t\t\treturn $(datatable.table).siblings('.m-datatable__pager').last().find('select.m-datatable__pager-size').val() || 10;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get total rows\r\n\t\t\t */\r\n\t\t\tgetTotalRows: function () {\r\n\t\t\t\treturn datatable.API.params.pagination.total;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get full dataset in grid\r\n\t\t\t * @returns {*|null|Array}\r\n\t\t\t */\r\n\t\t\tgetDataSet: function () {\r\n\t\t\t\treturn datatable.originalDataSet;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Hide column by column's field name\r\n\t\t\t * @param fieldName\r\n\t\t\t */\r\n\t\t\thideColumn: function (fieldName) {\r\n\t\t\t\t// add hide option for this column\r\n\t\t\t\t$.map(options.columns, function (column) {\r\n\t\t\t\t\tif (fieldName === column.field) {\r\n\t\t\t\t\t\tcolumn.responsive = {hidden: 'xl'};\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn column;\r\n\t\t\t\t});\r\n\t\t\t\t// hide current displayed column\r\n\t\t\t\tvar tds = $.grep($(datatable.table).find('.m-datatable__cell'), function (n, i) {\r\n\t\t\t\t\treturn fieldName === $(n).data('field');\r\n\t\t\t\t});\r\n\t\t\t\t$(tds).hide();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Show column by column's field name\r\n\t\t\t * @param fieldName\r\n\t\t\t */\r\n\t\t\tshowColumn: function (fieldName) {\r\n\t\t\t\t// add hide option for this column\r\n\t\t\t\t$.map(options.columns, function (column) {\r\n\t\t\t\t\tif (fieldName === column.field) {\r\n\t\t\t\t\t\tdelete column.responsive;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn column;\r\n\t\t\t\t});\r\n\t\t\t\t// hide current displayed column\r\n\t\t\t\tvar tds = $.grep($(datatable.table).find('.m-datatable__cell'), function (n, i) {\r\n\t\t\t\t\treturn fieldName === $(n).data('field');\r\n\t\t\t\t});\r\n\t\t\t\t$(tds).show();\r\n\t\t\t},\r\n\r\n\t\t\tnodeTr: [],\r\n\t\t\tnodeTd: [],\r\n\t\t\tnodeCols: [],\r\n\t\t\trecentNode: [],\r\n\r\n\t\t\ttable: function () {\r\n\t\t\t\treturn datatable.table;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Select a single row from the table\r\n\t\t\t * @param selector\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\trow: function (selector) {\r\n\t\t\t\tPlugin.rows(selector);\r\n\t\t\t\tPlugin.nodeTr = Plugin.recentNode = $(Plugin.nodeTr).first();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Select multiple rows from the table\r\n\t\t\t * @param selector\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\trows: function (selector) {\r\n\t\t\t\tif (Plugin.isLocked()) {\r\n\t\t\t\t\tPlugin.nodeTr = Plugin.recentNode = $(datatable.tableBody).children().first().find(selector).filter('.m-datatable__row');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPlugin.nodeTr = Plugin.recentNode = $(datatable.tableBody).find(selector).filter('.m-datatable__row');\r\n\t\t\t\t}\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Select a single column from the table\r\n\t\t\t * @param index zero-based index\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tcolumn: function (index) {\r\n\t\t\t\tif (Plugin.isLocked()) {\r\n\t\t\t\t\tPlugin.nodeCols = Plugin.recentNode = $(datatable.tableBody).children().first().find('.m-datatable__cell:nth-child(' + (index + 1) + ')');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPlugin.nodeCols = Plugin.recentNode = $(datatable.tableBody).find('.m-datatable__cell:nth-child(' + (index + 1) + ')');\r\n\t\t\t\t}\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Select multiple columns from the table\r\n\t\t\t * @param selector\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tcolumns: function (selector) {\r\n\t\t\t\tvar context = datatable.table;\r\n\t\t\t\tif (Plugin.nodeTr === Plugin.recentNode) {\r\n\t\t\t\t\tcontext = Plugin.nodeTr;\r\n\t\t\t\t}\r\n\t\t\t\tvar columns = $(context).find('.m-datatable__cell[data-field=\"' + selector + '\"]');\r\n\t\t\t\tif (columns.length > 0) {\r\n\t\t\t\t\tPlugin.nodeCols = Plugin.recentNode = columns;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPlugin.nodeCols = Plugin.recentNode = $(context).find(selector).filter('.m-datatable__cell');\r\n\t\t\t\t}\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\tcell: function (selector) {\r\n\t\t\t\tPlugin.cells(selector);\r\n\t\t\t\tPlugin.nodeTd = Plugin.recentNode = $(Plugin.nodeTd).first();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\tcells: function (selector) {\r\n\t\t\t\tvar cells = $(datatable.tableBody).find('.m-datatable__cell');\r\n\t\t\t\tif (typeof selector !== 'undefined') {\r\n\t\t\t\t\tcells = $(cells).filter(selector);\r\n\t\t\t\t}\r\n\t\t\t\tPlugin.nodeTd = Plugin.recentNode = cells;\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Delete the selected row from the table\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tremove: function () {\r\n\t\t\t\tif ($(Plugin.nodeTr.length) && Plugin.nodeTr === Plugin.recentNode) {\r\n\t\t\t\t\t$(Plugin.nodeTr).remove();\r\n\t\t\t\t}\r\n\t\t\t\tPlugin.layoutUpdate();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Show or hide the columns or rows\r\n\t\t\t */\r\n\t\t\tvisible: function (bool) {\r\n\t\t\t\tif ($(Plugin.recentNode.length)) {\r\n\t\t\t\t\tvar locked = Plugin.lockEnabledColumns();\r\n\t\t\t\t\tif (Plugin.recentNode === Plugin.nodeCols) {\r\n\t\t\t\t\t\tvar index = Plugin.recentNode.index();\r\n\r\n\t\t\t\t\t\tif (Plugin.isLocked()) {\r\n\t\t\t\t\t\t\tvar scrollColumns = $(Plugin.recentNode).closest('.m-datatable__lock--scroll').length;\r\n\t\t\t\t\t\t\tif (scrollColumns) {\r\n\t\t\t\t\t\t\t\t// is at center of scrollable area\r\n\t\t\t\t\t\t\t\tindex += locked.left.length + 1;\r\n\t\t\t\t\t\t\t} else if ($(Plugin.recentNode).closest('.m-datatable__lock--right').length) {\r\n\t\t\t\t\t\t\t\t// is at the right locked table\r\n\t\t\t\t\t\t\t\tindex += locked.left.length + scrollColumns + 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (bool) {\r\n\t\t\t\t\t\tif (Plugin.recentNode === Plugin.nodeCols) {\r\n\t\t\t\t\t\t\tdelete options.columns[index].responsive;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(Plugin.recentNode).show();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (Plugin.recentNode === Plugin.nodeCols) {\r\n\t\t\t\t\t\t\tPlugin.setOption('columns.' + index + '.responsive', {hidden: 'xl'});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(Plugin.recentNode).hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tPlugin.redraw();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get the the DOM element for the selected rows or columns\r\n\t\t\t * @returns {Array}\r\n\t\t\t */\r\n\t\t\tnodes: function () {\r\n\t\t\t\treturn Plugin.recentNode;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * will be implemented soon\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tdataset: function () {\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Public API methods can be used directly by datatable\r\n\t\t */\r\n\t\t$.each(Plugin, function (funcName, func) {\r\n\t\t\tdatatable[funcName] = func;\r\n\t\t});\r\n\r\n\t\t// initialize main datatable plugin\r\n\t\tif (typeof options !== 'undefined') {\r\n\t\t\tif (typeof options === 'string') {\r\n\t\t\t\tvar method = options;\r\n\t\t\t\tdatatable = $(this).data('mDatatable');\r\n\t\t\t\tif (typeof datatable !== 'undefined') {\r\n\t\t\t\t\toptions = datatable.options;\r\n\t\t\t\t\tPlugin[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!datatable.data('mDatatable') && !$(this).hasClass('m-datatable--loaded')) {\r\n\t\t\t\t\tdatatable.dataSet = null;\r\n\t\t\t\t\tdatatable.textAlign = {\r\n\t\t\t\t\t\tleft: 'm-datatable__cell--left',\r\n\t\t\t\t\t\tcenter: 'm-datatable__cell--center',\r\n\t\t\t\t\t\tright: 'm-datatable__cell--right',\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// merge default and user defined options\r\n\t\t\t\t\toptions = $.extend(true, {}, $.fn.mDatatable.defaults, options);\r\n\r\n\t\t\t\t\tdatatable.options = options;\r\n\r\n\t\t\t\t\t// init plugin process\r\n\t\t\t\t\tPlugin.init.apply(this, [options]);\r\n\r\n\t\t\t\t\t$(datatable.wrap).data('mDatatable', datatable);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// get existing instance datatable\r\n\t\t\tdatatable = $(this).data('mDatatable');\r\n\t\t\tif (typeof datatable === 'undefined') {\r\n\t\t\t\t$.error('mDatatable not initialized');\r\n\t\t\t}\r\n\t\t\toptions = datatable.options;\r\n\t\t}\r\n\r\n\t\treturn datatable;\r\n\t};\r\n\r\n\t// default options\r\n\t$.fn.mDatatable.defaults = {\r\n\t\t// datasource definition\r\n\t\tdata: {\r\n\t\t\ttype: 'local',\r\n\t\t\tsource: null,\r\n\t\t\tpageSize: 10, // display records per page\r\n\t\t\tsaveState: {\r\n\t\t\t\t// save datatable state(pagination, filtering, sorting, etc) in cookie or browser webstorage\r\n\t\t\t\tcookie: false,\r\n\t\t\t\twebstorage: true,\r\n\t\t\t},\r\n\r\n\t\t\tserverPaging: false,\r\n\t\t\tserverFiltering: false,\r\n\t\t\tserverSorting: false,\r\n\r\n\t\t\tautoColumns: false,\r\n\t\t\tattr: {\r\n\t\t\t\trowProps: [],\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t// layout definition\r\n\t\tlayout: {\r\n\t\t\ttheme: 'default', // datatable will support multiple themes and designs\r\n\t\t\tclass: 'm-datatable--brand', // custom wrapper class\r\n\t\t\tscroll: false, // enable/disable datatable scroll both horizontal and vertical when needed.\r\n\t\t\theight: null, // datatable's body's fixed height\r\n\t\t\tminHeight: 300,\r\n\t\t\tfooter: false, // display/hide footer\r\n\t\t\theader: true, // display/hide header\r\n\t\t\tcustomScrollbar: true, // set false to disable custom scrollbar\r\n\r\n\t\t\t// datatable spinner\r\n\t\t\tspinner: {\r\n\t\t\t\toverlayColor: '#000000',\r\n\t\t\t\topacity: 0,\r\n\t\t\t\ttype: 'loader',\r\n\t\t\t\tstate: 'brand',\r\n\t\t\t\tmessage: true,\r\n\t\t\t},\r\n\r\n\t\t\t// datatable UI icons\r\n\t\t\ticons: {\r\n\t\t\t\tsort: {asc: 'la la-arrow-up', desc: 'la la-arrow-down'},\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tnext: 'la la-angle-right',\r\n\t\t\t\t\tprev: 'la la-angle-left',\r\n\t\t\t\t\tfirst: 'la la-angle-double-left',\r\n\t\t\t\t\tlast: 'la la-angle-double-right',\r\n\t\t\t\t\tmore: 'la la-ellipsis-h',\r\n\t\t\t\t},\r\n\t\t\t\trowDetail: {expand: 'fa fa-caret-down', collapse: 'fa fa-caret-right'},\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t// column sorting\r\n\t\tsortable: true,\r\n\r\n\t\t// resize column size with mouse drag coming soon)\r\n\t\tresizable: false,\r\n\r\n\t\t// column based filtering (coming soon)\r\n\t\tfilterable: false,\r\n\r\n\t\tpagination: true,\r\n\r\n\t\t// inline and bactch editing (cooming soon)\r\n\t\teditable: false,\r\n\r\n\t\t// columns definition\r\n\t\tcolumns: [],\r\n\r\n\t\tsearch: {\r\n\t\t\t// enable trigger search by keyup enter\r\n\t\t\tonEnter: false,\r\n\t\t\t// input text for search\r\n\t\t\tinput: null,\r\n\t\t\t// search delay in milliseconds\r\n\t\t\tdelay: 400,\r\n\t\t},\r\n\r\n\t\trows: {\r\n\t\t\t// deprecated\r\n\t\t\tcallback: function () {\r\n\t\t\t},\r\n\t\t\t// call before row template\r\n\t\t\tbeforeTemplate: function () {\r\n\t\t\t},\r\n\t\t\t// call after row template\r\n\t\t\tafterTemplate: function () {\r\n\t\t\t},\r\n\t\t\t// auto hide columns, if rows overflow. work on non locked columns\r\n\t\t\tautoHide: false,\r\n\t\t},\r\n\r\n\t\t// toolbar\r\n\t\ttoolbar: {\r\n\t\t\t// place pagination and displayInfo blocks according to the array order\r\n\t\t\tlayout: ['pagination', 'info'],\r\n\r\n\t\t\t// toolbar placement can be at top or bottom or both top and bottom repeated\r\n\t\t\tplacement: ['bottom'],  //'top', 'bottom'\r\n\r\n\t\t\t// toolbar items\r\n\t\t\titems: {\r\n\t\t\t\t// pagination\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\t// pagination type(default or scroll)\r\n\t\t\t\t\ttype: 'default',\r\n\r\n\t\t\t\t\t// number of pages to display by breakpoints\r\n\t\t\t\t\tpages: {\r\n\t\t\t\t\t\tdesktop: {\r\n\t\t\t\t\t\t\tlayout: 'default',\r\n\t\t\t\t\t\t\tpagesNumber: 6,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttablet: {\r\n\t\t\t\t\t\t\tlayout: 'default',\r\n\t\t\t\t\t\t\tpagesNumber: 3,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tmobile: {\r\n\t\t\t\t\t\t\tlayout: 'compact',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t// navigation buttons\r\n\t\t\t\t\tnavigation: {\r\n\t\t\t\t\t\tprev: true, // display prev link\r\n\t\t\t\t\t\tnext: true, // display next link\r\n\t\t\t\t\t\tfirst: true, // display first link\r\n\t\t\t\t\t\tlast: true // display last link\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t// page size select\r\n\t\t\t\t\tpageSizeSelect: [] // display dropdown to select pagination size. -1 is used for \"ALl\" option\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// records info\r\n\t\t\t\tinfo: true,\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t// here we will keep all strings and message used by datatable UI so developer can easiliy translate to any language.\r\n\t\t// By default the stirngs will be in the plugin source and here can override it\r\n\t\ttranslate: {\r\n\t\t\trecords: {\r\n\t\t\t\tprocessing: 'Please wait...',\r\n\t\t\t\tnoRecords: 'No records found',\r\n\t\t\t},\r\n\t\t\ttoolbar: {\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\titems: {\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tfirst: 'First',\r\n\t\t\t\t\t\t\tprev: 'Previous',\r\n\t\t\t\t\t\t\tnext: 'Next',\r\n\t\t\t\t\t\t\tlast: 'Last',\r\n\t\t\t\t\t\t\tmore: 'More pages',\r\n\t\t\t\t\t\t\tinput: 'Page number',\r\n\t\t\t\t\t\t\tselect: 'Select page size',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tinfo: 'Displaying {{start}} - {{end}} of {{total}} records',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\textensions: {},\r\n\t};\r\n\r\n}(jQuery));\nvar defaults = {\r\n\tlayout: {\r\n\t\ticons: {\r\n\t\t\tpagination: {\r\n\t\t\t\tnext: 'la la-angle-right',\r\n\t\t\t\tprev: 'la la-angle-left',\r\n\t\t\t\tfirst: 'la la-angle-double-left',\r\n\t\t\t\tlast: 'la la-angle-double-right',\r\n\t\t\t\tmore: 'la la-ellipsis-h',\r\n\t\t\t},\r\n\t\t\trowDetail: {expand: 'fa fa-caret-down', collapse: 'fa fa-caret-right'},\r\n\t\t}\r\n\t}\r\n};\r\n\r\nif (mUtil.isRTL()) {\r\n\tdefaults = {\r\n\t\tlayout: {\r\n\t\t\ticons: {\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tnext: 'la la-angle-left',\r\n\t\t\t\t\tprev: 'la la-angle-right',\r\n\t\t\t\t\tlast: 'la la-angle-double-left',\r\n\t\t\t\t\tfirst: 'la la-angle-double-right',\r\n\t\t\t\t},\r\n\t\t\t\trowDetail: {collapse: 'fa fa-caret-down', expand: 'fa fa-caret-right'},\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n$.extend(true, $.fn.mDatatable.defaults, defaults);\nvar mDropdown = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {\r\n        toggle: 'click',\r\n        hoverTimeout: 300,\r\n        skin: 'light',\r\n        height: 'auto',\r\n        maxHeight: false,\r\n        minHeight: false,\r\n        persistent: false,\r\n        mobileOverlay: true\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Run plugin\r\n         * @returns {mdropdown}\r\n         */\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('dropdown')) {\r\n                the = mUtil.data(element).get('dropdown');\r\n            } else {\r\n                // reset dropdown\r\n                Plugin.init(options);\r\n\r\n                Plugin.setup();\r\n\r\n                mUtil.data(element).set('dropdown', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subdropdown click toggle\r\n         * @returns {mdropdown}\r\n         */\r\n        init: function(options) {\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n            the.events = [];\r\n            the.eventHandlers = {};\r\n            the.open = false;\r\n            \r\n            the.layout = {};\r\n            the.layout.close = mUtil.find(element, '.m-dropdown__close');\r\n            the.layout.toggle = mUtil.find(element, '.m-dropdown__toggle');\r\n            the.layout.arrow = mUtil.find(element, '.m-dropdown__arrow');\r\n            the.layout.wrapper = mUtil.find(element, '.m-dropdown__wrapper');\r\n            the.layout.defaultDropPos = mUtil.hasClass(element, 'm-dropdown--up') ? 'up' : 'down';\r\n            the.layout.currentDropPos = the.layout.defaultDropPos;\r\n\r\n            if (mUtil.attr(element, 'm-dropdown-toggle') == \"hover\") {\r\n                the.options.toggle = 'hover';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup dropdown\r\n         */\r\n        setup: function() {\r\n            if (the.options.placement) {\r\n                mUtil.addClass(element, 'm-dropdown--' + the.options.placement);\r\n            }\r\n\r\n            if (the.options.align) {\r\n                mUtil.addClass(element, 'm-dropdown--align-' + the.options.align);\r\n            }\r\n\r\n            if (the.options.width) {\r\n                mUtil.css(the.layout.wrapper, 'width', the.options.width + 'px');\r\n            }\r\n\r\n            if (mUtil.attr(element, 'm-dropdown-persistent') == '1') {\r\n                the.options.persistent = true;\r\n            }\r\n\r\n            if (the.options.toggle == 'hover') {    \r\n                mUtil.addEvent(element, 'mouseout', Plugin.hideMouseout);\r\n            } \r\n\r\n            // set zindex\r\n            Plugin.setZindex();\r\n        },\r\n\r\n        /**\r\n         * Toggle dropdown\r\n         */\r\n        toggle: function() {\r\n            if (the.open) {\r\n                return Plugin.hide();\r\n            } else {\r\n                return Plugin.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set content\r\n         */\r\n        setContent: function(content) {\r\n            var content = mUtil.find(element, '.m-dropdown__content').innerHTML = content;\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Show dropdown\r\n         */\r\n        show: function() {\r\n            if (the.options.toggle == 'hover' && mUtil.hasAttr(element, 'hover')) {\r\n                Plugin.clearHovered();\r\n                return the;\r\n            }\r\n\r\n            if (the.open) {\r\n                return the;\r\n            }\r\n\r\n            if (the.layout.arrow) {\r\n                Plugin.adjustArrowPos();\r\n            }\r\n\r\n            Plugin.eventTrigger('beforeShow');\r\n\r\n            Plugin.hideOpened();\r\n\r\n            mUtil.addClass(element, 'm-dropdown--open');\r\n\r\n            if (mUtil.isMobileDevice() && the.options.mobileOverlay) {\r\n                var zIndex = mUtil.css(element, 'z-index') - 1;\r\n\r\n                var dropdownoff = mUtil.insertAfter(document.createElement('DIV'), element );\r\n\r\n                mUtil.addClass(dropdownoff, 'm-dropdown__dropoff');\r\n                mUtil.css(dropdownoff, 'z-index', zIndex);\r\n                mUtil.data(dropdownoff).set('dropdown', element);\r\n                mUtil.data(element).set('dropoff', dropdownoff);\r\n\r\n                mUtil.addEvent(dropdownoff, 'click', function(e) {\r\n                    Plugin.hide();\r\n                    mUtil.remove(this);\r\n                    e.preventDefault();\r\n                });\r\n            }\r\n\r\n            element.focus();\r\n            element.setAttribute('aria-expanded', 'true');\r\n            the.open = true;\r\n\r\n            //== Update scrollers\r\n            mUtil.scrollersUpdate(element);\r\n\r\n            Plugin.eventTrigger('afterShow');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Clear dropdown hover\r\n         */\r\n        clearHovered: function() {\r\n            var timeout = mUtil.attr(element, 'timeout');\r\n\r\n            mUtil.removeAttr(element, 'hover');            \r\n            mUtil.removeAttr(element, 'timeout');\r\n\r\n            clearTimeout(timeout);\r\n        },\r\n\r\n        /**\r\n         * Hide hovered dropdown\r\n         */\r\n        hideHovered: function(force) {\r\n            if (force === true) {\r\n                if (Plugin.eventTrigger('beforeHide') === false) {\r\n                    return;\r\n                }\r\n\r\n                Plugin.clearHovered();\r\n                mUtil.removeClass(element, 'm-dropdown--open');\r\n                the.open = false;\r\n                Plugin.eventTrigger('afterHide');\r\n            } else {\r\n                if (mUtil.hasAttr(element, 'hover') === true) {\r\n                    return;\r\n                }\r\n\r\n                if (Plugin.eventTrigger('beforeHide') === false) {\r\n                    return;\r\n                }\r\n\r\n                var timeout = setTimeout(function() {\r\n                    if (mUtil.attr(element, 'hover')) {\r\n                        Plugin.clearHovered();\r\n                        mUtil.removeClass(element, 'm-dropdown--open');\r\n                        the.open = false;\r\n                        Plugin.eventTrigger('afterHide');\r\n                    }\r\n                }, the.options.hoverTimeout);\r\n\r\n                mUtil.attr(element, 'hover', '1');            \r\n                mUtil.attr(element, 'timeout', timeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide clicked dropdown\r\n         */\r\n        hideClicked: function() {\r\n            if (Plugin.eventTrigger('beforeHide') === false) {\r\n                return;\r\n            }\r\n\r\n            mUtil.removeClass(element, 'm-dropdown--open');\r\n            mUtil.data(element).remove('dropoff');\r\n            the.open = false;\r\n            Plugin.eventTrigger('afterHide');\r\n        },\r\n\r\n        /**\r\n         * Hide dropdown\r\n         */\r\n        hide: function(force) {\r\n            if (the.open === false) {\r\n                return the;\r\n            }\r\n\r\n            if (mUtil.isDesktopDevice() && the.options.toggle == 'hover') {\r\n                Plugin.hideHovered(force);\r\n            } else {\r\n                Plugin.hideClicked();\r\n            }\r\n\r\n            if (the.layout.defaultDropPos == 'down' && the.layout.currentDropPos == 'up') {\r\n                mUtil.removeClass(element, 'm-dropdown--up');\r\n                the.layout.arrow.prependTo(the.layout.wrapper);\r\n                the.layout.currentDropPos = 'down';\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Hide on mouseout\r\n         */\r\n        hideMouseout: function() {\r\n            if (mUtil.isDesktopDevice()) {\r\n                Plugin.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide opened dropdowns\r\n         */\r\n        hideOpened: function() {\r\n            var query = mUtil.findAll(body, '.m-dropdown.m-dropdown--open');\r\n            \r\n            for (var i = 0, j = query.length; i < j; i++) {\r\n                var dropdown = query[i];\r\n                mUtil.data(dropdown).get('dropdown').hide(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Adjust dropdown arrow positions\r\n         */\r\n        adjustArrowPos: function() {\r\n            var width = mUtil.outerWidth(element); // ?\r\n\r\n            var alignment = mUtil.hasClass(the.layout.arrow, 'm-dropdown__arrow--right') ? 'right' : 'left';\r\n            var pos = 0;\r\n\r\n            if (the.layout.arrow) {\r\n                if ( mUtil.isInResponsiveRange('mobile') && mUtil.hasClass(element, 'm-dropdown--mobile-full-width') ) {\r\n                    pos = mUtil.offset(element).left + (width / 2) - Math.abs( parseInt(mUtil.css(the.layout.arrow, 'width')) / 2) - parseInt(mUtil.css(the.layout.wrapper, 'left'));\r\n                    \r\n                    mUtil.css(the.layout.arrow, 'right', 'auto');\r\n                    mUtil.css(the.layout.arrow, 'left', pos + 'px');\r\n                    \r\n                    mUtil.css(the.layout.arrow, 'margin-left', 'auto');\r\n                    mUtil.css(the.layout.arrow, 'margin-right', 'auto');\r\n                } else if (mUtil.hasClass(the.layout.arrow, 'm-dropdown__arrow--adjust')) {\r\n                    pos = width / 2 - Math.abs( parseInt(mUtil.css(the.layout.arrow, 'width')) / 2);\r\n                    if (mUtil.hasClass(element, 'm-dropdown--align-push')) {\r\n                        pos = pos + 20;\r\n                    }\r\n\r\n                    if (alignment == 'right') {\r\n                        if (mUtil.isRTL()) {\r\n                            mUtil.css(the.layout.arrow, 'right', 'auto');\r\n                            mUtil.css(the.layout.arrow, 'left', pos + 'px');\r\n                        } else {\r\n                            mUtil.css(the.layout.arrow, 'left', 'auto');\r\n                            mUtil.css(the.layout.arrow, 'right', pos + 'px');\r\n                        }\r\n                    } else {\r\n                        if (mUtil.isRTL()) {\r\n                            mUtil.css(the.layout.arrow, 'left', 'auto');\r\n                            mUtil.css(the.layout.arrow, 'right', pos + 'px');\r\n                        } else {\r\n                            mUtil.css(the.layout.arrow, 'right', 'auto');\r\n                            mUtil.css(the.layout.arrow, 'left', pos + 'px');\r\n                        }                       \r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get zindex\r\n         */\r\n        setZindex: function() {\r\n            var zIndex = 101; //mUtil.css(the.layout.wrapper, 'z-index');\r\n            var newZindex = mUtil.getHighestZindex(element);\r\n            if (newZindex >= zIndex) {\r\n                zIndex = newZindex + 1;\r\n            }\r\n            \r\n            mUtil.css(the.layout.wrapper, 'z-index', zIndex);\r\n        },\r\n\r\n        /**\r\n         * Check persistent\r\n         */\r\n        isPersistent: function() {\r\n            return the.options.persistent;\r\n        },\r\n\r\n        /**\r\n         * Check persistent\r\n         */\r\n        isShown: function() {\r\n            return the.open;\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Show dropdown\r\n     * @returns {mDropdown}\r\n     */\r\n    the.show = function() {\r\n        return Plugin.show();\r\n    };\r\n\r\n    /**\r\n     * Hide dropdown\r\n     * @returns {mDropdown}\r\n     */\r\n    the.hide = function() {\r\n        return Plugin.hide();\r\n    };\r\n\r\n    /**\r\n     * Toggle dropdown\r\n     * @returns {mDropdown}\r\n     */\r\n    the.toggle = function() {\r\n        return Plugin.toggle();\r\n    };\r\n\r\n    /**\r\n     * Toggle dropdown\r\n     * @returns {mDropdown}\r\n     */\r\n    the.isPersistent = function() {\r\n        return Plugin.isPersistent();\r\n    };\r\n\r\n    /**\r\n     * Check shown state\r\n     * @returns {mDropdown}\r\n     */\r\n    the.isShown = function() {\r\n        return Plugin.isShown();\r\n    };\r\n\r\n    /**\r\n     * Set dropdown content\r\n     * @returns {mDropdown}\r\n     */\r\n    the.setContent = function(content) {\r\n        return Plugin.setContent(content);\r\n    };\r\n\r\n    /**\r\n     * Register event\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Register event\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    //== Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    //== Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\r\n\r\n//== Plugin global lazy initialization\r\nmUtil.on(document, '[m-dropdown-toggle=\"click\"] .m-dropdown__toggle', 'click', function(e) {\r\n    var element = this.closest('.m-dropdown');  \r\n    var dropdown;\r\n\r\n    if (element) {\r\n        if (mUtil.data(element).has('dropdown')) {\r\n            dropdown = mUtil.data(element).get('dropdown');\r\n        } else {                 \r\n            dropdown = new mDropdown(element);\r\n        }             \r\n\r\n        dropdown.toggle();\r\n\r\n        e.preventDefault();\r\n    } \r\n});\r\n\r\nmUtil.on(document, '[m-dropdown-toggle=\"hover\"] .m-dropdown__toggle', 'click', function(e) {\r\n    if (mUtil.isDesktopDevice()) {\r\n        if (mUtil.attr(this, 'href') == '#') {\r\n            e.preventDefault();\r\n        }\r\n    } else if (mUtil.isMobileDevice()) {\r\n        var element = this.closest('.m-dropdown');\r\n        var dropdown;\r\n\r\n        if (element) {\r\n            if (mUtil.data(element).has('dropdown')) {\r\n                dropdown = mUtil.data(element).get('dropdown');\r\n            } else {                        \r\n                dropdown = new mDropdown(element);\r\n            }  \r\n\r\n            dropdown.toggle();\r\n\r\n            e.preventDefault();\r\n        }\r\n    }\r\n});\r\n\r\nmUtil.on(document, '[m-dropdown-toggle=\"hover\"]', 'mouseover', function(e) {\r\n    if (mUtil.isDesktopDevice()) {\r\n        var element = this;\r\n        var dropdown;\r\n\r\n        if (element) {\r\n            if (mUtil.data(element).has('dropdown')) {\r\n                dropdown = mUtil.data(element).get('dropdown');\r\n            } else {                        \r\n                dropdown = new mDropdown(element);\r\n            }              \r\n\r\n            dropdown.show();\r\n\r\n            e.preventDefault();\r\n        }\r\n    }\r\n});\r\n\r\ndocument.addEventListener(\"click\", function(e) {\r\n    var query;\r\n    var body = mUtil.get('body');\r\n    var target = e.target;\r\n\r\n    //== Handle dropdown close\r\n    if (query = body.querySelectorAll('.m-dropdown.m-dropdown--open')) {\r\n        for (var i = 0, len = query.length; i < len; i++) {\r\n            var element = query[i];\r\n            if (mUtil.data(element).has('dropdown') === false) {\r\n                return;\r\n            }\r\n\r\n            var the = mUtil.data(element).get('dropdown');\r\n            var toggle = mUtil.find(element, '.m-dropdown__toggle');\r\n\r\n            if (mUtil.hasClass(element, 'm-dropdown--disable-close')) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                //return;\r\n            }\r\n\r\n            if (toggle && target !== toggle && toggle.contains(target) === false && target.contains(toggle) === false) {\r\n                if (the.isPersistent() === true) {\r\n                    if (element.contains(target) === false) {\r\n                        the.hide();\r\n                    }    \r\n                } else {\r\n                    the.hide();\r\n                }\r\n            } else if (element.contains(target) === false) {\r\n                the.hide();\r\n            } \r\n        }\r\n    }\r\n});\nvar mHeader = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');\r\n\r\n    if (element === undefined) {\r\n        return;\r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {\r\n        classic: false,\r\n        offset: {\r\n            mobile: 150,\r\n            desktop: 200\r\n        },\r\n        minimize: {\r\n            mobile: false,\r\n            desktop: false\r\n        }\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Run plugin\r\n         * @returns {mHeader}\r\n         */\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('header')) {\r\n                the = mUtil.data(element).get('header');\r\n            } else {\r\n                // reset header\r\n                Plugin.init(options);\r\n\r\n                // build header\r\n                Plugin.build();\r\n\r\n                mUtil.data(element).set('header', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subheader click toggle\r\n         * @returns {mHeader}\r\n         */\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n        },\r\n\r\n        /**\r\n         * Reset header\r\n         * @returns {mHeader}\r\n         */\r\n        build: function() {\r\n            var lastScrollTop = 0;\r\n\r\n            if (the.options.minimize.mobile === false && the.options.minimize.desktop === false) {\r\n                return;\r\n            }\r\n\r\n            window.addEventListener('scroll', function() {\r\n                var offset = 0, on, off, st;\r\n\r\n                if (mUtil.isInResponsiveRange('desktop')) {\r\n                    offset = the.options.offset.desktop;\r\n                    on = the.options.minimize.desktop.on;\r\n                    off = the.options.minimize.desktop.off;\r\n                } else if (mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                    offset = the.options.offset.mobile;\r\n                    on = the.options.minimize.mobile.on;\r\n                    off = the.options.minimize.mobile.off;\r\n                }\r\n\r\n                st = window.pageYOffset;\r\n\r\n                if (\r\n                    (mUtil.isInResponsiveRange('tablet-and-mobile') && the.options.classic && the.options.classic.mobile) ||\r\n                    (mUtil.isInResponsiveRange('desktop') && the.options.classic && the.options.classic.desktop)\r\n\r\n                ) {\r\n                    if (st > offset) { // down scroll mode\r\n                        mUtil.addClass(body, on);\r\n                        mUtil.removeClass(body, off);\r\n                    } else { // back scroll mode\r\n                        mUtil.addClass(body, off);\r\n                        mUtil.removeClass(body, on);\r\n                    }\r\n                } else {\r\n                    if (st > offset && lastScrollTop < st) { // down scroll mode\r\n                        mUtil.addClass(body, on);\r\n                        mUtil.removeClass(body, off);\r\n                    } else { // back scroll mode\r\n                        mUtil.addClass(body, off);\r\n                        mUtil.removeClass(body, on);\r\n                    }\r\n\r\n                    lastScrollTop = st;\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Register event\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    //== Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    //== Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\nvar mMenu = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');  \r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {       \r\n        // accordion submenu mode\r\n        accordion: {\r\n            slideSpeed: 100, // accordion toggle slide speed in milliseconds\r\n            autoScroll: false, // enable auto scrolling(focus) to the clicked menu item\r\n            autoScrollSpeed: 1200,\r\n            expandAll: true // allow having multiple expanded accordions in the menu\r\n        },\r\n\r\n        // dropdown submenu mode\r\n        dropdown: {\r\n            timeout: 500 // timeout in milliseconds to show and hide the hoverable submenu dropdown\r\n        }\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Run plugin\r\n         * @returns {mMenu}\r\n         */\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('menu')) {\r\n                the = mUtil.data(element).get('menu');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // reset menu\r\n                Plugin.reset();\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                mUtil.data(element).set('menu', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles submenu click toggle\r\n         * @returns {mMenu}\r\n         */\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            the.eventHandlers = {};\r\n\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            // pause menu\r\n            the.pauseDropdownHoverTime = 0;\r\n\r\n            the.uid = mUtil.getUniqueID();\r\n        },\r\n\r\n        reload: function() {\r\n             // reset menu\r\n            Plugin.reset();\r\n\r\n            // build menu\r\n            Plugin.build();\r\n        },\r\n\r\n        /**\r\n         * Reset menu\r\n         * @returns {mMenu}\r\n         */\r\n        build: function() {\r\n            //== General accordion submenu toggle\r\n            the.eventHandlers['event_1'] = mUtil.on( element, '.m-menu__toggle', 'click', Plugin.handleSubmenuAccordion);\r\n\r\n            //== Dropdown mode(hoverable)\r\n            if (Plugin.getSubmenuMode() === 'dropdown' || Plugin.isConditionalSubmenuDropdown()) {\r\n                // dropdown submenu - hover toggle\r\n                the.eventHandlers['event_2'] = mUtil.on( element, '[m-menu-submenu-toggle=\"hover\"]', 'mouseover', Plugin.handleSubmenuDrodownHoverEnter);\r\n                the.eventHandlers['event_3'] = mUtil.on( element, '[m-menu-submenu-toggle=\"hover\"]', 'mouseout', Plugin.handleSubmenuDrodownHoverExit);\r\n\r\n                // dropdown submenu - click toggle\r\n                the.eventHandlers['event_4'] = mUtil.on( element, '[m-menu-submenu-toggle=\"click\"] > .m-menu__toggle, [m-menu-submenu-toggle=\"click\"] > .m-menu__link .m-menu__toggle', 'click', Plugin.handleSubmenuDropdownClick);\r\n                the.eventHandlers['event_5'] = mUtil.on( element, '[m-menu-submenu-toggle=\"tab\"] > .m-menu__toggle, [m-menu-submenu-toggle=\"tab\"] > .m-menu__link .m-menu__toggle', 'click', Plugin.handleSubmenuDropdownTabClick);\r\n            }\r\n\r\n            //== General link click\r\n            the.eventHandlers['event_6'] = mUtil.on(element, '.m-menu__item:not(.m-menu__item--submenu) > .m-menu__link:not(.m-menu__toggle):not(.m-menu__link--toggle-skip)', 'click', Plugin.handleLinkClick);\r\n\r\n            //== Init scrollable menu\r\n            if (the.options.scroll && the.options.scroll.height) {\r\n                Plugin.scrollerInit();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset menu\r\n         * @returns {mMenu}\r\n         */\r\n        reset: function() { \r\n            mUtil.off( element, 'click', the.eventHandlers['event_1']);\r\n\r\n            // dropdown submenu - hover toggle\r\n            mUtil.off( element, 'mouseover', the.eventHandlers['event_2']);\r\n            mUtil.off( element, 'mouseout', the.eventHandlers['event_3']);\r\n\r\n            // dropdown submenu - click toggle\r\n            mUtil.off( element, 'click', the.eventHandlers['event_4']);\r\n            mUtil.off( element, 'click', the.eventHandlers['event_5']);\r\n            \r\n            mUtil.off(element, 'click', the.eventHandlers['event_6']);\r\n        },\r\n\r\n        /**\r\n         * Init scroll menu\r\n         *\r\n        */\r\n        scrollerInit: function() {\r\n            if ( the.options.scroll && the.options.scroll.height ) {\r\n                mUtil.scrollerInit(element, {disableForMobile: true, resetHeightOnDestroy: true, handleWindowResize: true, height: the.options.scroll.height});\r\n            }            \r\n        },\r\n\r\n        /**\r\n         * Update scroll menu\r\n        */\r\n        scrollerUpdate: function() {\r\n            if ( the.options.scroll && the.options.scroll.height ) {\r\n                mUtil.scrollerUpdate(element);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Scroll top\r\n        */\r\n        scrollerTop: function() {\r\n            if ( the.options.scroll && the.options.scroll.height ) {\r\n                mUtil.scrollerTop(element);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get submenu mode for current breakpoint and menu state\r\n         * @returns {mMenu}\r\n         */\r\n        getSubmenuMode: function(el) {\r\n            if ( mUtil.isInResponsiveRange('desktop') ) {\r\n                if (el && mUtil.hasAttr(el, 'm-menu-submenu-toggle')) {\r\n                    return mUtil.attr(el, 'm-menu-submenu-toggle');\r\n                }\r\n\r\n                if ( mUtil.isset(the.options.submenu, 'desktop.state.body') ) {\r\n                    if ( mUtil.hasClass(body, the.options.submenu.desktop.state.body) ) {\r\n                        return the.options.submenu.desktop.state.mode;\r\n                    } else {\r\n                        return the.options.submenu.desktop.default;\r\n                    }\r\n                } else if ( mUtil.isset(the.options.submenu, 'desktop') ) {\r\n                    return the.options.submenu.desktop;\r\n                }\r\n            } else if ( mUtil.isInResponsiveRange('tablet') && mUtil.isset(the.options.submenu, 'tablet') ) {\r\n                return the.options.submenu.tablet;\r\n            } else if ( mUtil.isInResponsiveRange('mobile') && mUtil.isset(the.options.submenu, 'mobile') ) {\r\n                return the.options.submenu.mobile;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get submenu mode for current breakpoint and menu state\r\n         * @returns {mMenu}\r\n         */\r\n        isConditionalSubmenuDropdown: function() {\r\n            if ( mUtil.isInResponsiveRange('desktop') && mUtil.isset(the.options.submenu, 'desktop.state.body') ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles menu link click\r\n         * @returns {mMenu}\r\n         */\r\n        handleLinkClick: function(e) {\r\n            if ( Plugin.eventTrigger('linkClick', this) === false ) {\r\n                e.preventDefault();\r\n            };\r\n\r\n            if ( Plugin.getSubmenuMode(this) === 'dropdown' || Plugin.isConditionalSubmenuDropdown() ) {\r\n                Plugin.handleSubmenuDropdownClose(e, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles submenu hover toggle\r\n         * @returns {mMenu}\r\n         */\r\n        handleSubmenuDrodownHoverEnter: function(e) {\r\n            if ( Plugin.getSubmenuMode(this) === 'accordion' ) {\r\n                return;\r\n            }\r\n\r\n            if ( the.resumeDropdownHover() === false ) {\r\n                return;\r\n            }\r\n\r\n            var item = this;\r\n\r\n            if ( item.getAttribute('data-hover') == '1' ) {\r\n                item.removeAttribute('data-hover');\r\n                clearTimeout( item.getAttribute('data-timeout') );\r\n                item.removeAttribute('data-timeout');\r\n                //Plugin.hideSubmenuDropdown(item, false);\r\n            }\r\n\r\n            Plugin.showSubmenuDropdown(item);\r\n        },\r\n\r\n        /**\r\n         * Handles submenu hover toggle\r\n         * @returns {mMenu}\r\n         */\r\n        handleSubmenuDrodownHoverExit: function(e) {\r\n            if ( the.resumeDropdownHover() === false ) {\r\n                return;\r\n            }\r\n\r\n            if ( Plugin.getSubmenuMode(this) === 'accordion' ) {\r\n                return;\r\n            }\r\n\r\n            var item = this;\r\n            var time = the.options.dropdown.timeout;\r\n\r\n            var timeout = setTimeout(function() {\r\n                if ( item.getAttribute('data-hover') == '1' ) {\r\n                    Plugin.hideSubmenuDropdown(item, true);\r\n                } \r\n            }, time);\r\n\r\n            item.setAttribute('data-hover', '1');\r\n            item.setAttribute('data-timeout', timeout);  \r\n        },\r\n\r\n        /**\r\n         * Handles submenu click toggle\r\n         * @returns {mMenu}\r\n         */\r\n        handleSubmenuDropdownClick: function(e) {\r\n            if ( Plugin.getSubmenuMode(this) === 'accordion' ) {\r\n                return;\r\n            }\r\n \r\n            var item = this.closest('.m-menu__item'); \r\n\r\n            if ( item.getAttribute('m-menu-submenu-mode') == 'accordion' ) {\r\n                return;\r\n            }\r\n\r\n            if ( mUtil.hasClass(item, 'm-menu__item--hover') === false ) {\r\n                mUtil.addClass(item, 'm-menu__item--open-dropdown');\r\n                Plugin.showSubmenuDropdown(item);\r\n            } else {\r\n                mUtil.removeClass(item, 'm-menu__item--open-dropdown' );\r\n                Plugin.hideSubmenuDropdown(item, true);\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Handles tab click toggle\r\n         * @returns {mMenu}\r\n         */\r\n        handleSubmenuDropdownTabClick: function(e) {\r\n            if (Plugin.getSubmenuMode(this) === 'accordion') {\r\n                return;\r\n            }\r\n\r\n            var item = this.closest('.m-menu__item');\r\n\r\n            if (item.getAttribute('m-menu-submenu-mode') == 'accordion') {\r\n                return;\r\n            }\r\n\r\n            if (mUtil.hasClass(item, 'm-menu__item--hover') == false) {\r\n                mUtil.addClass(item, 'm-menu__item--open-dropdown');\r\n                Plugin.showSubmenuDropdown(item);\r\n            }\r\n\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Handles submenu dropdown close on link click\r\n         * @returns {mMenu}\r\n         */\r\n        handleSubmenuDropdownClose: function(e, el) {\r\n            // exit if its not submenu dropdown mode\r\n            if (Plugin.getSubmenuMode(el) === 'accordion') {\r\n                return;\r\n            }\r\n\r\n            var shown = element.querySelectorAll('.m-menu__item.m-menu__item--submenu.m-menu__item--hover:not(.m-menu__item--tabs)');\r\n\r\n            // check if currently clicked link's parent item ha\r\n            if (shown.length > 0 && mUtil.hasClass(el, 'm-menu__toggle') === false && el.querySelectorAll('.m-menu__toggle').length === 0) {\r\n                // close opened dropdown menus\r\n                for (var i = 0, len = shown.length; i < len; i++) {\r\n                    Plugin.hideSubmenuDropdown(shown[0], true);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * helper functions\r\n         * @returns {mMenu}\r\n         */\r\n        handleSubmenuAccordion: function(e, el) {\r\n            var query;\r\n            var item = el ? el : this;\r\n\r\n            if ( Plugin.getSubmenuMode(el) === 'dropdown' && (query = item.closest('.m-menu__item') ) ) {\r\n                if (query.getAttribute('m-menu-submenu-mode') != 'accordion' ) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var li = item.closest('.m-menu__item');\r\n            var submenu = mUtil.child(li, '.m-menu__submenu, .m-menu__inner');\r\n\r\n            if (mUtil.hasClass(item.closest('.m-menu__item'), 'm-menu__item--open-always')) {\r\n                return;\r\n            }\r\n\r\n            if ( li && submenu ) {\r\n                e.preventDefault();\r\n                var speed = the.options.accordion.slideSpeed;\r\n                var hasClosables = false;\r\n\r\n                if ( mUtil.hasClass(li, 'm-menu__item--open') === false ) {\r\n                    // hide other accordions                    \r\n                    if ( the.options.accordion.expandAll === false ) {\r\n                        var subnav = item.closest('.m-menu__nav, .m-menu__subnav');\r\n                        var closables = mUtil.children(subnav, '.m-menu__item.m-menu__item--open.m-menu__item--submenu:not(.m-menu__item--expanded):not(.m-menu__item--open-always)');\r\n\r\n                        if ( subnav && closables ) {\r\n                            for (var i = 0, len = closables.length; i < len; i++) {\r\n                                var el_ = closables[0];\r\n                                var submenu_ = mUtil.child(el_, '.m-menu__submenu');\r\n                                if ( submenu_ ) {\r\n                                    mUtil.slideUp(submenu_, speed, function() {\r\n                                        Plugin.scrollerUpdate();\r\n                                        mUtil.removeClass(el_, 'm-menu__item--open');\r\n                                    });                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    mUtil.slideDown(submenu, speed, function() {\r\n                        Plugin.scrollToItem(item);\r\n                        Plugin.scrollerUpdate();\r\n                        \r\n                        Plugin.eventTrigger('submenuToggle', submenu);\r\n                    });\r\n                \r\n                    mUtil.addClass(li, 'm-menu__item--open');\r\n\r\n                } else {\r\n                    mUtil.slideUp(submenu, speed, function() {\r\n                        Plugin.scrollToItem(item);\r\n                        Plugin.eventTrigger('submenuToggle', submenu);\r\n                    });\r\n\r\n                    mUtil.removeClass(li, 'm-menu__item--open');       \r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * scroll to item function\r\n         * @returns {mMenu}\r\n         */\r\n        scrollToItem: function(item) {\r\n            // handle auto scroll for accordion submenus\r\n            if ( mUtil.isInResponsiveRange('desktop') && the.options.accordion.autoScroll && element.getAttribute('m-menu-scrollable') !== '1' ) {\r\n                mUtil.scrollTo(item, the.options.accordion.autoScrollSpeed);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * helper functions\r\n         * @returns {mMenu}\r\n         */\r\n        hideSubmenuDropdown: function(item, classAlso) {\r\n            // remove submenu activation class\r\n            if ( classAlso ) {\r\n                mUtil.removeClass(item, 'm-menu__item--hover');\r\n                mUtil.removeClass(item, 'm-menu__item--active-tab');\r\n            }\r\n\r\n            // clear timeout\r\n            item.removeAttribute('data-hover');\r\n\r\n            if ( item.getAttribute('m-menu-dropdown-toggle-class') ) {\r\n                mUtil.removeClass(body, item.getAttribute('m-menu-dropdown-toggle-class'));\r\n            }\r\n\r\n            var timeout = item.getAttribute('data-timeout');\r\n            item.removeAttribute('data-timeout');\r\n            clearTimeout(timeout);\r\n        },\r\n\r\n        /**\r\n         * helper functions\r\n         * @returns {mMenu}\r\n         */\r\n        showSubmenuDropdown: function(item) {\r\n            // close active submenus\r\n            var list = element.querySelectorAll('.m-menu__item--submenu.m-menu__item--hover, .m-menu__item--submenu.m-menu__item--active-tab');\r\n\r\n            if ( list ) {\r\n                for (var i = 0, len = list.length; i < len; i++) {\r\n                    var el = list[i];\r\n                    if ( item !== el && el.contains(item) === false && item.contains(el) === false ) {\r\n                        Plugin.hideSubmenuDropdown(el, true);\r\n                    }\r\n                }\r\n            } \r\n\r\n            // adjust submenu position\r\n            Plugin.adjustSubmenuDropdownArrowPos(item);\r\n\r\n            // add submenu activation class\r\n            mUtil.addClass(item, 'm-menu__item--hover');\r\n            \r\n            if ( item.getAttribute('m-menu-dropdown-toggle-class') ) {\r\n                mUtil.addClass(body, item.getAttribute('m-menu-dropdown-toggle-class'));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles submenu slide toggle\r\n         * @returns {mMenu}\r\n         */\r\n        createSubmenuDropdownClickDropoff: function(el) {\r\n            var query;\r\n            var zIndex = (query = mUtil.child(el, '.m-menu__submenu') ? mUtil.css(query, 'z-index') : 0) - 1;\r\n\r\n            var dropoff = document.createElement('<div class=\"m-menu__dropoff\" style=\"background: transparent; position: fixed; top: 0; bottom: 0; left: 0; right: 0; z-index: ' + zIndex + '\"></div>');\r\n\r\n            body.appendChild(dropoff);\r\n\r\n            mUtil.addEvent(dropoff, 'click', function(e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                mUtil.remove(this);\r\n                Plugin.hideSubmenuDropdown(el, true);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handles submenu click toggle\r\n         * @returns {mMenu}\r\n         */\r\n        adjustSubmenuDropdownArrowPos: function(item) {\r\n            var submenu = mUtil.child(item, '.m-menu__submenu');\r\n            var arrow = mUtil.child( submenu, '.m-menu__arrow.m-menu__arrow--adjust');\r\n            var subnav = mUtil.child( submenu, '.m-menu__subnav');\r\n\r\n            if ( arrow ) { \r\n                var pos = 0; \r\n                var link = mUtil.child(item, '.m-menu__link');\r\n\r\n                if ( mUtil.hasClass(submenu, 'm-menu__submenu--classic') || mUtil.hasClass(submenu, 'm-menu__submenu--fixed') ) {\r\n                    if ( mUtil.hasClass(submenu, 'm-menu__submenu--right')) {\r\n                        pos = mUtil.outerWidth(item) / 2;\r\n                        if (mUtil.hasClass(submenu, 'm-menu__submenu--pull')) {\r\n                            if (mUtil.isRTL()) {\r\n                                pos = pos + Math.abs( parseFloat(mUtil.css(submenu, 'margin-left')) );\r\n                            } else {\r\n                                pos = pos + Math.abs( parseFloat(mUtil.css(submenu, 'margin-right')) );\r\n                            }\r\n                        }\r\n                        pos = parseInt(mUtil.css(submenu, 'width')) - pos;\r\n                    } else if ( mUtil.hasClass(submenu, 'm-menu__submenu--left') ) {\r\n                        pos = mUtil.outerWidth(item) / 2;\r\n                        if ( mUtil.hasClass(submenu, 'm-menu__submenu--pull')) {\r\n                            if (mUtil.isRTL()) {\r\n                                pos = pos + Math.abs( parseFloat(mUtil.css(submenu, 'margin-right')) );\r\n                            } else {\r\n                                pos = pos + Math.abs( parseFloat(mUtil.css(submenu, 'margin-left')) );\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (mUtil.isRTL()) {\r\n                        mUtil.css(arrow, 'right', pos + 'px');  \r\n                    } else {\r\n                        mUtil.css(arrow, 'left', pos + 'px');  \r\n                    }\r\n                } else {\r\n                    if ( mUtil.hasClass(submenu, 'm-menu__submenu--center') || mUtil.hasClass(submenu, 'm-menu__submenu--full') ) {\r\n                        pos = mUtil.offset(item).left - ((mUtil.getViewPort().width - parseInt(mUtil.css(submenu, 'width'))) / 2);\r\n                        pos = pos + (mUtil.outerWidth(item) / 2);\r\n\r\n                        mUtil.css(arrow, 'left', pos + 'px');\r\n                        if (mUtil.isRTL()) {\r\n                            mUtil.css(arrow, 'right', 'auto');\r\n                        }                        \r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles submenu hover toggle\r\n         * @returns {mMenu}\r\n         */\r\n        pauseDropdownHover: function(time) {\r\n            var date = new Date();\r\n\r\n            the.pauseDropdownHoverTime = date.getTime() + time;\r\n        },\r\n\r\n        /**\r\n         * Handles submenu hover toggle\r\n         * @returns {mMenu}\r\n         */\r\n        resumeDropdownHover: function() {\r\n            var date = new Date();\r\n\r\n            return (date.getTime() > the.pauseDropdownHoverTime ? true : false);\r\n        },\r\n\r\n        /**\r\n         * Reset menu's current active item\r\n         * @returns {mMenu}\r\n         */\r\n        resetActiveItem: function(item) {\r\n            var list;\r\n            var parents;\r\n\r\n            list = element.querySelectorAll('.m-menu__item--active');\r\n            \r\n            for (var i = 0, len = list.length; i < len; i++) {\r\n                var el = list[0];\r\n                mUtil.removeClass(el, 'm-menu__item--active');\r\n                mUtil.hide( mUtil.child(el, '.m-menu__submenu') );\r\n                parents = mUtil.parents(el, '.m-menu__item--submenu');\r\n\r\n                for (var i_ = 0, len_ = parents.length; i_ < len_; i_++) {\r\n                    var el_ = parents[i];\r\n                    mUtil.removeClass(el_, 'm-menu__item--open');\r\n                    mUtil.hide( mUtil.child(el_, '.m-menu__submenu') );\r\n                }\r\n            }\r\n\r\n            // close open submenus\r\n            if ( the.options.accordion.expandAll === false ) {\r\n                if ( list = element.querySelectorAll('.m-menu__item--open') ) {\r\n                    for (var i = 0, len = list.length; i < len; i++) {\r\n                        mUtil.removeClass(parents[0], 'm-menu__item--open');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets menu's active item\r\n         * @returns {mMenu}\r\n         */\r\n        setActiveItem: function(item) {\r\n            // reset current active item\r\n            Plugin.resetActiveItem();\r\n\r\n            mUtil.addClass(item, 'm-menu__item--active');\r\n            \r\n            var parents = mUtil.parents(item, '.m-menu__item--submenu');\r\n            for (var i = 0, len = parents.length; i < len; i++) {\r\n                mUtil.addClass(parents[i], 'm-menu__item--open');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns page breadcrumbs for the menu's active item\r\n         * @returns {mMenu}\r\n         */\r\n        getBreadcrumbs: function(item) {\r\n            var query;\r\n            var breadcrumbs = [];\r\n            var link = mUtil.child(item, '.m-menu__link');\r\n\r\n            breadcrumbs.push({\r\n                text: (query = mUtil.child(link, '.m-menu__link-text') ? query.innerHTML : ''),\r\n                title: link.getAttribute('title'),\r\n                href: link.getAttribute('href')\r\n            });\r\n\r\n            var parents = mUtil.parents(item, '.m-menu__item--submenu');\r\n            for (var i = 0, len = parents.length; i < len; i++) {\r\n                var submenuLink = mUtil.child(parents[i], '.m-menu__link');\r\n\r\n                breadcrumbs.push({\r\n                    text: (query = mUtil.child(submenuLink, '.m-menu__link-text') ? query.innerHTML : ''),\r\n                    title: submenuLink.getAttribute('title'),\r\n                    href: submenuLink.getAttribute('href')\r\n                });\r\n            }\r\n\r\n            return  breadcrumbs.reverse();\r\n        },\r\n\r\n        /**\r\n         * Returns page title for the menu's active item\r\n         * @returns {mMenu}\r\n         */\r\n        getPageTitle: function(item) {\r\n            var query;\r\n\r\n            return (query = mUtil.child(item, '.m-menu__link-text') ? query.innerHTML : '');\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++ ) {\r\n                var event = the.events[i];\r\n                if ( event.name == name ) {\r\n                    if ( event.one == true ) {\r\n                        if ( event.fired == false ) {\r\n                            the.events[i].fired = true;\r\n                            event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Set active menu item\r\n     */\r\n    the.scrollerUpdate = function() {\r\n        return Plugin.scrollerUpdate();\r\n    };\r\n\r\n    /**\r\n     * Set active menu item\r\n     */\r\n    the.scrollerTop = function() {\r\n        return Plugin.scrollerTop();\r\n    };\r\n\r\n    /**\r\n     * Set active menu item\r\n     */\r\n    the.setActiveItem = function(item) {\r\n        return Plugin.setActiveItem(item);\r\n    };\r\n\r\n    the.reload = function() {\r\n        return Plugin.reload();\r\n    };\r\n\r\n    /**\r\n     * Set breadcrumb for menu item\r\n     */\r\n    the.getBreadcrumbs = function(item) {\r\n        return Plugin.getBreadcrumbs(item);\r\n    };\r\n\r\n    /**\r\n     * Set page title for menu item\r\n     */\r\n    the.getPageTitle = function(item) {\r\n        return Plugin.getPageTitle(item);\r\n    };\r\n\r\n    /**\r\n     * Get submenu mode\r\n     */\r\n    the.getSubmenuMode = function(el) {\r\n        return Plugin.getSubmenuMode(el);\r\n    };\r\n\r\n    /**\r\n     * Hide dropdown submenu\r\n     * @returns {jQuery}\r\n     */\r\n    the.hideDropdown = function(item) {\r\n        Plugin.hideSubmenuDropdown(item, true);\r\n    };\r\n\r\n    /**\r\n     * Disable menu for given time\r\n     * @returns {jQuery}\r\n     */\r\n    the.pauseDropdownHover = function(time) {\r\n        Plugin.pauseDropdownHover(time);\r\n    };\r\n\r\n    /**\r\n     * Disable menu for given time\r\n     * @returns {jQuery}\r\n     */\r\n    the.resumeDropdownHover = function() {\r\n        return Plugin.resumeDropdownHover();\r\n    };\r\n\r\n    /**\r\n     * Register event\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    //== Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    //== Handle plugin on window resize\r\n    mUtil.addResizeHandler(function() {\r\n        if (init) {\r\n            the.reload();\r\n        }  \r\n    });\r\n\r\n    //== Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\r\n\r\n// Plugin global lazy initialization\r\ndocument.addEventListener(\"click\", function (e) {\r\n    var body = mUtil.get('body');\r\n    var query;\r\n    if ( query = body.querySelectorAll('.m-menu__nav .m-menu__item.m-menu__item--submenu.m-menu__item--hover:not(.m-menu__item--tabs)[m-menu-submenu-toggle=\"click\"]') ) {\r\n        for (var i = 0, len = query.length; i < len; i++) {\r\n            var element = query[i].closest('.m-menu__nav').parentNode;\r\n\r\n            if ( element ) {\r\n                var the = mUtil.data(element).get('menu');\r\n\r\n                if ( !the ) {\r\n                    break;\r\n                }\r\n\r\n                if ( !the || the.getSubmenuMode() !== 'dropdown' ) {\r\n                    break;\r\n                }\r\n\r\n                if ( e.target !== element && element.contains(e.target) === false ) {\r\n                    var items;\r\n                    if ( items = element.querySelectorAll('.m-menu__item--submenu.m-menu__item--hover:not(.m-menu__item--tabs)[m-menu-submenu-toggle=\"click\"]') ) {\r\n                        for (var j = 0, cnt = items.length; j < cnt; j++) {\r\n                            the.hideDropdown(items[j]);\r\n                        }\r\n                    }\r\n                }\r\n            }            \r\n        }\r\n    } \r\n});\nvar mOffcanvas = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {};\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Run plugin\r\n         * @returns {moffcanvas}\r\n         */\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('offcanvas')) {\r\n                the = mUtil.data(element).get('offcanvas');\r\n            } else {\r\n                // reset offcanvas\r\n                Plugin.init(options);\r\n                \r\n                // build offcanvas\r\n                Plugin.build();\r\n\r\n                mUtil.data(element).set('offcanvas', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles suboffcanvas click toggle\r\n         * @returns {moffcanvas}\r\n         */\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n            the.overlay;\r\n\r\n            the.classBase = the.options.baseClass;\r\n            the.classShown = the.classBase + '--on';\r\n            the.classOverlay = the.classBase + '-overlay';\r\n\r\n            the.state = mUtil.hasClass(element, the.classShown) ? 'shown' : 'hidden';\r\n        },\r\n\r\n        build: function() {\r\n            //== offcanvas toggle\r\n            if (the.options.toggleBy) {\r\n                if (typeof the.options.toggleBy === 'string') { \r\n                    mUtil.addEvent( the.options.toggleBy, 'click', Plugin.toggle); \r\n                } else if (the.options.toggleBy && the.options.toggleBy[0] && the.options.toggleBy[0].target) {\r\n                    for (var i in the.options.toggleBy) { \r\n                        mUtil.addEvent( the.options.toggleBy[i].target, 'click', Plugin.toggle); \r\n                    }\r\n                } else if (the.options.toggleBy && the.options.toggleBy.target) {\r\n                    mUtil.addEvent( the.options.toggleBy.target, 'click', Plugin.toggle); \r\n                } \r\n            }\r\n\r\n            //== offcanvas close\r\n            var closeBy = mUtil.get(the.options.closeBy);\r\n            if (closeBy) {\r\n                mUtil.addEvent(closeBy, 'click', Plugin.hide);\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * Handles offcanvas toggle\r\n         */\r\n        toggle: function() {;\r\n            Plugin.eventTrigger('toggle'); \r\n\r\n            if (the.state == 'shown') {\r\n                Plugin.hide(this);\r\n            } else {\r\n                Plugin.show(this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles offcanvas show\r\n         */\r\n        show: function(target) {\r\n            if (the.state == 'shown') {\r\n                return;\r\n            }\r\n\r\n            Plugin.eventTrigger('beforeShow');\r\n\r\n            Plugin.togglerClass(target, 'show');\r\n\r\n            //== Offcanvas panel\r\n            mUtil.addClass(body, the.classShown);\r\n            mUtil.addClass(element, the.classShown);\r\n\r\n            the.state = 'shown';\r\n\r\n            if (the.options.overlay) {\r\n                the.overlay = mUtil.insertAfter(document.createElement('DIV') , element );\r\n                mUtil.addClass(the.overlay, the.classOverlay);\r\n                mUtil.addEvent(the.overlay, 'click', function(e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    Plugin.hide(target);       \r\n                });\r\n            }\r\n\r\n            Plugin.eventTrigger('afterShow');\r\n        },\r\n\r\n        /**\r\n         * Handles offcanvas hide\r\n         */\r\n        hide: function(target) {\r\n            if (the.state == 'hidden') {\r\n                return;\r\n            }\r\n\r\n            Plugin.eventTrigger('beforeHide');\r\n\r\n            Plugin.togglerClass(target, 'hide');\r\n\r\n            mUtil.removeClass(body, the.classShown);\r\n            mUtil.removeClass(element, the.classShown);\r\n\r\n            the.state = 'hidden';\r\n\r\n            if (the.options.overlay && the.overlay) {\r\n                mUtil.remove(the.overlay);\r\n            }\r\n\r\n            Plugin.eventTrigger('afterHide');\r\n        },\r\n\r\n        /**\r\n         * Handles toggler class\r\n         */\r\n        togglerClass: function(target, mode) {\r\n            //== Toggler\r\n            var id = mUtil.attr(target, 'id');\r\n            var toggleBy;\r\n\r\n            if (the.options.toggleBy && the.options.toggleBy[0] && the.options.toggleBy[0].target) {\r\n                for (var i in the.options.toggleBy) {\r\n                    if (the.options.toggleBy[i].target === id) {\r\n                        toggleBy = the.options.toggleBy[i];\r\n                    }        \r\n                }\r\n            } else if (the.options.toggleBy && the.options.toggleBy.target) {\r\n                toggleBy = the.options.toggleBy;\r\n            }\r\n\r\n            if (toggleBy) {                \r\n                var el = mUtil.get(toggleBy.target);\r\n                \r\n                if (mode === 'show') {\r\n                    mUtil.addClass(el, toggleBy.state);\r\n                }\r\n\r\n                if (mode === 'hide') {\r\n                    mUtil.removeClass(el, toggleBy.state);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Hide \r\n     */\r\n    the.hide = function() {\r\n        return Plugin.hide();\r\n    };\r\n\r\n    /**\r\n     * Show \r\n     */\r\n    the.show = function() {\r\n        return Plugin.show();\r\n    };\r\n\r\n    /**\r\n     * Get suboffcanvas mode\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Set offcanvas content\r\n     * @returns {mOffcanvas}\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    //== Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    //== Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\n// plugin setup\r\nvar mPortlet = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {\r\n        bodyToggleSpeed: 400,\r\n        tooltips: true,\r\n        tools: {\r\n            toggle: {\r\n                collapse: 'Collapse',\r\n                expand: 'Expand'\r\n            },\r\n            reload: 'Reload',\r\n            remove: 'Remove',\r\n            fullscreen: {\r\n                on: 'Fullscreen',\r\n                off: 'Exit Fullscreen'\r\n            }\r\n        },\r\n        sticky: {\r\n            offset: 300,\r\n            zIndex: 101\r\n        }\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Construct\r\n         */\r\n\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('portlet')) {\r\n                the = mUtil.data(element).get('portlet');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                mUtil.data(element).set('portlet', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Init portlet\r\n         */\r\n        init: function(options) {\r\n            the.element = element;\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n            the.head = mUtil.child(element, '.m-portlet__head');\r\n            the.foot = mUtil.child(element, '.m-portlet__foot');\r\n\r\n            if (mUtil.child(element, '.m-portlet__body')) {\r\n                the.body = mUtil.child(element, '.m-portlet__body');\r\n            } else if (mUtil.child(element, '.m-form').length !== 0) {\r\n                the.body = mUtil.child(element, '.m-form');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Build Form Wizard\r\n         */\r\n        build: function() {\r\n            //== Remove\r\n            var remove = mUtil.find(the.head, '[m-portlet-tool=remove]');\r\n            if (remove) {\r\n                mUtil.addEvent(remove, 'click', function(e) {\r\n                    e.preventDefault();\r\n                    Plugin.remove();\r\n                });\r\n            }\r\n\r\n            //== Reload\r\n            var reload = mUtil.find(the.head, '[m-portlet-tool=reload]');\r\n            if (reload) {\r\n                mUtil.addEvent(reload, 'click', function(e) {\r\n                    e.preventDefault();\r\n                    Plugin.reload();\r\n                });\r\n            }\r\n\r\n            //== Toggle\r\n            var toggle = mUtil.find(the.head, '[m-portlet-tool=toggle]');\r\n            if (toggle) {\r\n                mUtil.addEvent(toggle, 'click', function(e) {\r\n                    e.preventDefault();\r\n                    Plugin.toggle();\r\n                });\r\n            }\r\n\r\n            //== Fullscreen\r\n            var fullscreen = mUtil.find(the.head, '[m-portlet-tool=fullscreen]');\r\n            if (fullscreen) {\r\n                mUtil.addEvent(fullscreen, 'click', function(e) {\r\n                    e.preventDefault();\r\n                    Plugin.fullscreen();\r\n                });\r\n            }\r\n\r\n            Plugin.setupTooltips();\r\n        },\r\n\r\n        /**\r\n         * Window scroll handle event for sticky portlet\r\n         */\r\n        onScrollSticky: function() {\r\n            var st = window.pageYOffset;\r\n            var offset = the.options.sticky.offset;\r\n\r\n\r\n            if (st > offset) {\r\n                if (mUtil.hasClass(body, 'm-portlet--sticky') === false) {\r\n                    Plugin.eventTrigger('stickyOn');\r\n\r\n                    mUtil.addClass(body, 'm-portlet--sticky');\r\n                    mUtil.addClass(element, 'm-portlet--sticky');\r\n\r\n                    Plugin.updateSticky();\r\n                }\r\n            } else { // back scroll mode\r\n                if (mUtil.hasClass(body, 'm-portlet--sticky')) {\r\n                    Plugin.eventTrigger('stickyOff');\r\n\r\n                    mUtil.removeClass(body, 'm-portlet--sticky');\r\n                    mUtil.removeClass(element, 'm-portlet--sticky');\r\n\r\n                    Plugin.resetSticky();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init sticky portlet\r\n         */\r\n        initSticky: function() {\r\n            if (!the.head) {\r\n                return;\r\n            }\r\n\r\n            window.addEventListener('scroll', Plugin.onScrollSticky);\r\n        },\r\n\r\n        /**\r\n         * Update sticky portlet positions\r\n         */\r\n        updateSticky: function() {\r\n            if (!the.head) {\r\n                return;\r\n            }\r\n\r\n            var top;\r\n\r\n            if (mUtil.hasClass(body, 'm-portlet--sticky')) {\r\n                if (the.options.sticky.position.top instanceof Function) {\r\n                    top = parseInt(the.options.sticky.position.top.call());\r\n                } else {\r\n                    top = parseInt(the.options.sticky.position.top);\r\n                }\r\n\r\n                var left;\r\n                if (the.options.sticky.position.left instanceof Function) {\r\n                    left = parseInt(the.options.sticky.position.left.call());\r\n                } else {\r\n                    left = parseInt(the.options.sticky.position.left);\r\n                }\r\n\r\n                var right;\r\n                if (the.options.sticky.position.right instanceof Function) {\r\n                    right = parseInt(the.options.sticky.position.right.call());\r\n                } else {\r\n                    right = parseInt(the.options.sticky.position.right);\r\n                }\r\n\r\n                mUtil.css(the.head, 'z-index', the.options.sticky.zIndex);\r\n                mUtil.css(the.head, 'top', top + 'px');\r\n\r\n                if (mUtil.isRTL()) {\r\n                    mUtil.css(the.head, 'left', right + 'px');\r\n                    mUtil.css(the.head, 'right',left  + 'px');\r\n                } else {\r\n                    mUtil.css(the.head, 'left', left + 'px');\r\n                    mUtil.css(the.head, 'right', right + 'px');\r\n                }\r\n                \r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset sticky portlet positions\r\n         */\r\n        resetSticky: function() {\r\n            if (!the.head) {\r\n                return;\r\n            }\r\n\r\n            if (mUtil.hasClass(body, 'm-portlet--sticky') === false) {\r\n                mUtil.css(the.head, 'z-index', '');\r\n                mUtil.css(the.head, 'top', '');\r\n                mUtil.css(the.head, 'left', '');\r\n                mUtil.css(the.head, 'right', '');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Destroy sticky portlet\r\n         */\r\n        destroySticky: function() {\r\n            if (!the.head) {\r\n                return;\r\n            }\r\n\r\n            Plugin.resetSticky();\r\n\r\n            window.removeEventListener('scroll', Plugin.onScrollSticky);\r\n        },\r\n\r\n        /**\r\n         * Remove portlet\r\n         */\r\n        remove: function() {\r\n            if (Plugin.eventTrigger('beforeRemove') === false) {\r\n                return;\r\n            }\r\n\r\n            if (mUtil.hasClass(body, 'm-portlet--fullscreen') && mUtil.hasClass(element, 'm-portlet--fullscreen')) {\r\n                Plugin.fullscreen('off');\r\n            }\r\n\r\n            Plugin.removeTooltips();\r\n\r\n            mUtil.remove(element);\r\n\r\n            Plugin.eventTrigger('afterRemove');\r\n        },\r\n\r\n        /**\r\n         * Set content\r\n         */\r\n        setContent: function(html) {\r\n            if (html) {\r\n                the.body.innerHTML = html;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get body\r\n         */\r\n        getBody: function() {\r\n            return the.body;\r\n        },\r\n\r\n        /**\r\n         * Get self\r\n         */\r\n        getSelf: function() {\r\n            return element;\r\n        },\r\n\r\n        /**\r\n         * Setup tooltips\r\n         */\r\n        setupTooltips: function() {\r\n            if (the.options.tooltips) {\r\n                var collapsed = mUtil.hasClass(element, 'm-portlet--collapse') || mUtil.hasClass(element, 'm-portlet--collapsed');\r\n                var fullscreenOn = mUtil.hasClass(body, 'm-portlet--fullscreen') && mUtil.hasClass(element, 'm-portlet--fullscreen');\r\n\r\n                //== Remove\r\n                var remove = mUtil.find(the.head, '[m-portlet-tool=remove]');\r\n                if (remove) {\r\n                    var placement = (fullscreenOn ? 'bottom' : 'top');\r\n                    var tip = new Tooltip(remove, {\r\n                        title: the.options.tools.remove,\r\n                        placement: placement,\r\n                        offset: (fullscreenOn ? '0,10px,0,0' : '0,5px'),\r\n                        trigger: 'hover',\r\n                        template: '<div class=\"m-tooltip m-tooltip--portlet tooltip bs-tooltip-' + placement + '\" role=\"tooltip\">\\\r\n                            <div class=\"tooltip-arrow arrow\"></div>\\\r\n                            <div class=\"tooltip-inner\"></div>\\\r\n                        </div>'\r\n                    });\r\n\r\n                    mUtil.data(remove).set('tooltip', tip);\r\n                }\r\n\r\n                //== Reload\r\n                var reload = mUtil.find(the.head, '[m-portlet-tool=reload]');\r\n                if (reload) {\r\n                    var placement = (fullscreenOn ? 'bottom' : 'top');\r\n                    var tip = new Tooltip(reload, {\r\n                        title: the.options.tools.reload,\r\n                        placement: placement,\r\n                        offset: (fullscreenOn ? '0,10px,0,0' : '0,5px'),\r\n                        trigger: 'hover',\r\n                        template: '<div class=\"m-tooltip m-tooltip--portlet tooltip bs-tooltip-' + placement + '\" role=\"tooltip\">\\\r\n                            <div class=\"tooltip-arrow arrow\"></div>\\\r\n                            <div class=\"tooltip-inner\"></div>\\\r\n                        </div>'\r\n                    });\r\n\r\n                    mUtil.data(reload).set('tooltip', tip);\r\n                }\r\n\r\n                //== Toggle\r\n                var toggle = mUtil.find(the.head, '[m-portlet-tool=toggle]');\r\n                if (toggle) {\r\n                    var placement = (fullscreenOn ? 'bottom' : 'top');\r\n                    var tip = new Tooltip(toggle, {\r\n                        title: (collapsed ? the.options.tools.toggle.expand : the.options.tools.toggle.collapse),\r\n                        placement: placement,\r\n                        offset: (fullscreenOn ? '0,10px,0,0' : '0,5px'),\r\n                        trigger: 'hover',\r\n                        template: '<div class=\"m-tooltip m-tooltip--portlet tooltip bs-tooltip-' + placement + '\" role=\"tooltip\">\\\r\n                            <div class=\"tooltip-arrow arrow\"></div>\\\r\n                            <div class=\"tooltip-inner\"></div>\\\r\n                        </div>'\r\n                    });\r\n\r\n                    mUtil.data(toggle).set('tooltip', tip);\r\n                }\r\n\r\n                //== Fullscreen\r\n                var fullscreen = mUtil.find(the.head, '[m-portlet-tool=fullscreen]');\r\n                if (fullscreen) {\r\n                    var placement = (fullscreenOn ? 'bottom' : 'top');\r\n                    var tip = new Tooltip(fullscreen, {\r\n                        title: (fullscreenOn ? the.options.tools.fullscreen.off : the.options.tools.fullscreen.on),\r\n                        placement: placement,\r\n                        offset: (fullscreenOn ? '0,10px,0,0' : '0,5px'),\r\n                        trigger: 'hover',\r\n                        template: '<div class=\"m-tooltip m-tooltip--portlet tooltip bs-tooltip-' + placement + '\" role=\"tooltip\">\\\r\n                            <div class=\"tooltip-arrow arrow\"></div>\\\r\n                            <div class=\"tooltip-inner\"></div>\\\r\n                        </div>'\r\n                    });\r\n\r\n                    mUtil.data(fullscreen).set('tooltip', tip);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup tooltips\r\n         */\r\n        removeTooltips: function() {\r\n            if (the.options.tooltips) {\r\n                //== Remove\r\n                var remove = mUtil.find(the.head, '[m-portlet-tool=remove]');\r\n                if (remove && mUtil.data(remove).has('tooltip')) {\r\n                    mUtil.data(remove).get('tooltip').dispose();\r\n                }\r\n\r\n                //== Reload\r\n                var reload = mUtil.find(the.head, '[m-portlet-tool=reload]');\r\n                if (reload && mUtil.data(reload).has('tooltip')) {\r\n                    mUtil.data(reload).get('tooltip').dispose();\r\n                }\r\n\r\n                //== Toggle\r\n                var toggle = mUtil.find(the.head, '[m-portlet-tool=toggle]');\r\n                if (toggle && mUtil.data(toggle).has('tooltip')) {\r\n                    mUtil.data(toggle).get('tooltip').dispose();\r\n                }\r\n\r\n                //== Fullscreen\r\n                var fullscreen = mUtil.find(the.head, '[m-portlet-tool=fullscreen]');\r\n                if (fullscreen && mUtil.data(fullscreen).has('tooltip')) {\r\n                    mUtil.data(fullscreen).get('tooltip').dispose();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reload\r\n         */\r\n        reload: function() {\r\n            Plugin.eventTrigger('reload');\r\n        },\r\n\r\n        /**\r\n         * Toggle\r\n         */\r\n        toggle: function() {\r\n            if (mUtil.hasClass(element, 'm-portlet--collapse') || mUtil.hasClass(element, 'm-portlet--collapsed')) {\r\n                Plugin.expand();\r\n            } else {\r\n                Plugin.collapse();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Collapse\r\n         */\r\n        collapse: function() {\r\n            if (Plugin.eventTrigger('beforeCollapse') === false) {\r\n                return;\r\n            }\r\n\r\n            mUtil.slideUp(the.body, the.options.bodyToggleSpeed, function() {\r\n                Plugin.eventTrigger('afterCollapse');\r\n            });\r\n\r\n            mUtil.addClass(element, 'm-portlet--collapse');\r\n\r\n            var toggle = mUtil.find(the.head, '[m-portlet-tool=toggle]');\r\n            if (toggle && mUtil.data(toggle).has('tooltip')) {\r\n                mUtil.data(toggle).get('tooltip').updateTitleContent(the.options.tools.toggle.expand);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Expand\r\n         */\r\n        expand: function() {\r\n            if (Plugin.eventTrigger('beforeExpand') === false) {\r\n                return;\r\n            }\r\n\r\n            mUtil.slideDown(the.body, the.options.bodyToggleSpeed, function() {\r\n                Plugin.eventTrigger('afterExpand');\r\n            });\r\n\r\n            mUtil.removeClass(element, 'm-portlet--collapse');\r\n            mUtil.removeClass(element, 'm-portlet--collapsed');\r\n\r\n            var toggle = mUtil.find(the.head, '[m-portlet-tool=toggle]');\r\n            if (toggle && mUtil.data(toggle).has('tooltip')) {\r\n                mUtil.data(toggle).get('tooltip').updateTitleContent(the.options.tools.toggle.collapse);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle\r\n         */\r\n        fullscreen: function(mode) {\r\n            var d = {};\r\n            var speed = 300;\r\n\r\n            if (mode === 'off' || (mUtil.hasClass(body, 'm-portlet--fullscreen') && mUtil.hasClass(element, 'm-portlet--fullscreen'))) {\r\n                Plugin.eventTrigger('beforeFullscreenOff');\r\n\r\n                mUtil.removeClass(body, 'm-portlet--fullscreen');\r\n                mUtil.removeClass(element, 'm-portlet--fullscreen');\r\n\r\n                Plugin.removeTooltips();\r\n                Plugin.setupTooltips();\r\n\r\n                if (the.foot) {\r\n                    mUtil.css(the.body, 'margin-bottom', '');\r\n                    mUtil.css(the.foot, 'margin-top', '');\r\n                }\r\n\r\n                Plugin.eventTrigger('afterFullscreenOff');\r\n            } else {\r\n                Plugin.eventTrigger('beforeFullscreenOn');\r\n\r\n                mUtil.addClass(element, 'm-portlet--fullscreen');\r\n                mUtil.addClass(body, 'm-portlet--fullscreen');\r\n\r\n                Plugin.removeTooltips();\r\n                Plugin.setupTooltips();\r\n\r\n\r\n                if (the.foot) {\r\n                    var height1 = parseInt(mUtil.css(the.foot, 'height'));\r\n                    var height2 = parseInt(mUtil.css(the.foot, 'height')) + parseInt(mUtil.css(the.head, 'height'));\r\n                    mUtil.css(the.body, 'margin-bottom', height1 + 'px');\r\n                    mUtil.css(the.foot, 'margin-top', '-' + height2 + 'px');\r\n                }\r\n\r\n                Plugin.eventTrigger('afterFullscreenOn');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name) {\r\n            //mUtil.triggerCustomEvent(name);\r\n            for (i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            event.handler.call(this, the);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n\r\n            return the;\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Remove portlet\r\n     * @returns {mPortlet}\r\n     */\r\n    the.remove = function() {\r\n        return Plugin.remove(html);\r\n    };\r\n\r\n    /**\r\n     * Init sticky portlet\r\n     * @returns {mPortlet}\r\n     */\r\n    the.initSticky = function() {\r\n        return Plugin.initSticky();\r\n    };\r\n\r\n    /**\r\n     * Update sticky portlet scroll event\r\n     * @returns {mPortlet}\r\n     */\r\n    the.updateSticky = function() {\r\n        return Plugin.updateSticky();\r\n    };\r\n\r\n    /**\r\n     * Reset sticky portlet positions\r\n     * @returns {mPortlet}\r\n     */\r\n    the.resetSticky = function() {\r\n        return Plugin.resetSticky();\r\n    };\r\n\r\n    /**\r\n     * Destroy sticky portlet scroll event\r\n     * @returns {mPortlet}\r\n     */\r\n    the.destroySticky = function() {\r\n        return Plugin.destroySticky();\r\n    };\r\n\r\n    /**\r\n     * Reload portlet\r\n     * @returns {mPortlet}\r\n     */\r\n    the.reload = function() {\r\n        return Plugin.reload();\r\n    };\r\n\r\n    /**\r\n     * Set portlet content\r\n     * @returns {mPortlet}\r\n     */\r\n    the.setContent = function(html) {\r\n        return Plugin.setContent(html);\r\n    };\r\n\r\n    /**\r\n     * Toggle portlet\r\n     * @returns {mPortlet}\r\n     */\r\n    the.toggle = function() {\r\n        return Plugin.toggle();\r\n    };\r\n\r\n    /**\r\n     * Collapse portlet\r\n     * @returns {mPortlet}\r\n     */\r\n    the.collapse = function() {\r\n        return Plugin.collapse();\r\n    };\r\n\r\n    /**\r\n     * Expand portlet\r\n     * @returns {mPortlet}\r\n     */\r\n    the.expand = function() {\r\n        return Plugin.expand();\r\n    };\r\n\r\n    /**\r\n     * Fullscreen portlet\r\n     * @returns {mPortlet}\r\n     */\r\n    the.fullscreen = function() {\r\n        return Plugin.fullscreen('on');\r\n    };\r\n\r\n    /**\r\n     * Fullscreen portlet\r\n     * @returns {mPortlet}\r\n     */\r\n    the.unFullscreen = function() {\r\n        return Plugin.fullscreen('off');\r\n    };\r\n\r\n    /**\r\n     * Get portletbody \r\n     * @returns {jQuery}\r\n     */\r\n    the.getBody = function() {\r\n        return Plugin.getBody();\r\n    };\r\n\r\n    /**\r\n     * Get portletbody \r\n     * @returns {jQuery}\r\n     */\r\n    the.getSelf = function() {\r\n        return Plugin.getSelf();\r\n    };\r\n\r\n    /**\r\n     * Attach event\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Attach event that will be fired once\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    //== Construct plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    return the;\r\n};\n// plugin setup\r\nvar mQuicksearch = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');  \r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {\r\n        mode: 'default', //'default/dropdown'\r\n        minLength: 1,\r\n        maxHeight: 300,\r\n        requestTimeout: 200, // ajax request fire timeout in milliseconds \r\n        inputTarget: 'm_quicksearch_input',\r\n        iconCloseTarget: 'm_quicksearch_close',\r\n        iconCancelTarget: 'm_quicksearch_cancel',\r\n        iconSearchTarget: 'm_quicksearch_search',\r\n        \r\n        spinnerClass: 'm-loader m-loader--skin-light m-loader--right',\r\n        hasResultClass: 'm-list-search--has-result',\r\n        \r\n        templates: {\r\n            error: '<div class=\"m-search-results m-search-results--skin-light\"><span class=\"m-search-result__message\">{{message}}</div></div>'\r\n        }\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Construct\r\n         */\r\n\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('quicksearch')) {\r\n                the = mUtil.data(element).get('quicksearch');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                mUtil.data(element).set('quicksearch', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        init: function(options) {\r\n            the.element = element;\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            // search query\r\n            the.query = '';\r\n\r\n            // form\r\n            the.form = mUtil.find(element, 'form');\r\n\r\n            // input element\r\n            the.input = mUtil.get(the.options.inputTarget);\r\n\r\n            // close icon\r\n            the.iconClose = mUtil.get(the.options.iconCloseTarget);\r\n\r\n            if (the.options.mode == 'default') {\r\n                // search icon\r\n                the.iconSearch = mUtil.get(the.options.iconSearchTarget);\r\n\r\n                // cancel icon\r\n                the.iconCancel = mUtil.get(the.options.iconCancelTarget);\r\n            }\r\n\r\n            // dropdown\r\n            the.dropdown = new mDropdown(element, {\r\n                mobileOverlay: false\r\n            });\r\n\r\n            // cancel search timeout\r\n            the.cancelTimeout;\r\n\r\n            // ajax processing state\r\n            the.processing = false;\r\n\r\n            // ajax request fire timeout\r\n            the.requestTimeout = false;\r\n        },\r\n\r\n        /**\r\n         * Build plugin\r\n         */\r\n        build: function() {\r\n            // attach input keyup handler\r\n            mUtil.addEvent(the.input, 'keyup', Plugin.search);\r\n\r\n            if (the.options.mode == 'default') {\r\n                mUtil.addEvent(the.input, 'focus', Plugin.showDropdown);\r\n                mUtil.addEvent(the.iconCancel, 'click', Plugin.handleCancel);\r\n\r\n                mUtil.addEvent(the.iconSearch, 'click', function() {\r\n                    if (mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                        mUtil.addClass(body, 'm-header-search--mobile-expanded');\r\n                        the.input.focus();\r\n                    }\r\n                });\r\n\r\n                mUtil.addEvent(the.iconClose, 'click', function() {\r\n                    if (mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                        mUtil.removeClass(body, 'm-header-search--mobile-expanded');\r\n                        Plugin.closeDropdown();\r\n                    }\r\n                });\r\n            } else if (the.options.mode == 'dropdown') {\r\n                the.dropdown.on('afterShow', function() {\r\n                    the.input.focus();\r\n                });\r\n\r\n                mUtil.addEvent(the.iconClose, 'click', Plugin.closeDropdown);\r\n            }\r\n        },\r\n\r\n        showProgress: function() {\r\n            the.processing = true;\r\n            mUtil.addClass(the.form, the.options.spinnerClass);\r\n            Plugin.handleCancelIconVisibility('off');\r\n\r\n            return the;\r\n        },\r\n\r\n        hideProgress: function() {\r\n            the.processing = false;\r\n            mUtil.removeClass(the.form, the.options.spinnerClass);\r\n            Plugin.handleCancelIconVisibility('on');\r\n            mUtil.addClass(element, the.options.hasResultClass);\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Search handler\r\n         */\r\n        search: function(e) {\r\n            the.query = the.input.value;\r\n\r\n            if (the.query.length === 0) {\r\n                Plugin.handleCancelIconVisibility('on');\r\n                mUtil.removeClass(element, the.options.hasResultClass);\r\n                mUtil.removeClass(the.form, the.options.spinnerClass);\r\n            }\r\n\r\n            if (the.query.length < the.options.minLength || the.processing == true) {\r\n                return;\r\n            }\r\n\r\n            if (the.requestTimeout) {\r\n                clearTimeout(the.requestTimeout);\r\n            }\r\n\r\n            the.requestTimeout = false;\r\n\r\n            the.requestTimeout = setTimeout(function() {\r\n                Plugin.eventTrigger('search');\r\n            }, the.options.requestTimeout);            \r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handle cancel icon visibility\r\n         */\r\n        handleCancelIconVisibility: function(status) {\r\n            if (status == 'on') {\r\n                if (the.input.value.length === 0) {\r\n                    if (the.iconCancel) mUtil.css(the.iconCancel, 'visibility', 'hidden');\r\n                    if (the.iconClose) mUtil.css(the.iconClose, 'visibility', 'visible');\r\n                } else {\r\n                    clearTimeout(the.cancelTimeout);\r\n                    the.cancelTimeout = setTimeout(function() {\r\n                        if (the.iconCancel) mUtil.css(the.iconCancel, 'visibility', 'visible');\r\n                        if (the.iconClose) mUtil.css(the.iconClose, 'visibility', 'visible');\r\n                    }, 500);\r\n                }\r\n            } else {\r\n                if (the.iconCancel) mUtil.css(the.iconCancel, 'visibility', 'hidden');\r\n                if (the.iconClose) mUtil.css(the.iconClose, 'visibility', 'hidden');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancel handler\r\n         */\r\n        handleCancel: function(e) {\r\n            the.input.value = '';\r\n            mUtil.css(the.iconCancel, 'visibility', 'hidden');\r\n            mUtil.removeClass(element, the.options.hasResultClass);\r\n\r\n            Plugin.closeDropdown();\r\n        },\r\n\r\n        /**\r\n         * Cancel handler\r\n         */\r\n        closeDropdown: function() {\r\n            the.dropdown.hide();\r\n        },\r\n\r\n        /**\r\n         * Show dropdown\r\n         */\r\n        showDropdown: function(e) {\r\n            if (the.dropdown.isShown() == false && the.input.value.length > the.options.minLength && the.processing == false) {\r\n                console.log('show!!!');\r\n                the.dropdown.show();\r\n                if (e) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }                \r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name) {\r\n            //mUtil.triggerCustomEvent(name);\r\n            for (i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            event.handler.call(this, the);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n\r\n            return the;\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * quicksearch off \r\n     */\r\n    the.search = function() {\r\n        return Plugin.handleSearch();\r\n    };\r\n\r\n    the.showResult = function(res) {\r\n        the.dropdown.setContent(res);\r\n        Plugin.showDropdown();\r\n\r\n        return the;\r\n    };\r\n\r\n    the.showError = function(text) {\r\n        var msg = the.options.templates.error.replace('{{message}}', text);\r\n        the.dropdown.setContent(msg);\r\n        Plugin.showDropdown();\r\n\r\n        return the;\r\n    };\r\n\r\n    /**\r\n     *  \r\n     */\r\n    the.showProgress = function() {\r\n        return Plugin.showProgress();\r\n    };\r\n\r\n    the.hideProgress = function() {\r\n        return Plugin.hideProgress();\r\n    };\r\n\r\n    /**\r\n     * quicksearch off \r\n     */\r\n    the.search = function() {\r\n        return Plugin.search();\r\n    };\r\n\r\n    /**\r\n     * Attach event\r\n     * @returns {mQuicksearch}\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Attach event that will be fired once\r\n     * @returns {mQuicksearch}\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    //== Construct plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    return the;\r\n};\nvar mScrollTop = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {\r\n        offset: 300,\r\n        speed: 600\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Run plugin\r\n         * @returns {mscrolltop}\r\n         */\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('scrolltop')) {\r\n                the = mUtil.data(element).get('scrolltop');\r\n            } else {\r\n                // reset scrolltop\r\n                Plugin.init(options);\r\n\r\n                // build scrolltop\r\n                Plugin.build();\r\n\r\n                mUtil.data(element).set('scrolltop', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subscrolltop click toggle\r\n         * @returns {mscrolltop}\r\n         */\r\n        init: function(options) {\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n        },\r\n\r\n        build: function() {\r\n            // handle window scroll\r\n            if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\r\n                window.addEventListener('touchend', function() {\r\n                    Plugin.handle();\r\n                });\r\n\r\n                window.addEventListener('touchcancel', function() {\r\n                    Plugin.handle();\r\n                });\r\n\r\n                window.addEventListener('touchleave', function() {\r\n                    Plugin.handle();\r\n                });\r\n            } else {\r\n                window.addEventListener('scroll', function() { \r\n                    Plugin.handle();\r\n                });\r\n            }\r\n\r\n            // handle button click \r\n            mUtil.addEvent(element, 'click', Plugin.scroll);\r\n        },\r\n\r\n        /**\r\n         * Handles scrolltop click scrollTop\r\n         */\r\n        handle: function() {\r\n            var pos = window.pageYOffset; // current vertical position\r\n            if (pos > the.options.offset) {\r\n                mUtil.addClass(body, 'm-scroll-top--shown');\r\n            } else {\r\n                mUtil.removeClass(body, 'm-scroll-top--shown');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles scrolltop click scrollTop\r\n         */\r\n        scroll: function(e) {\r\n            e.preventDefault();\r\n\r\n            mUtil.scrollTop(0, the.options.speed);\r\n        },\r\n\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name, args) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            event.handler.call(this, the, args);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the, args);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Get subscrolltop mode\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Set scrolltop content\r\n     * @returns {mscrolltop}\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    ///////////////////////////////\r\n    // ** Plugin Construction ** //\r\n    ///////////////////////////////\r\n\r\n    //== Run plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    //== Init done\r\n    init = true;\r\n\r\n    // Return plugin instance\r\n    return the;\r\n};\n// plugin setup\r\nvar mToggle = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');  \r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {\r\n        togglerState: '',\r\n        targetState: ''\r\n    };    \r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Construct\r\n         */\r\n\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('toggle')) {\r\n                the = mUtil.data(element).get('toggle');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                mUtil.data(element).set('toggle', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subtoggle click toggle\r\n         */\r\n        init: function(options) {\r\n            the.element = element;\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            the.target = mUtil.get(the.options.target);\r\n            the.targetState = the.options.targetState;\r\n            the.togglerState = the.options.togglerState;\r\n\r\n            the.state = mUtil.hasClasses(the.target, the.targetState) ? 'on' : 'off';\r\n        },\r\n\r\n        /**\r\n         * Setup toggle\r\n         */\r\n        build: function() {\r\n            mUtil.addEvent(element, 'mouseup', Plugin.toggle);\r\n        },\r\n        \r\n        /**\r\n         * Handles offcanvas click toggle\r\n         */\r\n        toggle: function() {\r\n            if (the.state == 'off') {\r\n                Plugin.toggleOn();\r\n            } else {\r\n                Plugin.toggleOff();\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles toggle click toggle\r\n         */\r\n        toggleOn: function() {\r\n            Plugin.eventTrigger('beforeOn');\r\n\r\n            mUtil.addClass(the.target, the.targetState);\r\n\r\n            if (the.togglerState) {\r\n                mUtil.addClass(element, the.togglerState);\r\n            }\r\n\r\n            the.state = 'on';\r\n\r\n            Plugin.eventTrigger('afterOn');\r\n\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles toggle click toggle\r\n         */\r\n        toggleOff: function() {\r\n            Plugin.eventTrigger('beforeOff');\r\n\r\n            mUtil.removeClass(the.target, the.targetState);\r\n\r\n            if (the.togglerState) {\r\n                mUtil.removeClass(element, the.togglerState);\r\n            }\r\n\r\n            the.state = 'off';\r\n\r\n            Plugin.eventTrigger('afterOff');\r\n\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name) {\r\n            for (i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;                            \r\n                            event.handler.call(this, the);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n\r\n            return the;\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Get toggle state \r\n     */\r\n    the.getState = function() {\r\n        return the.state;\r\n    };\r\n\r\n    /**\r\n     * Toggle \r\n     */\r\n    the.toggle = function() {\r\n        return Plugin.toggle();\r\n    };\r\n\r\n    /**\r\n     * Toggle on \r\n     */\r\n    the.toggleOn = function() {\r\n        return Plugin.toggleOn();\r\n    };\r\n\r\n    /**\r\n     * Toggle off \r\n     */\r\n    the.toggle = function() {\r\n        return Plugin.toggleOff();\r\n    };\r\n\r\n    /**\r\n     * Attach event\r\n     * @returns {mToggle}\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Attach event that will be fired once\r\n     * @returns {mToggle}\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    //== Construct plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    return the;\r\n};\n// plugin setup\r\nvar mWizard = function(elementId, options) {\r\n    //== Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    //== Get element object\r\n    var element = mUtil.get(elementId);\r\n    var body = mUtil.get('body');\r\n\r\n    if (!element) {\r\n        return; \r\n    }\r\n\r\n    //== Default options\r\n    var defaultOptions = {\r\n        startStep: 1,\r\n        manualStepForward: false\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Construct\r\n         */\r\n\r\n        construct: function(options) {\r\n            if (mUtil.data(element).has('wizard')) {\r\n                the = mUtil.data(element).get('wizard');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                mUtil.data(element).set('wizard', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Init wizard\r\n         */\r\n        init: function(options) {\r\n            the.element = element;\r\n            the.events = [];\r\n\r\n            // merge default and user defined options\r\n            the.options = mUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            //== Elements\r\n            the.steps = mUtil.findAll(element, '.m-wizard__step');\r\n\r\n            the.progress = mUtil.find(element, '.m-wizard__progress .progress-bar');\r\n            the.btnSubmit = mUtil.find(element, '[data-wizard-action=\"submit\"]');\r\n            the.btnNext = mUtil.find(element, '[data-wizard-action=\"next\"]');\r\n            the.btnPrev = mUtil.find(element, '[data-wizard-action=\"prev\"]');\r\n            the.btnLast = mUtil.find(element, '[data-wizard-action=\"last\"]');\r\n            the.btnFirst = mUtil.find(element, '[data-wizard-action=\"first\"]');\r\n\r\n            //== Variables\r\n            the.events = [];\r\n            the.currentStep = 1;\r\n            the.stopped = false;\r\n            the.totalSteps = the.steps.length;\r\n\r\n            //== Init current step\r\n            if (the.options.startStep > 1) {\r\n                Plugin.goTo(the.options.startStep);\r\n            }\r\n\r\n            //== Init UI\r\n            Plugin.updateUI();\r\n        },\r\n\r\n        /**\r\n         * Build Form Wizard\r\n         */\r\n        build: function() {\r\n            //== Next button event handler\r\n            mUtil.addEvent(the.btnNext, 'click', function(e) {\r\n                e.preventDefault();\r\n                Plugin.goNext();\r\n            });\r\n\r\n            //== Prev button event handler\r\n            mUtil.addEvent(the.btnPrev, 'click', function(e) {\r\n                e.preventDefault();\r\n                Plugin.goPrev();\r\n            });\r\n\r\n            //== First button event handler\r\n            mUtil.addEvent(the.btnFirst, 'click', function(e) {\r\n                e.preventDefault();\r\n                Plugin.goFirst();\r\n            });\r\n\r\n            //== Last button event handler\r\n            mUtil.addEvent(the.btnLast, 'click', function(e) {\r\n                e.preventDefault();\r\n                Plugin.goLast();\r\n            });\r\n\r\n            mUtil.on(element, '.m-wizard__step a.m-wizard__step-number', 'click', function() {\r\n                var step = this.closest('.m-wizard__step');\r\n                var steps = mUtil.parents(this, '.m-wizard__steps')\r\n                var find = mUtil.findAll(steps, '.m-wizard__step');\r\n                var num;\r\n\r\n                for (var i = 0, j = find.length; i < j; i++) {\r\n                    if (step === find[i]) {\r\n                        num = (i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (num) {\r\n                    if (the.options.manualStepForward === false) {\r\n                        if (num < the.currentStep) {\r\n                            Plugin.goTo(num);\r\n                        }\r\n                    } else {\r\n                        Plugin.goTo(num);\r\n                    }                    \r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handles wizard click wizard\r\n         */\r\n        goTo: function(number) {\r\n            //== Skip if this step is already shown\r\n            if (number === the.currentStep || number > the.totalSteps || number < 0) {\r\n                return;\r\n            }\r\n\r\n            //== Validate step number\r\n            if (number) {\r\n                number = parseInt(number);\r\n            } else {\r\n                number = Plugin.getNextStep();\r\n            }\r\n\r\n            //== Before next and prev events\r\n            var callback;\r\n\r\n            if (number > the.currentStep) {\r\n                callback = Plugin.eventTrigger('beforeNext');\r\n            } else {\r\n                callback = Plugin.eventTrigger('beforePrev');\r\n            }\r\n            \r\n            //== Skip if stopped\r\n            if (the.stopped === true) {\r\n                the.stopped = false;\r\n                return;\r\n            }\r\n\r\n            //== Continue if no exit\r\n            if (callback !== false) {\r\n                //== Before change\r\n                Plugin.eventTrigger('beforeChange');\r\n\r\n                //== Set current step \r\n                the.currentStep = number;\r\n\r\n                //== Update UI\r\n                Plugin.updateUI();\r\n\r\n                //== Trigger change event\r\n                Plugin.eventTrigger('change');\r\n            }\r\n\r\n            //== After next and prev events\r\n            if (number > the.startStep) {\r\n                Plugin.eventTrigger('afterNext');\r\n            } else {\r\n                Plugin.eventTrigger('afterPrev');\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Set step class\r\n         */\r\n        setStepClass: function() {\r\n            if (Plugin.isLastStep()) {\r\n                mUtil.addClass(element, 'm-wizard--step-last');\r\n            } else {\r\n                mUtil.removeClass(element, 'm-wizard--step-last');\r\n            }\r\n\r\n            if (Plugin.isFirstStep()) {\r\n                mUtil.addClass(element, 'm-wizard--step-first');\r\n            } else {\r\n                mUtil.removeClass(element, 'm-wizard--step-first');\r\n            }\r\n\r\n            if (Plugin.isBetweenStep()) {\r\n                mUtil.addClass(element, 'm-wizard--step-between');\r\n            } else {\r\n                mUtil.removeClass(element, 'm-wizard--step-between');\r\n            }\r\n        },\r\n\r\n        updateUI: function(argument) {\r\n            //== Update progress bar\r\n            Plugin.updateProgress();\r\n\r\n            //== Show current target content\r\n            Plugin.handleTarget();\r\n\r\n            //== Set classes\r\n            Plugin.setStepClass();\r\n\r\n            //== Apply nav step classes\r\n            for (var i = 0, j = the.steps.length; i < j; i++) {\r\n                mUtil.removeClass(the.steps[i], 'm-wizard__step--current m-wizard__step--done');\r\n            }\r\n\r\n            for (var i = 1; i < the.currentStep; i++) {\r\n                mUtil.addClass(the.steps[i - 1], 'm-wizard__step--done');\r\n            }\r\n            \r\n            mUtil.addClass(the.steps[the.currentStep - 1], 'm-wizard__step--current');\r\n        },\r\n\r\n        /**\r\n         * Cancel\r\n         */\r\n        stop: function() {\r\n            the.stopped = true;\r\n        },\r\n\r\n        /**\r\n         * Resume\r\n         */\r\n        start: function() {\r\n            the.stopped = false;\r\n        },\r\n\r\n        /**\r\n         * Check last step\r\n         */\r\n        isLastStep: function() {\r\n            return the.currentStep === the.totalSteps;\r\n        },\r\n\r\n        /**\r\n         * Check first step\r\n         */\r\n        isFirstStep: function() {\r\n            return the.currentStep === 1;\r\n        },\r\n\r\n        /**\r\n         * Check between step\r\n         */\r\n        isBetweenStep: function() {\r\n            return Plugin.isLastStep() === false && Plugin.isFirstStep() === false;\r\n        },\r\n\r\n        /**\r\n         * Go to the next step\r\n         */\r\n        goNext: function() {\r\n            return Plugin.goTo(Plugin.getNextStep());\r\n        },\r\n\r\n        /**\r\n         * Go to the prev step\r\n         */\r\n        goPrev: function() {\r\n            return Plugin.goTo(Plugin.getPrevStep());\r\n        },\r\n\r\n        /**\r\n         * Go to the last step\r\n         */\r\n        goLast: function() {\r\n            return Plugin.goTo(the.totalSteps);\r\n        },\r\n\r\n        /**\r\n         * Go to the first step\r\n         */\r\n        goFirst: function() {\r\n            return Plugin.goTo(1);\r\n        },\r\n\r\n        /**\r\n         * Set progress\r\n         */\r\n        updateProgress: function() {\r\n            //== Calculate progress position\r\n            if (!the.progress) {\r\n                return;\r\n            }\r\n\r\n            //== Update progress\r\n            if (mUtil.hasClass(element, 'm-wizard--1')) {\r\n                var width = 100 * ((the.currentStep) / (the.totalSteps));\r\n                var number = mUtil.find(element, '.m-wizard__step-number');\r\n                var offset = parseInt(mUtil.css(number, 'width'));\r\n                mUtil.css(the.progress, 'width', 'calc(' + width + '% + ' + (offset / 2) + 'px)');\r\n            } else if (mUtil.hasClass(element, 'm-wizard--2')) {\r\n                if (the.currentStep === 1) {\r\n                    //return;\r\n                }\r\n\r\n                var progress = (the.currentStep - 1) * (100 * (1 / (the.totalSteps - 1)));\r\n\r\n                if (mUtil.isInResponsiveRange('minimal-desktop-and-below')) {\r\n                    mUtil.css(the.progress, 'height', progress + '%');\r\n                } else {\r\n                    mUtil.css(the.progress, 'width', progress + '%');\r\n                }\r\n            } else {\r\n                var width = 100 * ((the.currentStep) / (the.totalSteps));\r\n                mUtil.css(the.progress, 'width', width + '%');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show/hide target content\r\n         */\r\n        handleTarget: function() {\r\n            var step = the.steps[the.currentStep - 1];\r\n            var target = mUtil.get(mUtil.attr(step, 'm-wizard-target'));\r\n            var current = mUtil.find(element, '.m-wizard__form-step--current');\r\n            \r\n            mUtil.removeClass(current, 'm-wizard__form-step--current');\r\n            mUtil.addClass(target, 'm-wizard__form-step--current');\r\n        },\r\n\r\n        /**\r\n         * Get next step\r\n         */\r\n        getNextStep: function() {\r\n            if (the.totalSteps >= (the.currentStep + 1)) {\r\n                return the.currentStep + 1;\r\n            } else {\r\n                return the.totalSteps;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get prev step\r\n         */\r\n        getPrevStep: function() {\r\n            if ((the.currentStep - 1) >= 1) {\r\n                return the.currentStep - 1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name) {\r\n            //mUtil.triggerCustomEvent(name);\r\n            for (i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            event.handler.call(this, the);\r\n                        }\r\n                    } else {\r\n                        event.handler.call(this, the);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n\r\n            return the;\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options \r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Go to the next step \r\n     */\r\n    the.goNext = function() {\r\n        return Plugin.goNext();\r\n    };\r\n\r\n    /**\r\n     * Go to the prev step \r\n     */\r\n    the.goPrev = function() {\r\n        return Plugin.goPrev();\r\n    };\r\n\r\n    /**\r\n     * Go to the last step \r\n     */\r\n    the.goLast = function() {\r\n        return Plugin.goLast();\r\n    };\r\n\r\n    /**\r\n     * Cancel step \r\n     */\r\n    the.stop = function() {\r\n        return Plugin.stop();\r\n    };\r\n\r\n    /**\r\n     * Resume step \r\n     */\r\n    the.start = function() {\r\n        return Plugin.start();\r\n    };\r\n\r\n    /**\r\n     * Go to the first step \r\n     */\r\n    the.goFirst = function() {\r\n        return Plugin.goFirst();\r\n    };\r\n\r\n    /**\r\n     * Go to a step\r\n     */\r\n    the.goTo = function(number) {\r\n        return Plugin.goTo(number);\r\n    };\r\n\r\n    /**\r\n     * Get current step number \r\n     */\r\n    the.getStep = function() {\r\n        return the.currentStep;\r\n    };\r\n\r\n    /**\r\n     * Check last step \r\n     */\r\n    the.isLastStep = function() {\r\n        return Plugin.isLastStep();\r\n    };\r\n\r\n    /**\r\n     * Check first step \r\n     */\r\n    the.isFirstStep = function() {\r\n        return Plugin.isFirstStep();\r\n    };\r\n    \r\n    /**\r\n     * Attach event\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Attach event that will be fired once\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    //== Construct plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    return the;\r\n};\n(function ($) {\r\n\r\n\t$.fn.mDatatable = $.fn.mDatatable || {};\r\n\r\n\t/**\r\n\t * @param datatable Main datatable plugin instance\r\n\t * @param options Extension options\r\n\t * @returns {*}\r\n\t */\r\n\t$.fn.mDatatable.checkbox = function (datatable, options) {\r\n\r\n\t\tvar Extension = {\r\n\t\t\tselectedAllRows: false,\r\n\t\t\tselectedRows: [],\r\n\t\t\tunselectedRows: [],\r\n\r\n\t\t\tinit: function () {\r\n\t\t\t\tif (Extension.selectorEnabled()) {\r\n\t\t\t\t\t// reset\r\n\t\t\t\t\tdatatable.setDataSourceParam(options.vars.selectedAllRows, false);\r\n\t\t\t\t\tdatatable.stateRemove('checkbox');\r\n\r\n\t\t\t\t\t// requestIds is not null\r\n\t\t\t\t\tif (options.vars.requestIds) {\r\n\t\t\t\t\t\t// request ids in response\r\n\t\t\t\t\t\tdatatable.setDataSourceParam(options.vars.requestIds, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// remove selected checkbox on datatable reload\r\n\t\t\t\t\t$(datatable).on('m-datatable--on-reloaded', function () {\r\n\t\t\t\t\t\tdatatable.stateRemove('checkbox');\r\n\t\t\t\t\t\tdatatable.setDataSourceParam(options.vars.selectedAllRows, false);\r\n\t\t\t\t\t\tExtension.selectedAllRows = false;\r\n\t\t\t\t\t\tExtension.selectedRows = [];\r\n\t\t\t\t\t\tExtension.unselectedRows = [];\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// select all on extension init\r\n\t\t\t\t\tExtension.selectedAllRows = datatable.getDataSourceParam(options.vars.selectedAllRows);\r\n\r\n\t\t\t\t\t$(datatable).on('m-datatable--on-layout-updated', function (e, args) {\r\n\t\t\t\t\t\tif (args.table != $(datatable.wrap).attr('id')) return;\r\n\t\t\t\t\t\tdatatable.ready(function () {\r\n\t\t\t\t\t\t\tExtension.initVars();\r\n\t\t\t\t\t\t\tExtension.initEvent();\r\n\t\t\t\t\t\t\tExtension.initSelect();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t$(datatable).on('m-datatable--on-check', function (e, ids) {\r\n\t\t\t\t\t\tids.forEach(function (id) {\r\n\t\t\t\t\t\t\tExtension.selectedRows.push(id);\r\n\t\t\t\t\t\t\t// // remove from unselected rows\r\n\t\t\t\t\t\t\tExtension.unselectedRows = Extension.remove(Extension.unselectedRows, id);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar storage = {};\r\n\t\t\t\t\t\tstorage['selectedRows'] = $.unique(Extension.selectedRows);\r\n\t\t\t\t\t\tstorage['unselectedRows'] = $.unique(Extension.unselectedRows);\r\n\t\t\t\t\t\tdatatable.stateKeep('checkbox', storage);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$(datatable).on('m-datatable--on-uncheck', function (e, ids) {\r\n\t\t\t\t\t\tids.forEach(function (id) {\r\n\t\t\t\t\t\t\tExtension.unselectedRows.push(id);\r\n\t\t\t\t\t\t\t// // remove from selected rows\r\n\t\t\t\t\t\t\tExtension.selectedRows = Extension.remove(Extension.selectedRows, id);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar storage = {};\r\n\t\t\t\t\t\tstorage['selectedRows'] = $.unique(Extension.selectedRows);\r\n\t\t\t\t\t\tstorage['unselectedRows'] = $.unique(Extension.unselectedRows);\r\n\t\t\t\t\t\tdatatable.stateKeep('checkbox', storage);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Init checkbox clicks event\r\n\t\t\t */\r\n\t\t\tinitEvent: function () {\r\n\t\t\t\t// select all checkbox click\r\n\t\t\t\t$(datatable.tableHead).find('.m-checkbox--all > [type=\"checkbox\"]').click(function (e) {\r\n\t\t\t\t\t// clear selected and unselected rows\r\n\t\t\t\t\tExtension.selectedRows = Extension.unselectedRows = [];\r\n\t\t\t\t\tdatatable.stateRemove('checkbox');\r\n\r\n\t\t\t\t\t// select all rows\r\n\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\tExtension.selectedAllRows = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tExtension.selectedAllRows = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// local select all current page rows\r\n\t\t\t\t\tif (!options.vars.requestIds) {\r\n\t\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\t\tExtension.selectedRows = $.makeArray($(datatable.tableBody).find('.m-checkbox--single > [type=\"checkbox\"]').map(function (i, chk) {\r\n\t\t\t\t\t\t\t\treturn $(chk).val();\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar storage = {};\r\n\t\t\t\t\t\tstorage['selectedRows'] = $.unique(Extension.selectedRows);\r\n\t\t\t\t\t\tdatatable.stateKeep('checkbox', storage);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// keep selectedAllRows in datasource params\r\n\t\t\t\t\tdatatable.setDataSourceParam(options.vars.selectedAllRows, Extension.selectedAllRows);\r\n\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-click-checkbox', [$(this)]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// single row checkbox click\r\n\t\t\t\t$(datatable.tableBody).find('.m-checkbox--single > [type=\"checkbox\"]').click(function (e) {\r\n\t\t\t\t\tvar id = $(this).val();\r\n\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\tExtension.selectedRows.push(id);\r\n\t\t\t\t\t\t// remove from unselected rows\r\n\t\t\t\t\t\tExtension.unselectedRows = Extension.remove(Extension.unselectedRows, id);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tExtension.unselectedRows.push(id);\r\n\t\t\t\t\t\t// remove from selected rows\r\n\t\t\t\t\t\tExtension.selectedRows = Extension.remove(Extension.selectedRows, id);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// local checkbox header check\r\n\t\t\t\t\tif (!options.vars.requestIds && Extension.selectedRows.length < 1) {\r\n\t\t\t\t\t\t// remove select all checkbox, if there is no checked checkbox left\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-checkbox--all > [type=\"checkbox\"]').prop('checked', false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar storage = {};\r\n\t\t\t\t\tstorage['selectedRows'] = $.unique(Extension.selectedRows);\r\n\t\t\t\t\tstorage['unselectedRows'] = $.unique(Extension.unselectedRows);\r\n\t\t\t\t\tdatatable.stateKeep('checkbox', storage);\r\n\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-click-checkbox', [$(this)]);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tinitSelect: function () {\r\n\t\t\t\t// selected all rows from server\r\n\t\t\t\tif (Extension.selectedAllRows && options.vars.requestIds) {\r\n\t\t\t\t\tif (!datatable.hasClass('m-datatable--error')) {\r\n\t\t\t\t\t\t// set header select all checkbox checked\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-checkbox--all > [type=\"checkbox\"]').prop('checked', true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// set all checkbox in table body\r\n\t\t\t\t\tdatatable.setActiveAll(true);\r\n\r\n\t\t\t\t\t// remove unselected rows\r\n\t\t\t\t\tExtension.unselectedRows.forEach(function (id) {\r\n\t\t\t\t\t\tdatatable.setInactive(id);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// single check for server and local\r\n\t\t\t\t\tExtension.selectedRows.forEach(function (id) {\r\n\t\t\t\t\t\tdatatable.setActive(id);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// local checkbox; check if all checkboxes of currect page are checked\r\n\t\t\t\t\tif (!datatable.hasClass('m-datatable--error') && $(datatable.tableBody).find('.m-checkbox--single > [type=\"checkbox\"]').not(':checked').length < 1) {\r\n\t\t\t\t\t\t// set header select all checkbox checked\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-checkbox--all > [type=\"checkbox\"]').prop('checked', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Check if selector is enabled from options\r\n\t\t\t */\r\n\t\t\tselectorEnabled: function () {\r\n\t\t\t\treturn $.grep(datatable.options.columns, function (n, i) {\r\n\t\t\t\t\treturn n.selector || false;\r\n\t\t\t\t})[0];\r\n\t\t\t},\r\n\r\n\t\t\tinitVars: function () {\r\n\t\t\t\t// get single select/unselect from localstorage\r\n\t\t\t\tvar storage = datatable.stateGet('checkbox');\r\n\t\t\t\tif (typeof storage !== 'undefined') {\r\n\t\t\t\t\tExtension.selectedRows = storage['selectedRows'] || [];\r\n\t\t\t\t\tExtension.unselectedRows = storage['unselectedRows'] || [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetSelectedId: function (path) {\r\n\t\t\t\tExtension.initVars();\r\n\r\n\t\t\t\t// server selected all rows\r\n\t\t\t\tif (Extension.selectedAllRows && options.vars.requestIds) {\r\n\t\t\t\t\tif (typeof path === 'undefined') path = options.vars.rowIds;\r\n\r\n\t\t\t\t\t// if selected all rows, return id from response meta\r\n\t\t\t\t\tvar selectedAllRows = datatable.getObject(path, datatable.lastResponse) || [];\r\n\r\n\t\t\t\t\tif (selectedAllRows.length > 0) {\r\n\t\t\t\t\t\t// remove single unselected rows from selectedAllRows ids from server response emta\r\n\t\t\t\t\t\tExtension.unselectedRows.forEach(function (id) {\r\n\t\t\t\t\t\t\tselectedAllRows = Extension.remove(selectedAllRows, parseInt(id));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn selectedAllRows;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// else return single checked selected rows\r\n\t\t\t\treturn Extension.selectedRows;\r\n\t\t\t},\r\n\r\n\t\t\tremove: function (array, element) {\r\n\t\t\t\treturn array.filter(function (e) {\r\n\t\t\t\t\treturn e !== element;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\t// make the extension accessible from datatable init\r\n\t\tdatatable.checkbox = function () {\r\n\t\t\treturn Extension;\r\n\t\t};\r\n\r\n\t\tif (typeof options === 'object') {\r\n\t\t\toptions = $.extend(true, {}, $.fn.mDatatable.checkbox.default, options);\r\n\t\t\tExtension.init.apply(this, [options]);\r\n\t\t}\r\n\r\n\t\treturn datatable;\r\n\t};\r\n\r\n\t$.fn.mDatatable.checkbox.default = {\r\n\t\tvars: {\r\n\t\t\t// select all rows flag to be sent to the server\r\n\t\t\tselectedAllRows: 'selectedAllRows',\r\n\t\t\t// request id parameter's name\r\n\t\t\trequestIds: 'requestIds',\r\n\t\t\t// response path to all rows id\r\n\t\t\trowIds: 'meta.rowIds',\r\n\t\t},\r\n\t};\r\n\r\n}(jQuery));\nvar mLayout = function() {\r\n    var header;\r\n    var horMenu;\r\n    var asideMenu;\r\n    var asideMenuOffcanvas;\r\n    var horMenuOffcanvas;\r\n    var asideLeftToggle;\r\n    var asideLeftHide;\r\n    var scrollTop;\r\n    var quicksearch;\r\n    var mainPortlet;\r\n\r\n    //== Header\r\n    var initStickyHeader = function() {\r\n        var tmp;\r\n        var headerEl = mUtil.get('m_header');\r\n        var options = {\r\n            offset: {},\r\n            minimize: {}\r\n        };\r\n\r\n        if (mUtil.attr(headerEl, 'm-minimize-mobile') == 'hide') {\r\n            options.minimize.mobile = {};\r\n            options.minimize.mobile.on = 'm-header--hide';\r\n            options.minimize.mobile.off = 'm-header--show';\r\n        } else {\r\n            options.minimize.mobile = false;\r\n        }\r\n\r\n        if (mUtil.attr(headerEl, 'm-minimize') == 'hide') {\r\n            options.minimize.desktop = {};\r\n            options.minimize.desktop.on = 'm-header--hide';\r\n            options.minimize.desktop.off = 'm-header--show';\r\n        } else {\r\n            options.minimize.desktop = false;\r\n        }\r\n\r\n        if (tmp = mUtil.attr(headerEl, 'm-minimize-offset')) {\r\n            options.offset.desktop = tmp;\r\n        }\r\n\r\n        if (tmp = mUtil.attr(headerEl, 'm-minimize-mobile-offset')) {\r\n            options.offset.mobile = tmp;\r\n        }\r\n\r\n        header = new mHeader('m_header', options);\r\n    }\r\n\r\n    //== Hor menu\r\n    var initHorMenu = function() {\r\n        // init aside left offcanvas\r\n        horMenuOffcanvas = new mOffcanvas('m_header_menu', {\r\n            overlay: true,\r\n            baseClass: 'm-aside-header-menu-mobile',\r\n            closeBy: 'm_aside_header_menu_mobile_close_btn',\r\n            toggleBy: {\r\n                target: 'm_aside_header_menu_mobile_toggle',\r\n                state: 'm-brand__toggler--active'\r\n            }\r\n        });\r\n\r\n        horMenu = new mMenu('m_header_menu', {\r\n            submenu: {\r\n                desktop: 'dropdown',\r\n                tablet: 'accordion',\r\n                mobile: 'accordion'\r\n            },\r\n            accordion: {\r\n                slideSpeed: 200, // accordion toggle slide speed in milliseconds\r\n                expandAll: false // allow having multiple expanded accordions in the menu\r\n            }\r\n        });\r\n    }\r\n\r\n    //== Aside menu\r\n    var initLeftAsideMenu = function() {\r\n        //== Init aside menu\r\n        var menu = mUtil.get('m_ver_menu');\r\n        var menuDesktopMode = (mUtil.attr(menu, 'm-menu-dropdown') === '1' ? 'dropdown' : 'accordion');\r\n\r\n        var scroll;\r\n        if (mUtil.attr(menu, 'm-menu-scrollable') === '1') {\r\n            scroll = {\r\n                height: function() {\r\n                    return mUtil.getViewPort().height - parseInt(mUtil.css('m_header', 'height'));\r\n                }\r\n            };\r\n        }\r\n\r\n        asideMenu = new mMenu('m_ver_menu', {\r\n            // vertical scroll\r\n            scroll: scroll,\r\n\r\n            // submenu setup\r\n            submenu: {\r\n                desktop: {\r\n                    // by default the menu mode set to accordion in desktop mode\r\n                    default: menuDesktopMode,\r\n                    // whenever body has this class switch the menu mode to dropdown\r\n                    state: {\r\n                        body: 'm-aside-left--minimize',\r\n                        mode: 'dropdown'\r\n                    }\r\n                },\r\n                tablet: 'accordion', // menu set to accordion in tablet mode\r\n                mobile: 'accordion' // menu set to accordion in mobile mode\r\n            },\r\n\r\n            //accordion setup\r\n            accordion: {\r\n                autoScroll: false, // enable auto scrolling(focus) to the clicked menu item\r\n                expandAll: false // allow having multiple expanded accordions in the menu\r\n            }\r\n        });\r\n    }\r\n\r\n    //== Aside\r\n    var initLeftAside = function() {\r\n        // init aside left offcanvas\r\n        var body = mUtil.get('body');\r\n        var asideLeft = mUtil.get('m_aside_left');\r\n        var asideOffcanvasClass = mUtil.hasClass(asideLeft, 'm-aside-left--offcanvas-default') ? 'm-aside-left--offcanvas-default' : 'm-aside-left';\r\n\r\n        asideMenuOffcanvas = new mOffcanvas('m_aside_left', {\r\n            baseClass: asideOffcanvasClass,\r\n            overlay: true,\r\n            closeBy: 'm_aside_left_close_btn',\r\n            toggleBy: {\r\n                target: 'm_aside_left_offcanvas_toggle',\r\n                state: 'm-brand__toggler--active'\r\n            }\r\n        });\r\n\r\n        //== Handle minimzied aside hover\r\n        if (mUtil.hasClass(body, 'm-aside-left--fixed')) {\r\n            var insideTm;\r\n            var outsideTm;\r\n\r\n            mUtil.addEvent(asideLeft, 'mouseenter', function() {\r\n                if (outsideTm) {\r\n                    clearTimeout(outsideTm);\r\n                    outsideTm = null;\r\n                }\r\n\r\n                insideTm = setTimeout(function() {\r\n                    if (mUtil.hasClass(body, 'm-aside-left--minimize') && mUtil.isInResponsiveRange('desktop')) {\r\n                        mUtil.removeClass(body, 'm-aside-left--minimize');\r\n                        mUtil.addClass(body, 'm-aside-left--minimize-hover');\r\n                        asideMenu.scrollerUpdate();\r\n                        asideMenu.scrollerTop();\r\n                    }\r\n                }, 300);\r\n            });\r\n\r\n            mUtil.addEvent(asideLeft, 'mouseleave', function() {\r\n                if (insideTm) {\r\n                    clearTimeout(insideTm);\r\n                    insideTm = null;\r\n                }\r\n\r\n                outsideTm = setTimeout(function() {\r\n                    if (mUtil.hasClass(body, 'm-aside-left--minimize-hover') && mUtil.isInResponsiveRange('desktop')) {\r\n                        mUtil.removeClass(body, 'm-aside-left--minimize-hover');\r\n                        mUtil.addClass(body, 'm-aside-left--minimize');\r\n                        asideMenu.scrollerUpdate();\r\n                        asideMenu.scrollerTop();\r\n                    }\r\n                }, 500);\r\n            });\r\n        }\r\n    }\r\n\r\n    //== Sidebar toggle\r\n    var initLeftAsideToggle = function() {\r\n        if ($('#m_aside_left_minimize_toggle').length === 0) {\r\n            return;\r\n        }\r\n\r\n        asideLeftToggle = new mToggle('m_aside_left_minimize_toggle', {\r\n            target: 'body',\r\n            targetState: 'm-brand--minimize m-aside-left--minimize',\r\n            togglerState: 'm-brand__toggler--active'\r\n        }); \r\n\r\n        asideLeftToggle.on('toggle', function(toggle) {     \r\n            mainPortlet.updateSticky();       \r\n            \r\n            horMenu.pauseDropdownHover(800);\r\n            asideMenu.pauseDropdownHover(800);\r\n\r\n            //== Remember state in cookie\r\n            Cookies.set('sidebar_toggle_state', toggle.getState());\r\n            // to set default minimized left aside use this cookie value in your \r\n            // server side code and add \"m-brand--minimize m-aside-left--minimize\" classes to \r\n            // the body tag in order to initialize the minimized left aside mode during page loading.\r\n        });\r\n    }\r\n\r\n    //== Sidebar hide\r\n    var initLeftAsideHide = function() {\r\n        if ($('#m_aside_left_hide_toggle').length === 0 ) {\r\n            return;\r\n        }\r\n\r\n        initLeftAsideHide = new mToggle('m_aside_left_hide_toggle', {\r\n            target: 'body',\r\n            targetState: 'm-aside-left--hide',\r\n            togglerState: 'm-brand__toggler--active'\r\n        });\r\n\r\n        initLeftAsideHide.on('toggle', function(toggle) {\r\n            horMenu.pauseDropdownHover(800);\r\n            asideMenu.pauseDropdownHover(800);\r\n\r\n            //== Remember state in cookie\r\n            Cookies.set('sidebar_hide_state', toggle.getState());\r\n            // to set default minimized left aside use this cookie value in your \r\n            // server side code and add \"m-brand--minimize m-aside-left--minimize\" classes to \r\n            // the body tag in order to initialize the minimized left aside mode during page loading.\r\n        });\r\n    }\r\n\r\n    //== Topbar\r\n    var initTopbar = function() {\r\n        $('#m_aside_header_topbar_mobile_toggle').click(function() {\r\n            $('body').toggleClass('m-topbar--on');\r\n        });\r\n\r\n        // Animated Notification Icon \r\n        /*\r\n        setInterval(function() {\r\n            $('#m_topbar_notification_icon .m-nav__link-icon').addClass('m-animate-shake');\r\n            $('#m_topbar_notification_icon .m-nav__link-badge').addClass('m-animate-blink');\r\n        }, 3000);\r\n\r\n        setInterval(function() {\r\n            $('#m_topbar_notification_icon .m-nav__link-icon').removeClass('m-animate-shake');\r\n            $('#m_topbar_notification_icon .m-nav__link-badge').removeClass('m-animate-blink');\r\n        }, 6000);\r\n        */\r\n    }\r\n\r\n    //== Quicksearch\r\n    var initQuicksearch = function() {\r\n        if ($('#m_quicksearch').length === 0) {\r\n            return;\r\n        }\r\n\r\n        quicksearch = new mQuicksearch('m_quicksearch', {\r\n            mode: mUtil.attr('m_quicksearch', 'm-quicksearch-mode'), // quick search type\r\n            minLength: 1\r\n        });\r\n\r\n        //<div class=\"m-search-results m-search-results--skin-light\"><span class=\"m-search-result__message\">Something went wrong</div></div>\r\n\r\n        quicksearch.on('search', function(the) {\r\n            the.showProgress();\r\n\r\n            $.ajax({\r\n                url: 'inc/api/quick_search.php',\r\n                data: {\r\n                    query: the.query\r\n                },\r\n                dataType: 'html',\r\n                success: function(res) {\r\n                    the.hideProgress();\r\n                    the.showResult(res);\r\n                },\r\n                error: function(res) {\r\n                    the.hideProgress();\r\n                    the.showError('Connection error. Pleae try again later.');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    //== Scrolltop\r\n    var initScrollTop = function() {\r\n        var scrollTop = new mScrollTop('m_scroll_top', {\r\n            offset: 300,\r\n            speed: 600\r\n        });\r\n    }\r\n\r\n    //== Main portlet(sticky portlet)\r\n    var createMainPortlet = function() {\r\n        return new mPortlet('main_portlet', {\r\n            sticky: {\r\n                offset: parseInt(mUtil.css( mUtil.get('m_header'), 'height')),\r\n                zIndex: 90,\r\n                position: {\r\n                    top: function() {\r\n                        return parseInt(mUtil.css( mUtil.get('m_header'), 'height') );\r\n                    },\r\n                    left: function() {\r\n                        var left = parseInt(mUtil.css( mUtil.getByClass('m-content'), 'paddingLeft'));\r\n                        \r\n                        if (mUtil.isInResponsiveRange('desktop')) {\r\n                            //left += parseInt(mUtil.css(mUtil.get('m_aside_left'), 'width') );\r\n                            if (mUtil.hasClass(mUtil.get('body'), 'm-aside-left--minimize')) {\r\n                                left += 78; // need to use hardcoded width of the minimize aside\r\n                            } else {\r\n                                left += 255; // need to use hardcoded width of the aside\r\n                            }\r\n                        } \r\n\r\n                        return left; \r\n                    },\r\n                    right: function() {\r\n                        return parseInt(mUtil.css( mUtil.getByClass('m-content'), 'paddingRight') );\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return {\r\n        init: function() {\r\n            this.initHeader();\r\n            this.initAside();\r\n            this.initMainPortlet();\r\n        },\r\n\r\n        initMainPortlet: function() {\r\n            if (!mUtil.get('main_portlet')) {\r\n                return;\r\n            }\r\n            \r\n            mainPortlet = createMainPortlet();\r\n            mainPortlet.initSticky();\r\n            \r\n            mUtil.addResizeHandler(function(){\r\n                mainPortlet.updateSticky();\r\n            });\r\n        },\r\n\r\n        resetMainPortlet: function() {\r\n            mainPortlet.destroySticky();\r\n            mainPortlet = createMainPortlet();\r\n            mainPortlet.initSticky();\r\n        },\r\n\r\n        initHeader: function() {\r\n            initStickyHeader();\r\n            initHorMenu();\r\n            initTopbar();\r\n            initQuicksearch();\r\n            initScrollTop();\r\n        },\r\n\r\n        initAside: function() { \r\n            initLeftAside();\r\n            initLeftAsideMenu();\r\n            initLeftAsideToggle();\r\n            initLeftAsideHide();\r\n\r\n            this.onLeftSidebarToggle(function(e) {\r\n                //== Update sticky portlet\r\n                if (mainPortlet) {\r\n                    mainPortlet.updateSticky();\r\n                }\r\n\r\n                //== Reload datatable\r\n                var datatables = $('.m-datatable');\r\n                if (datatables) {\r\n                    datatables.each(function() {\r\n                        $(this).mDatatable('redraw');\r\n                    });\r\n                }                \r\n            });\r\n        },\r\n\r\n        getAsideMenu: function() {\r\n            return asideMenu;\r\n        },\r\n\r\n        onLeftSidebarToggle: function(handler) {\r\n            if (asideLeftToggle) {\r\n                asideLeftToggle.on('toggle', handler);\r\n            }\r\n        },\r\n\r\n        closeMobileAsideMenuOffcanvas: function() {\r\n            if (mUtil.isMobileDevice()) {\r\n                asideMenuOffcanvas.hide();\r\n            }\r\n        },\r\n\r\n        closeMobileHorMenuOffcanvas: function() {\r\n            if (mUtil.isMobileDevice()) {\r\n                horMenuOffcanvas.hide();\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\n$(document).ready(function() {\r\n    if (mUtil.isAngularVersion() === false) {\r\n        mLayout.init();\r\n    }\r\n});\n\nvar mQuickSidebar = function() {\r\n    var topbarAside = $('#m_quick_sidebar');\r\n    var topbarAsideTabs = $('#m_quick_sidebar_tabs');    \r\n    var topbarAsideContent = topbarAside.find('.m-quick-sidebar__content');\r\n\r\n    var initMessages = function() {\r\n        var messages = mUtil.find( mUtil.get('m_quick_sidebar_tabs_messenger'),  '.m-messenger__messages'); \r\n        var form = $('#m_quick_sidebar_tabs_messenger .m-messenger__form');\r\n\r\n        mUtil.scrollerInit(messages, {\r\n            disableForMobile: true, \r\n            resetHeightOnDestroy: false, \r\n            handleWindowResize: true, \r\n            height: function() {\r\n                var height = topbarAside.outerHeight(true) - \r\n                    topbarAsideTabs.outerHeight(true) - \r\n                    form.outerHeight(true) - 120;\r\n\r\n                return height;                    \r\n            }\r\n        });\r\n    }\r\n\r\n    var initSettings = function() { \r\n        var settings = mUtil.find( mUtil.get('m_quick_sidebar_tabs_settings'),  '.m-list-settings'); \r\n\r\n        if (!settings) {\r\n            return;\r\n        }\r\n\r\n        mUtil.scrollerInit(settings, {\r\n            disableForMobile: true, \r\n            resetHeightOnDestroy: false, \r\n            handleWindowResize: true, \r\n            height: function() {\r\n                return mUtil.getViewPort().height - topbarAsideTabs.outerHeight(true) - 60;            \r\n            }\r\n        });\r\n    }\r\n\r\n    var initLogs = function() {\r\n        var logs = mUtil.find( mUtil.get('m_quick_sidebar_tabs_logs'),  '.m-list-timeline'); \r\n\r\n        if (!logs) {\r\n            return;\r\n        }\r\n\r\n        mUtil.scrollerInit(logs, {\r\n            disableForMobile: true, \r\n            resetHeightOnDestroy: false, \r\n            handleWindowResize: true, \r\n            height: function() {\r\n                return mUtil.getViewPort().height - topbarAsideTabs.outerHeight(true) - 60;            \r\n            }\r\n        });\r\n    }\r\n\r\n    var initOffcanvasTabs = function() {\r\n        initMessages();\r\n        initSettings();\r\n        initLogs();\r\n    }\r\n\r\n    var initOffcanvas = function() {\r\n        var topbarAsideObj = new mOffcanvas('m_quick_sidebar', {\r\n            overlay: true,  \r\n            baseClass: 'm-quick-sidebar',\r\n            closeBy: 'm_quick_sidebar_close',\r\n            toggleBy: 'm_quick_sidebar_toggle'\r\n        });   \r\n\r\n        // run once on first time dropdown shown\r\n        topbarAsideObj.one('afterShow', function() {\r\n            mApp.block(topbarAside);\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(topbarAside);\r\n                \r\n                topbarAsideContent.removeClass('m--hide');\r\n\r\n                initOffcanvasTabs();\r\n            }, 1000);                         \r\n        });\r\n    }\r\n\r\n    return {     \r\n        init: function() {  \r\n            if (topbarAside.length === 0) {\r\n                return;\r\n            }\r\n\r\n            initOffcanvas(); \r\n        }\r\n    };\r\n}();\r\n\r\n$(document).ready(function() {\r\n    mQuickSidebar.init();\r\n});"],"file":"scripts.bundle.js"}